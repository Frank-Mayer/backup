{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "- `nvim --version`:\r\n```\r\nNVIM v0.5.0-dev+1182-gb79596eb5\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.0.5\r\nCompilation: /bin/cc -D_FORTIFY_SOURCE=2 -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -O2 -g -Og -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wmissing-prototypes -Wimplicit-fallthrough -Wvla -fstack-protector-strong -fno-common -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -DMIN_LOG_LEVEL=3 -I/home/snyssfx/.cache/yay/neovim-git/src/build/config -I/home/snyssfx/.cache/yay/neovim-git/src/neovim-git/src -I/usr/include -I/home/snyssfx/.cache/yay/neovim-git/src/build/src/nvim/auto -I/home/snyssfx/.cache/yay/neovim-git/src/build/include\r\nCompiled by snyssfx\r\n\r\nFeatures: +acl +iconv +tui\r\nSee \":help feature-compile\"\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/usr/share/nvim\"\r\n\r\nRun :checkhealth for more info\r\n```\r\n\r\n- nvim-lsp version(commit hash): `97bdebe`\r\n- What language server (If the problem is related to a specific language server): `gopls`\r\n- Can you reproduce this behavior on other language server clients (vscode, languageclient-neovim, coc.nvim, etc.): `vscode nope, coc.nvim yes`\r\n- Can you reproduce this behavior on other language servers offered in the nvim-lspconfig repo? (pyls -> pyright): `nope, since gopls is the only server for Go`\r\n- Is the problem isolated to a particular language server: `yes`\r\n- Operating system/version: \r\n```\r\nOS: Arch Linux x86_64 \r\nKernel: 5.11.9-arch1-1\r\n```\r\n\r\n### How to reproduce the problem from neovim startup\r\nJump to definition of the symbol in a submodule, which replaces its parent module in go.mod. \r\n\r\n### Actual behaviour\r\nYou cannot go to the definition of the symbols of the parent module, since neovim lsp sees go.mod in a directory, starts new server and then tries to replace parent module. But in `$GOPATH/pkg/mod` there is other modules hierarchy there, so gopls cannot find parent module and failes to go to definition with message:\r\n```\r\nmessage = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory : packages.Load error\",           \r\ntitle = \"Error loading workspace\"   \r\n```\r\n\r\n### Expected behaviour\r\nYou can go to definition of the symbols of the parent module from there.\r\n\r\n### Minimal init.vim or init.lua and code sample\r\nI use minimal_init.lua with gopls server,\r\nand created project with submodule for example here: https://github.com/Snyssfx/neovim-lspconfig-gopls-bug\r\nhow to reproduce:\r\n- create empty directrory\r\n- create 2 files there: go.mod:\r\n```\r\nmodule github.com/Snyssfx/neovim-lspconfig-main\r\n\r\ngo 1.16\r\n\r\nrequire github.com/Snyssfx/neovim-lspconfig-gopls-bug/another v0.0.0-20210328075753-65b65cceefa8 // indirect\r\n```\r\nand main.go:\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"github.com/Snyssfx/neovim-lspconfig-gopls-bug/another\"\r\n)\r\n\r\nfunc main() {\r\n\tanother.AnotherPrint()\r\n}\r\n```\r\nthen try to go to definition of `AnotherPrint` function and there try to go to definition of the `main_package.Print()`.\r\n\r\n### Health check\r\n<details>\r\n<summary>Checkhealth result</summary>\r\n<code>\r\nhealth#lspconfig#check\r\n========================================================================\r\n## Checking language server protocol configuration\r\n  - INFO: gopls: configuration checked.\r\n</code>\r\n</details>\r\n\r\n### LSP log\r\n<!-- If not using the minimal_init.lua please add vim.lsp.set_log_level(\"debug\") to your lua block \r\n     in init.vim and paste a link to your log file, located at  $HOME/.cache/nvim/lsp.log (formerly $HOME/.local/share/nvim/lsp.log) -->\r\n<details>\r\n<summary>Log file</summary>\r\n[ START ] 2021-03-28T12:17:59+0300 ] LSP logging initiated\r\n[ INFO ] 2021-03-28T12:17:59+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:311 ]\t\"Starting RPC client\"\t{  args = {},  cmd = \"gopls\",  extra = {}}\r\n[ DEBUG ] 2021-03-28T12:17:59+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:659 ]\t\"LSP[gopls]\"\t\"initialize_params\"\t{  capabilities = {    callHierarchy = {      dynamicRegistration = false,      <metatable> = <1>{        __tostring = <function 1>      }    },    textDocument = {      codeAction = {        codeActionLiteralSupport = {          codeActionKind = {            valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        dynamicRegistration = false,        <metatable> = <table 1>      },      completion = {        completionItem = {          commitCharactersSupport = false,          deprecatedSupport = false,          documentationFormat = { \"markdown\", \"plaintext\" },          preselectSupport = false,          snippetSupport = false,          <metatable> = <table 1>        },        completionItemKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },          <metatable> = <table 1>        },        contextSupport = false,        dynamicRegistration = false,        <metatable> = <table 1>      },      declaration = {        linkSupport = true,        <metatable> = <table 1>      },      definition = {        linkSupport = true,        <metatable> = <table 1>      },      documentHighlight = {        dynamicRegistration = false,        <metatable> = <table 1>      },      documentSymbol = {        dynamicRegistration = false,        hierarchicalDocumentSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      hover = {        contentFormat = { \"markdown\", \"plaintext\" },        dynamicRegistration = false,        <metatable> = <table 1>      },      implementation = {        linkSupport = true,        <metatable> = <table 1>      },      publishDiagnostics = {        relatedInformation = true,        tagSupport = {          valueSet = { 1, 2 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      references = {        dynamicRegistration = false,        <metatable> = <table 1>      },      rename = {        dynamicRegistration = false,        prepareSupport = true,        <metatable> = <table 1>      },      signatureHelp = {        dynamicRegistration = false,        signatureInformation = {          documentationFormat = { \"markdown\", \"plaintext\" },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      synchronization = {        didSave = true,        dynamicRegistration = false,        willSave = false,        willSaveWaitUntil = false,        <metatable> = <table 1>      },      typeDefinition = {        linkSupport = true,        <metatable> = <table 1>      },      <metatable> = <table 1>    },    window = {      showDocument = {        support = false,        <metatable> = <table 1>      },      showMessage = {        messageActionItem = {          additionalPropertiesSupport = false,          <metatable> = <table 1>        },        <metatable> = <table 1>      },      workDoneProgress = true,      <metatable> = <table 1>    },    workspace = {      applyEdit = true,      configuration = true,      symbol = {        dynamicRegistration = false,        hierarchicalWorkspaceSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      workspaceEdit = {        resourceOperations = { \"rename\", \"create\", \"delete\" },        <metatable> = <table 1>      },      workspaceFolders = true,      <metatable> = <table 1>    }  },  clientInfo = {    name = \"Neovim\",    version = \"0.5.0\"  },  initializationOptions = vim.empty_dict(),  processId = 41448,  rootPath = \"/home/snyssfx/private/neovim-lspconfig-main\",  rootUri = \"file:///home/snyssfx/private/neovim-lspconfig-main\",  trace = \"off\",  workspaceFolders = { {      name = \"/home/snyssfx/private/neovim-lspconfig-main\",      uri = \"file:///home/snyssfx/private/neovim-lspconfig-main\"    } }}\r\n[ DEBUG ] 2021-03-28T12:17:59+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"initialize\",  params = {    capabilities = {      callHierarchy = {        dynamicRegistration = false,        <metatable> = <1>{          __tostring = <function 1>        }      },      textDocument = {        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          dynamicRegistration = false,          <metatable> = <table 1>        },        completion = {          completionItem = {            commitCharactersSupport = false,            deprecatedSupport = false,            documentationFormat = { \"markdown\", \"plaintext\" },            preselectSupport = false,            snippetSupport = false,            <metatable> = <table 1>          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },            <metatable> = <table 1>          },          contextSupport = false,          dynamicRegistration = false,          <metatable> = <table 1>        },        declaration = {          linkSupport = true,          <metatable> = <table 1>        },        definition = {          linkSupport = true,          <metatable> = <table 1>        },        documentHighlight = {          dynamicRegistration = false,          <metatable> = <table 1>        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        hover = {          contentFormat = { \"markdown\", \"plaintext\" },          dynamicRegistration = false,          <metatable> = <table 1>        },        implementation = {          linkSupport = true,          <metatable> = <table 1>        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        references = {          dynamicRegistration = false,          <metatable> = <table 1>        },        rename = {          dynamicRegistration = false,          prepareSupport = true,          <metatable> = <table 1>        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            documentationFormat = { \"markdown\", \"plaintext\" },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = false,          willSaveWaitUntil = false,          <metatable> = <table 1>        },        typeDefinition = {          linkSupport = true,          <metatable> = <table 1>        },        <metatable> = <table 1>      },      window = {        showDocument = {          support = false,          <metatable> = <table 1>        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false,            <metatable> = <table 1>          },          <metatable> = <table 1>        },        workDoneProgress = true,        <metatable> = <table 1>      },      workspace = {        applyEdit = true,        configuration = true,        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        workspaceEdit = {          resourceOperations = { \"rename\", \"create\", \"delete\" },          <metatable> = <table 1>        },        workspaceFolders = true,        <metatable> = <table 1>      }    },    clientInfo = {      name = \"Neovim\",      version = \"0.5.0\"    },    initializationOptions = vim.empty_dict(),    processId = 41448,    rootPath = \"/home/snyssfx/private/neovim-lspconfig-main\",    rootUri = \"file:///home/snyssfx/private/neovim-lspconfig-main\",    trace = \"off\",    workspaceFolders = { {        name = \"/home/snyssfx/private/neovim-lspconfig-main\",        uri = \"file:///home/snyssfx/private/neovim-lspconfig-main\"      } }  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  id = 1,  jsonrpc = \"2.0\",  result = {    capabilities = {      callHierarchyProvider = true,      codeActionProvider = {        codeActionKinds = { \"quickfix\", \"refactor.extract\", \"refactor.rewrite\", \"source.fixAll\", \"source.organizeImports\" }      },      codeLensProvider = vim.empty_dict(),      completionProvider = {        triggerCharacters = { \".\" }      },      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = vim.empty_dict(),      documentOnTypeFormattingProvider = {        firstTriggerCharacter = \"\"      },      documentSymbolProvider = true,      executeCommandProvider = {        commands = { \"gopls.generate\", \"gopls.fill_struct\", \"gopls.regenerate_cgo\", \"gopls.test\", \"gopls.tidy\", \"gopls.update_go_sum\", \"gopls.undeclared_name\", \"gopls.go_get_package\", \"gopls.add_dependency\", \"gopls.upgrade_dependency\", \"gopls.remove_dependency\", \"gopls.vendor\", \"gopls.extract_variable\", \"gopls.extract_function\", \"gopls.gc_details\", \"gopls.generate_gopls_mod\" }      },      foldingRangeProvider = true,      hoverProvider = true,      implementationProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      signatureHelpProvider = {        triggerCharacters = { \"(\", \",\" }      },      textDocumentSync = {        change = 2,        openClose = true,        save = vim.empty_dict()      },      typeDefinitionProvider = true,      workspace = {        workspaceFolders = {          changeNotifications = \"workspace/didChangeWorkspaceFolders\",          supported = true        }      },      workspaceSymbolProvider = true    },    serverInfo = {      name = \"gopls\",      version = '{\"path\":\"golang.org/x/tools/gopls\",\"version\":\"(devel)\",\"deps\":[{\"path\":\"github.com/BurntSushi/toml\",\"version\":\"v0.3.1\",\"sum\":\"h1:WXkYYl6Yr3qBf1K79EBnL4mak0OimBfB0XUf9Vl28OQ=\"},{\"path\":\"github.com/google/go-cmp\",\"version\":\"v0.5.4\",\"sum\":\"h1:L8R9j+yAqZuZjsqh/z+F1NCffTKKLShY6zXTItVIZ8M=\"},{\"path\":\"github.com/sergi/go-diff\",\"version\":\"v1.1.0\",\"sum\":\"h1:we8PVUC3FE2uYfodKH/nBHMSetSfHDR6scGdBi+erh0=\"},{\"path\":\"golang.org/x/mod\",\"version\":\"v0.4.0\",\"sum\":\"h1:8pl+sMODzuvGJkmj2W4kZihvVb5mKm8pB/X44PIQHv8=\"},{\"path\":\"golang.org/x/sync\",\"version\":\"v0.0.0-20201020160332-67f06af15bc9\",\"sum\":\"h1:SQFwaSi55rU7vdNs9Yr0Z324VNlrF+0wMqRXT4St8ck=\"},{\"path\":\"golang.org/x/sys\",\"version\":\"v0.0.0-20210119212857-b64e53b001e4\",\"sum\":\"h1:myAQVi0cGEoqQVR5POX+8RR2mrocKqNN1hmeMqhX27k=\"},{\"path\":\"golang.org/x/tools\",\"version\":\"v0.1.1-0.20210119222907-0a1a9685734a\",\"sum\":\"h1:ttr/sghFptib3jlHwNS65KwGoqjr03TFzso3kpHyia8=\"},{\"path\":\"golang.org/x/xerrors\",\"version\":\"v0.0.0-20200804184101-5ec99f83aff1\",\"sum\":\"h1:go1bK/D/BFZV2I8cIQd1NKEZ+0owSTG1fDTci4IqFcE=\"},{\"path\":\"honnef.co/go/tools\",\"version\":\"v0.0.1-2020.1.6\",\"sum\":\"h1:W18jzjh8mfPez+AwGLxmOImucz/IFjpNlrKVnaj2YVc=\"},{\"path\":\"mvdan.cc/gofumpt\",\"version\":\"v0.1.0\",\"sum\":\"h1:hsVv+Y9UsZ/mFZTxJZuHVI6shSQCtzZ11h1JEFPAZLw=\"},{\"path\":\"mvdan.cc/xurls/v2\",\"version\":\"v2.2.0\",\"sum\":\"h1:NSZPykBXJFCetGZykLAxaL6SIpvbVy/UFEniIfHAa8A=\"}]}'    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"initialized\",  params = {    [true] = 6  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:686 ]\t\"LSP[gopls]\"\t\"server_capabilities\"\t{  callHierarchyProvider = true,  codeActionProvider = {    codeActionKinds = { \"quickfix\", \"refactor.extract\", \"refactor.rewrite\", \"source.fixAll\", \"source.organizeImports\" }  },  codeLensProvider = {},  completionProvider = {    triggerCharacters = { \".\" }  },  definitionProvider = true,  documentFormattingProvider = true,  documentHighlightProvider = true,  documentLinkProvider = {},  documentOnTypeFormattingProvider = {    firstTriggerCharacter = \"\"  },  documentSymbolProvider = true,  executeCommandProvider = {    commands = { \"gopls.generate\", \"gopls.fill_struct\", \"gopls.regenerate_cgo\", \"gopls.test\", \"gopls.tidy\", \"gopls.update_go_sum\", \"gopls.undeclared_name\", \"gopls.go_get_package\", \"gopls.add_dependency\", \"gopls.upgrade_dependency\", \"gopls.remove_dependency\", \"gopls.vendor\", \"gopls.extract_variable\", \"gopls.extract_function\", \"gopls.gc_details\", \"gopls.generate_gopls_mod\" }  },  foldingRangeProvider = true,  hoverProvider = true,  implementationProvider = true,  referencesProvider = true,  renameProvider = {    prepareProvider = true  },  signatureHelpProvider = {    triggerCharacters = { \"(\", \",\" }  },  textDocumentSync = {    change = 2,    openClose = true,    save = {}  },  typeDefinitionProvider = true,  workspace = {    workspaceFolders = {      changeNotifications = \"workspace/didChangeWorkspaceFolders\",      supported = true    }  },  workspaceSymbolProvider = true}\r\n[ INFO ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:687 ]\t\"LSP[gopls]\"\t\"initialized\"\t{  resolved_capabilities = {    call_hierarchy = true,    code_action = {      codeActionKinds = { \"quickfix\", \"refactor.extract\", \"refactor.rewrite\", \"source.fixAll\", \"source.organizeImports\" }    },    code_lens = true,    code_lens_resolve = false,    completion = true,    declaration = false,    document_formatting = true,    document_highlight = true,    document_range_formatting = false,    document_symbol = true,    execute_command = true,    find_references = true,    goto_definition = true,    hover = true,    implementation = true,    rename = true,    signature_help = true,    signature_help_trigger_characters = { \"(\", \",\" },    text_document_did_change = 2,    text_document_open_close = true,    text_document_save = {},    text_document_save_include_text = false,    text_document_will_save = false,    text_document_will_save_wait_until = false,    type_definition = true,    workspace_folder_properties = {      changeNotifications = \"workspace/didChangeWorkspaceFolders\",      supported = true    },    workspace_symbol = true  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didOpen\",  params = {    textDocument = {      languageId = \"go\",      text = 'package main\\n\\nimport (\\n\\t\"github.com/Snyssfx/neovim-lspconfig-gopls-bug/another\"\\n)\\n\\nfunc main() {\\n\\tanother.AnotherPrint()\\n}\\n',      uri = \"file:///home/snyssfx/private/neovim-lspconfig-main/main.go\",      version = 0    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 1,  params = {    diagnostics = {},    uri = \"file:///home/snyssfx/private/neovim-lspconfig-main/main.go\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"5577006791947779410\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:527 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"5577006791947779410\"}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:530 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  client_id = 1,  params = {    token = \"5577006791947779410\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:503 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 1,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"5577006791947779410\",    value = {      kind = \"begin\",      message = \"Loading packages...\",      title = \"Setting up workspace\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"$/progress\"\t{  token = \"5577006791947779410\",  value = {    kind = \"begin\",    message = \"Loading packages...\",    title = \"Setting up workspace\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"$/progress\"\t{  client_id = 1,  params = {    token = \"5577006791947779410\",    value = {      kind = \"begin\",      message = \"Loading packages...\",      title = \"Setting up workspace\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"workspace/configuration\",  params = {    items = { {        scopeUri = \"file:///home/snyssfx/private/neovim-lspconfig-main\",        section = \"gopls\"      } }  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:527 ]\t\"server_request\"\t\"workspace/configuration\"\t{  items = { {      scopeUri = \"file:///home/snyssfx/private/neovim-lspconfig-main\",      section = \"gopls\"    } }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:530 ]\t\"server_request: found handler for\"\t\"workspace/configuration\"\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"workspace/configuration\"\t{  client_id = 1,  params = {    items = { {        scopeUri = \"file:///home/snyssfx/private/neovim-lspconfig-main\",        section = \"gopls\"      } }  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:503 ]\t\"server_request: callback result\"\t{  result = { vim.NIL },  status = true}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 2,  jsonrpc = \"2.0\",  result = { vim.NIL }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:02 go env for /home/snyssfx/private/neovim-lspconfig-main\\n(root /home/snyssfx/private/neovim-lspconfig-main)\\n(go version go version go1.16.2 linux/amd64)\\n(valid build configuration = true)\\n(build flags: [])\\nGONOSUMDB=\\nGOPATH=/home/snyssfx/go\\nGOPRIVATE=\\nGOROOT=/usr/lib/go\\nGONOPROXY=\\nGOFLAGS=\\nGOINSECURE=\\nGOMODCACHE=/home/snyssfx/go/pkg/mod\\nGOPROXY=https://proxy.golang.org,direct\\nGOSUMDB=sum.golang.org\\nGO111MODULE=\\nGOMOD=/home/snyssfx/private/neovim-lspconfig-main/go.mod\\nGOCACHE=/home/snyssfx/.cache/go-build\\n\\n\",    type = 3  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:02 go env for /home/snyssfx/private/neovim-lspconfig-main\\n(root /home/snyssfx/private/neovim-lspconfig-main)\\n(go version go version go1.16.2 linux/amd64)\\n(valid build configuration = true)\\n(build flags: [])\\nGONOSUMDB=\\nGOPATH=/home/snyssfx/go\\nGOPRIVATE=\\nGOROOT=/usr/lib/go\\nGONOPROXY=\\nGOFLAGS=\\nGOINSECURE=\\nGOMODCACHE=/home/snyssfx/go/pkg/mod\\nGOPROXY=https://proxy.golang.org,direct\\nGOSUMDB=sum.golang.org\\nGO111MODULE=\\nGOMOD=/home/snyssfx/private/neovim-lspconfig-main/go.mod\\nGOCACHE=/home/snyssfx/.cache/go-build\\n\\n\",  type = 3}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 1,  params = {    message = \"2021/03/28 12:18:02 go env for /home/snyssfx/private/neovim-lspconfig-main\\n(root /home/snyssfx/private/neovim-lspconfig-main)\\n(go version go version go1.16.2 linux/amd64)\\n(valid build configuration = true)\\n(build flags: [])\\nGONOSUMDB=\\nGOPATH=/home/snyssfx/go\\nGOPRIVATE=\\nGOROOT=/usr/lib/go\\nGONOPROXY=\\nGOFLAGS=\\nGOINSECURE=\\nGOMODCACHE=/home/snyssfx/go/pkg/mod\\nGOPROXY=https://proxy.golang.org,direct\\nGOSUMDB=sum.golang.org\\nGO111MODULE=\\nGOMOD=/home/snyssfx/private/neovim-lspconfig-main/go.mod\\nGOCACHE=/home/snyssfx/.cache/go-build\\n\\n\",    type = 3  }}\r\n[ INFO ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:381 ]\t\"2021/03/28 12:18:02 go env for /home/snyssfx/private/neovim-lspconfig-main\\n(root /home/snyssfx/private/neovim-lspconfig-main)\\n(go version go version go1.16.2 linux/amd64)\\n(valid build configuration = true)\\n(build flags: [])\\nGONOSUMDB=\\nGOPATH=/home/snyssfx/go\\nGOPRIVATE=\\nGOROOT=/usr/lib/go\\nGONOPROXY=\\nGOFLAGS=\\nGOINSECURE=\\nGOMODCACHE=/home/snyssfx/go/pkg/mod\\nGOPROXY=https://proxy.golang.org,direct\\nGOSUMDB=sum.golang.org\\nGO111MODULE=\\nGOMOD=/home/snyssfx/private/neovim-lspconfig-main/go.mod\\nGOCACHE=/home/snyssfx/.cache/go-build\\n\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:02 go/packages.Load\\n\\tsnapshot=0\\n\\tdirectory=/home/snyssfx/private/neovim-lspconfig-main\\n\\tquery=[builtin github.com/Snyssfx/neovim-lspconfig-main/...]\\n\\tpackages=2\\n\",    type = 3  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:02 go/packages.Load\\n\\tsnapshot=0\\n\\tdirectory=/home/snyssfx/private/neovim-lspconfig-main\\n\\tquery=[builtin github.com/Snyssfx/neovim-lspconfig-main/...]\\n\\tpackages=2\\n\",  type = 3}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 1,  params = {    message = \"2021/03/28 12:18:02 go/packages.Load\\n\\tsnapshot=0\\n\\tdirectory=/home/snyssfx/private/neovim-lspconfig-main\\n\\tquery=[builtin github.com/Snyssfx/neovim-lspconfig-main/...]\\n\\tpackages=2\\n\",    type = 3  }}\r\n[ INFO ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:381 ]\t\"2021/03/28 12:18:02 go/packages.Load\\n\\tsnapshot=0\\n\\tdirectory=/home/snyssfx/private/neovim-lspconfig-main\\n\\tquery=[builtin github.com/Snyssfx/neovim-lspconfig-main/...]\\n\\tpackages=2\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"5577006791947779410\",    value = {      kind = \"end\",      message = \"Finished loading packages.\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"$/progress\"\t{  token = \"5577006791947779410\",  value = {    kind = \"end\",    message = \"Finished loading packages.\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"$/progress\"\t{  client_id = 1,  params = {    token = \"5577006791947779410\",    value = {      kind = \"end\",      message = \"Finished loading packages.\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = { {        message = \"github.com/Snyssfx/neovim-lspconfig-gopls-bug/another should be direct\",        range = {          end = {            character = 108,            line = 4          },          start = {            character = 97,            line = 4          }        },        severity = 2,        source = \"go mod tidy\"      } },    uri = \"file:///home/snyssfx/private/neovim-lspconfig-main/go.mod\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"textDocument/publishDiagnostics\"\t{  diagnostics = { {      message = \"github.com/Snyssfx/neovim-lspconfig-gopls-bug/another should be direct\",      range = {        end = {          character = 108,          line = 4        },        start = {          character = 97,          line = 4        }      },      severity = 2,      source = \"go mod tidy\"    } },  uri = \"file:///home/snyssfx/private/neovim-lspconfig-main/go.mod\"}\r\n[ DEBUG ] 2021-03-28T12:18:02+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 1,  params = {    diagnostics = { {        message = \"github.com/Snyssfx/neovim-lspconfig-gopls-bug/another should be direct\",        range = {          end = {            character = 108,            line = 4          },          start = {            character = 97,            line = 4          }        },        severity = 2,        source = \"go mod tidy\"      } },    uri = \"file:///home/snyssfx/private/neovim-lspconfig-main/go.mod\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:724 ]\t\"LSP[gopls]\"\t\"client.request\"\t1\t\"textDocument/definition\"\t{  position = {    character = 16,    line = 7  },  textDocument = {    uri = \"file:///home/snyssfx/private/neovim-lspconfig-main/main.go\"  }}\t<function 1>\t1\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"textDocument/definition\",  params = {    position = {      character = 16,      line = 7    },    textDocument = {      uri = \"file:///home/snyssfx/private/neovim-lspconfig-main/main.go\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  id = 2,  jsonrpc = \"2.0\",  result = { {      range = {        end = {          character = 17,          line = 6        },        start = {          character = 5,          line = 6        }      },      uri = \"file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go\"    } }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"textDocument/definition\"\t{  bufnr = 1,  client_id = 1,  params = { {      range = {        end = {          character = 17,          line = 6        },        start = {          character = 5,          line = 6        }      },      uri = \"file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go\"    } }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didClose\",  params = {    textDocument = {      uri = \"file:///home/snyssfx/private/neovim-lspconfig-main/main.go\"    }  }}\r\n[ INFO ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:311 ]\t\"Starting RPC client\"\t{  args = {},  cmd = \"gopls\",  extra = {}}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:659 ]\t\"LSP[gopls]\"\t\"initialize_params\"\t{  capabilities = {    callHierarchy = {      dynamicRegistration = false,      <metatable> = <1>{        __tostring = <function 1>      }    },    textDocument = {      codeAction = {        codeActionLiteralSupport = {          codeActionKind = {            valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        dynamicRegistration = false,        <metatable> = <table 1>      },      completion = {        completionItem = {          commitCharactersSupport = false,          deprecatedSupport = false,          documentationFormat = { \"markdown\", \"plaintext\" },          preselectSupport = false,          snippetSupport = false,          <metatable> = <table 1>        },        completionItemKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },          <metatable> = <table 1>        },        contextSupport = false,        dynamicRegistration = false,        <metatable> = <table 1>      },      declaration = {        linkSupport = true,        <metatable> = <table 1>      },      definition = {        linkSupport = true,        <metatable> = <table 1>      },      documentHighlight = {        dynamicRegistration = false,        <metatable> = <table 1>      },      documentSymbol = {        dynamicRegistration = false,        hierarchicalDocumentSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      hover = {        contentFormat = { \"markdown\", \"plaintext\" },        dynamicRegistration = false,        <metatable> = <table 1>      },      implementation = {        linkSupport = true,        <metatable> = <table 1>      },      publishDiagnostics = {        relatedInformation = true,        tagSupport = {          valueSet = { 1, 2 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      references = {        dynamicRegistration = false,        <metatable> = <table 1>      },      rename = {        dynamicRegistration = false,        prepareSupport = true,        <metatable> = <table 1>      },      signatureHelp = {        dynamicRegistration = false,        signatureInformation = {          documentationFormat = { \"markdown\", \"plaintext\" },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      synchronization = {        didSave = true,        dynamicRegistration = false,        willSave = false,        willSaveWaitUntil = false,        <metatable> = <table 1>      },      typeDefinition = {        linkSupport = true,        <metatable> = <table 1>      },      <metatable> = <table 1>    },    window = {      showDocument = {        support = false,        <metatable> = <table 1>      },      showMessage = {        messageActionItem = {          additionalPropertiesSupport = false,          <metatable> = <table 1>        },        <metatable> = <table 1>      },      workDoneProgress = true,      <metatable> = <table 1>    },    workspace = {      applyEdit = true,      configuration = true,      symbol = {        dynamicRegistration = false,        hierarchicalWorkspaceSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      workspaceEdit = {        resourceOperations = { \"rename\", \"create\", \"delete\" },        <metatable> = <table 1>      },      workspaceFolders = true,      <metatable> = <table 1>    }  },  clientInfo = {    name = \"Neovim\",    version = \"0.5.0\"  },  initializationOptions = vim.empty_dict(),  processId = 41448,  rootPath = \"/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\",  rootUri = \"file:///home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\",  trace = \"off\",  workspaceFolders = { {      name = \"/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\",      uri = \"file:///home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\"    } }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"initialize\",  params = {    capabilities = {      callHierarchy = {        dynamicRegistration = false,        <metatable> = <1>{          __tostring = <function 1>        }      },      textDocument = {        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          dynamicRegistration = false,          <metatable> = <table 1>        },        completion = {          completionItem = {            commitCharactersSupport = false,            deprecatedSupport = false,            documentationFormat = { \"markdown\", \"plaintext\" },            preselectSupport = false,            snippetSupport = false,            <metatable> = <table 1>          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },            <metatable> = <table 1>          },          contextSupport = false,          dynamicRegistration = false,          <metatable> = <table 1>        },        declaration = {          linkSupport = true,          <metatable> = <table 1>        },        definition = {          linkSupport = true,          <metatable> = <table 1>        },        documentHighlight = {          dynamicRegistration = false,          <metatable> = <table 1>        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        hover = {          contentFormat = { \"markdown\", \"plaintext\" },          dynamicRegistration = false,          <metatable> = <table 1>        },        implementation = {          linkSupport = true,          <metatable> = <table 1>        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        references = {          dynamicRegistration = false,          <metatable> = <table 1>        },        rename = {          dynamicRegistration = false,          prepareSupport = true,          <metatable> = <table 1>        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            documentationFormat = { \"markdown\", \"plaintext\" },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = false,          willSaveWaitUntil = false,          <metatable> = <table 1>        },        typeDefinition = {          linkSupport = true,          <metatable> = <table 1>        },        <metatable> = <table 1>      },      window = {        showDocument = {          support = false,          <metatable> = <table 1>        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false,            <metatable> = <table 1>          },          <metatable> = <table 1>        },        workDoneProgress = true,        <metatable> = <table 1>      },      workspace = {        applyEdit = true,        configuration = true,        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        workspaceEdit = {          resourceOperations = { \"rename\", \"create\", \"delete\" },          <metatable> = <table 1>        },        workspaceFolders = true,        <metatable> = <table 1>      }    },    clientInfo = {      name = \"Neovim\",      version = \"0.5.0\"    },    initializationOptions = vim.empty_dict(),    processId = 41448,    rootPath = \"/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\",    rootUri = \"file:///home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\",    trace = \"off\",    workspaceFolders = { {        name = \"/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\",        uri = \"file:///home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\"      } }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  id = 1,  jsonrpc = \"2.0\",  result = {    capabilities = {      callHierarchyProvider = true,      codeActionProvider = {        codeActionKinds = { \"quickfix\", \"refactor.extract\", \"refactor.rewrite\", \"source.fixAll\", \"source.organizeImports\" }      },      codeLensProvider = vim.empty_dict(),      completionProvider = {        triggerCharacters = { \".\" }      },      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = vim.empty_dict(),      documentOnTypeFormattingProvider = {        firstTriggerCharacter = \"\"      },      documentSymbolProvider = true,      executeCommandProvider = {        commands = { \"gopls.generate\", \"gopls.fill_struct\", \"gopls.regenerate_cgo\", \"gopls.test\", \"gopls.tidy\", \"gopls.update_go_sum\", \"gopls.undeclared_name\", \"gopls.go_get_package\", \"gopls.add_dependency\", \"gopls.upgrade_dependency\", \"gopls.remove_dependency\", \"gopls.vendor\", \"gopls.extract_variable\", \"gopls.extract_function\", \"gopls.gc_details\", \"gopls.generate_gopls_mod\" }      },      foldingRangeProvider = true,      hoverProvider = true,      implementationProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      signatureHelpProvider = {        triggerCharacters = { \"(\", \",\" }      },      textDocumentSync = {        change = 2,        openClose = true,        save = vim.empty_dict()      },      typeDefinitionProvider = true,      workspace = {        workspaceFolders = {          changeNotifications = \"workspace/didChangeWorkspaceFolders\",          supported = true        }      },      workspaceSymbolProvider = true    },    serverInfo = {      name = \"gopls\",      version = '{\"path\":\"golang.org/x/tools/gopls\",\"version\":\"(devel)\",\"deps\":[{\"path\":\"github.com/BurntSushi/toml\",\"version\":\"v0.3.1\",\"sum\":\"h1:WXkYYl6Yr3qBf1K79EBnL4mak0OimBfB0XUf9Vl28OQ=\"},{\"path\":\"github.com/google/go-cmp\",\"version\":\"v0.5.4\",\"sum\":\"h1:L8R9j+yAqZuZjsqh/z+F1NCffTKKLShY6zXTItVIZ8M=\"},{\"path\":\"github.com/sergi/go-diff\",\"version\":\"v1.1.0\",\"sum\":\"h1:we8PVUC3FE2uYfodKH/nBHMSetSfHDR6scGdBi+erh0=\"},{\"path\":\"golang.org/x/mod\",\"version\":\"v0.4.0\",\"sum\":\"h1:8pl+sMODzuvGJkmj2W4kZihvVb5mKm8pB/X44PIQHv8=\"},{\"path\":\"golang.org/x/sync\",\"version\":\"v0.0.0-20201020160332-67f06af15bc9\",\"sum\":\"h1:SQFwaSi55rU7vdNs9Yr0Z324VNlrF+0wMqRXT4St8ck=\"},{\"path\":\"golang.org/x/sys\",\"version\":\"v0.0.0-20210119212857-b64e53b001e4\",\"sum\":\"h1:myAQVi0cGEoqQVR5POX+8RR2mrocKqNN1hmeMqhX27k=\"},{\"path\":\"golang.org/x/tools\",\"version\":\"v0.1.1-0.20210119222907-0a1a9685734a\",\"sum\":\"h1:ttr/sghFptib3jlHwNS65KwGoqjr03TFzso3kpHyia8=\"},{\"path\":\"golang.org/x/xerrors\",\"version\":\"v0.0.0-20200804184101-5ec99f83aff1\",\"sum\":\"h1:go1bK/D/BFZV2I8cIQd1NKEZ+0owSTG1fDTci4IqFcE=\"},{\"path\":\"honnef.co/go/tools\",\"version\":\"v0.0.1-2020.1.6\",\"sum\":\"h1:W18jzjh8mfPez+AwGLxmOImucz/IFjpNlrKVnaj2YVc=\"},{\"path\":\"mvdan.cc/gofumpt\",\"version\":\"v0.1.0\",\"sum\":\"h1:hsVv+Y9UsZ/mFZTxJZuHVI6shSQCtzZ11h1JEFPAZLw=\"},{\"path\":\"mvdan.cc/xurls/v2\",\"version\":\"v2.2.0\",\"sum\":\"h1:NSZPykBXJFCetGZykLAxaL6SIpvbVy/UFEniIfHAa8A=\"}]}'    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"initialized\",  params = {    [true] = 6  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:686 ]\t\"LSP[gopls]\"\t\"server_capabilities\"\t{  callHierarchyProvider = true,  codeActionProvider = {    codeActionKinds = { \"quickfix\", \"refactor.extract\", \"refactor.rewrite\", \"source.fixAll\", \"source.organizeImports\" }  },  codeLensProvider = {},  completionProvider = {    triggerCharacters = { \".\" }  },  definitionProvider = true,  documentFormattingProvider = true,  documentHighlightProvider = true,  documentLinkProvider = {},  documentOnTypeFormattingProvider = {    firstTriggerCharacter = \"\"  },  documentSymbolProvider = true,  executeCommandProvider = {    commands = { \"gopls.generate\", \"gopls.fill_struct\", \"gopls.regenerate_cgo\", \"gopls.test\", \"gopls.tidy\", \"gopls.update_go_sum\", \"gopls.undeclared_name\", \"gopls.go_get_package\", \"gopls.add_dependency\", \"gopls.upgrade_dependency\", \"gopls.remove_dependency\", \"gopls.vendor\", \"gopls.extract_variable\", \"gopls.extract_function\", \"gopls.gc_details\", \"gopls.generate_gopls_mod\" }  },  foldingRangeProvider = true,  hoverProvider = true,  implementationProvider = true,  referencesProvider = true,  renameProvider = {    prepareProvider = true  },  signatureHelpProvider = {    triggerCharacters = { \"(\", \",\" }  },  textDocumentSync = {    change = 2,    openClose = true,    save = {}  },  typeDefinitionProvider = true,  workspace = {    workspaceFolders = {      changeNotifications = \"workspace/didChangeWorkspaceFolders\",      supported = true    }  },  workspaceSymbolProvider = true}\r\n[ INFO ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:687 ]\t\"LSP[gopls]\"\t\"initialized\"\t{  resolved_capabilities = {    call_hierarchy = true,    code_action = {      codeActionKinds = { \"quickfix\", \"refactor.extract\", \"refactor.rewrite\", \"source.fixAll\", \"source.organizeImports\" }    },    code_lens = true,    code_lens_resolve = false,    completion = true,    declaration = false,    document_formatting = true,    document_highlight = true,    document_range_formatting = false,    document_symbol = true,    execute_command = true,    find_references = true,    goto_definition = true,    hover = true,    implementation = true,    rename = true,    signature_help = true,    signature_help_trigger_characters = { \"(\", \",\" },    text_document_did_change = 2,    text_document_open_close = true,    text_document_save = {},    text_document_save_include_text = false,    text_document_will_save = false,    text_document_will_save_wait_until = false,    type_definition = true,    workspace_folder_properties = {      changeNotifications = \"workspace/didChangeWorkspaceFolders\",      supported = true    },    workspace_symbol = true  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didOpen\",  params = {    textDocument = {      languageId = \"go\",      text = 'package another\\n\\nimport (\\n\\tmain_package \"github.com/Snyssfx/neovim-lspconfig-gopls-bug\"\\n)\\n\\nfunc AnotherPrint() {\\n\\tprintln(\"in another package\")\\n\\tmain_package.Print()\\n}\\n',      uri = \"file:///home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go\",      version = 0    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 2,  params = {    diagnostics = {},    uri = \"file:///home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"5577006791947779410\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:527 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"5577006791947779410\"}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:530 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  client_id = 2,  params = {    token = \"5577006791947779410\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:503 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 1,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"5577006791947779410\",    value = {      kind = \"begin\",      message = \"Loading packages...\",      title = \"Setting up workspace\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"$/progress\"\t{  token = \"5577006791947779410\",  value = {    kind = \"begin\",    message = \"Loading packages...\",    title = \"Setting up workspace\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"$/progress\"\t{  client_id = 2,  params = {    token = \"5577006791947779410\",    value = {      kind = \"begin\",      message = \"Loading packages...\",      title = \"Setting up workspace\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"workspace/configuration\",  params = {    items = { {        scopeUri = \"file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\",        section = \"gopls\"      } }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:527 ]\t\"server_request\"\t\"workspace/configuration\"\t{  items = { {      scopeUri = \"file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\",      section = \"gopls\"    } }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:530 ]\t\"server_request: found handler for\"\t\"workspace/configuration\"\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"workspace/configuration\"\t{  client_id = 2,  params = {    items = { {        scopeUri = \"file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\",        section = \"gopls\"      } }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:503 ]\t\"server_request: callback result\"\t{  result = { vim.NIL },  status = true}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 2,  jsonrpc = \"2.0\",  result = { vim.NIL }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:04 go env for /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n(root /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8)\\n(go version go version go1.16.2 linux/amd64)\\n(valid build configuration = true)\\n(build flags: [])\\nGOROOT=/usr/lib/go\\nGOCACHE=/home/snyssfx/.cache/go-build\\nGOFLAGS=\\nGONOPROXY=\\nGOSUMDB=sum.golang.org\\nGOMOD=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/go.mod\\nGOPATH=/home/snyssfx/go\\nGOMODCACHE=/home/snyssfx/go/pkg/mod\\nGONOSUMDB=\\nGOPRIVATE=\\nGOPROXY=https://proxy.golang.org,direct\\nGO111MODULE=\\nGOINSECURE=\\n\\n\",    type = 3  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:04 go env for /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n(root /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8)\\n(go version go version go1.16.2 linux/amd64)\\n(valid build configuration = true)\\n(build flags: [])\\nGOROOT=/usr/lib/go\\nGOCACHE=/home/snyssfx/.cache/go-build\\nGOFLAGS=\\nGONOPROXY=\\nGOSUMDB=sum.golang.org\\nGOMOD=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/go.mod\\nGOPATH=/home/snyssfx/go\\nGOMODCACHE=/home/snyssfx/go/pkg/mod\\nGONOSUMDB=\\nGOPRIVATE=\\nGOPROXY=https://proxy.golang.org,direct\\nGO111MODULE=\\nGOINSECURE=\\n\\n\",  type = 3}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:04 go env for /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n(root /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8)\\n(go version go version go1.16.2 linux/amd64)\\n(valid build configuration = true)\\n(build flags: [])\\nGOROOT=/usr/lib/go\\nGOCACHE=/home/snyssfx/.cache/go-build\\nGOFLAGS=\\nGONOPROXY=\\nGOSUMDB=sum.golang.org\\nGOMOD=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/go.mod\\nGOPATH=/home/snyssfx/go\\nGOMODCACHE=/home/snyssfx/go/pkg/mod\\nGONOSUMDB=\\nGOPRIVATE=\\nGOPROXY=https://proxy.golang.org,direct\\nGO111MODULE=\\nGOINSECURE=\\n\\n\",    type = 3  }}\r\n[ INFO ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:381 ]\t\"2021/03/28 12:18:04 go env for /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n(root /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8)\\n(go version go version go1.16.2 linux/amd64)\\n(valid build configuration = true)\\n(build flags: [])\\nGOROOT=/usr/lib/go\\nGOCACHE=/home/snyssfx/.cache/go-build\\nGOFLAGS=\\nGONOPROXY=\\nGOSUMDB=sum.golang.org\\nGOMOD=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/go.mod\\nGOPATH=/home/snyssfx/go\\nGOMODCACHE=/home/snyssfx/go/pkg/mod\\nGONOSUMDB=\\nGOPRIVATE=\\nGOPROXY=https://proxy.golang.org,direct\\nGO111MODULE=\\nGOINSECURE=\\n\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:04 creating workspace dir: mkdir /tmp/gopls-41448.workspace: file exists\\n\",    type = 1  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:04 creating workspace dir: mkdir /tmp/gopls-41448.workspace: file exists\\n\",  type = 1}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:04 creating workspace dir: mkdir /tmp/gopls-41448.workspace: file exists\\n\",    type = 1  }}\r\n[ ERROR ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:377 ]\t\"2021/03/28 12:18:04 creating workspace dir: mkdir /tmp/gopls-41448.workspace: file exists\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:04 initial workspace load failed: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\",    type = 1  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:04 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=0\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[builtin github.com/Snyssfx/neovim-lspconfig-gopls-bug/another/...]\\n\\tpackages=0\\n\",    type = 1  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"5577006791947779410\",    value = {      kind = \"end\",      message = \"Finished loading packages.\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:04 initial workspace load failed: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\",  type = 1}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:04 initial workspace load failed: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\",    type = 1  }}\r\n[ ERROR ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:377 ]\t\"2021/03/28 12:18:04 initial workspace load failed: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:04 errors loading workspace: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tsnapshot=0\\n\\tdirectory=file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\",    type = 1  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:04 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=0\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[builtin github.com/Snyssfx/neovim-lspconfig-gopls-bug/another/...]\\n\\tpackages=0\\n\",  type = 1}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:04 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=0\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[builtin github.com/Snyssfx/neovim-lspconfig-gopls-bug/another/...]\\n\\tpackages=0\\n\",    type = 1  }}\r\n[ ERROR ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:377 ]\t\"2021/03/28 12:18:04 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=0\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[builtin github.com/Snyssfx/neovim-lspconfig-gopls-bug/another/...]\\n\\tpackages=0\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  id = 3,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"8674665223082153551\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"$/progress\"\t{  token = \"5577006791947779410\",  value = {    kind = \"end\",    message = \"Finished loading packages.\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"$/progress\"\t{  client_id = 2,  params = {    token = \"5577006791947779410\",    value = {      kind = \"end\",      message = \"Finished loading packages.\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:04 errors loading workspace: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tsnapshot=0\\n\\tdirectory=file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\",  type = 1}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:04 errors loading workspace: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tsnapshot=0\\n\\tdirectory=file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\",    type = 1  }}\r\n[ ERROR ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:377 ]\t\"2021/03/28 12:18:04 errors loading workspace: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tsnapshot=0\\n\\tdirectory=file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:527 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"8674665223082153551\"}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:530 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  client_id = 2,  params = {    token = \"8674665223082153551\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:503 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 3,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"8674665223082153551\",    value = {      kind = \"begin\",      message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory : packages.Load error\",      title = \"Error loading workspace\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"$/progress\"\t{  token = \"8674665223082153551\",  value = {    kind = \"begin\",    message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory : packages.Load error\",    title = \"Error loading workspace\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"$/progress\"\t{  client_id = 2,  params = {    token = \"8674665223082153551\",    value = {      kind = \"begin\",      message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory : packages.Load error\",      title = \"Error loading workspace\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = { {        message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\",        range = {          end = {            character = 88,            line = 4          },          start = {            character = 0,            line = 4          }        },        severity = 1      } },    uri = \"file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/go.mod\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"textDocument/publishDiagnostics\"\t{  diagnostics = { {      message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\",      range = {        end = {          character = 88,          line = 4        },        start = {          character = 0,          line = 4        }      },      severity = 1    } },  uri = \"file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/go.mod\"}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 2,  params = {    diagnostics = { {        message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\",        range = {          end = {            character = 88,            line = 4          },          start = {            character = 0,            line = 4          }        },        severity = 1      } },    uri = \"file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/go.mod\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:04 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",    type = 1  }}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:04 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",  type = 1}\r\n[ DEBUG ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:04 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",    type = 1  }}\r\n[ ERROR ] 2021-03-28T12:18:04+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:377 ]\t\"2021/03/28 12:18:04 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:05 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",    type = 1  }}\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:05 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",  type = 1}\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:05 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",    type = 1  }}\r\n[ ERROR ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:377 ]\t\"2021/03/28 12:18:05 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:05 reloadOrphanedFiles: failed to load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tquery=[file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\",    type = 1  }}\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"8674665223082153551\",    value = {      kind = \"report\",      message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory : packages.Load error\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:05 errors loading workspace: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tsnapshot=1\\n\\tdirectory=file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\",    type = 1  }}\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:05 reloadOrphanedFiles: failed to load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tquery=[file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\",  type = 1}\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:05 reloadOrphanedFiles: failed to load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tquery=[file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\",    type = 1  }}\r\n[ ERROR ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:377 ]\t\"2021/03/28 12:18:05 reloadOrphanedFiles: failed to load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tquery=[file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"$/progress\"\t{  token = \"8674665223082153551\",  value = {    kind = \"report\",    message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory : packages.Load error\"  }}\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"$/progress\"\t{  client_id = 2,  params = {    token = \"8674665223082153551\",    value = {      kind = \"report\",      message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory : packages.Load error\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:05 errors loading workspace: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tsnapshot=1\\n\\tdirectory=file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\",  type = 1}\r\n[ DEBUG ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:05 errors loading workspace: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tsnapshot=1\\n\\tdirectory=file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\",    type = 1  }}\r\n[ ERROR ] 2021-03-28T12:18:05+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:377 ]\t\"2021/03/28 12:18:05 errors loading workspace: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\\n\\tsnapshot=1\\n\\tdirectory=file:///home/snyssfx/go/pkg/mod/github.com/%21snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:06+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:724 ]\t\"LSP[gopls]\"\t\"client.request\"\t2\t\"textDocument/definition\"\t{  position = {    character = 14,    line = 8  },  textDocument = {    uri = \"file:///home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go\"  }}\t<function 1>\t3\r\n[ DEBUG ] 2021-03-28T12:18:06+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"textDocument/definition\",  params = {    position = {      character = 14,      line = 8    },    textDocument = {      uri = \"file:///home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:06+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  error = {    code = 0,    message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\"  },  id = 2,  jsonrpc = \"2.0\"}\r\n[ DEBUG ] 2021-03-28T12:18:06+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:06 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",    type = 1  }}\r\n[ DEBUG ] 2021-03-28T12:18:06+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:06 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",  type = 1}\r\n[ DEBUG ] 2021-03-28T12:18:06+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:06 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",    type = 1  }}\r\n[ ERROR ] 2021-03-28T12:18:06+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:377 ]\t\"2021/03/28 12:18:06 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:06+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:724 ]\t\"LSP[gopls]\"\t\"client.request\"\t2\t\"textDocument/definition\"\t{  position = {    character = 14,    line = 8  },  textDocument = {    uri = \"file:///home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go\"  }}\t<function 1>\t3\r\n[ DEBUG ] 2021-03-28T12:18:06+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 3,  jsonrpc = \"2.0\",  method = \"textDocument/definition\",  params = {    position = {      character = 14,      line = 8    },    textDocument = {      uri = \"file:///home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go\"    }  }}\r\n[ DEBUG ] 2021-03-28T12:18:07+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  error = {    code = 0,    message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n: packages.Load error\"  },  id = 3,  jsonrpc = \"2.0\"}\r\n[ DEBUG ] 2021-03-28T12:18:07+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:07 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",    type = 1  }}\r\n[ DEBUG ] 2021-03-28T12:18:07+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:07 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",  type = 1}\r\n[ DEBUG ] 2021-03-28T12:18:07+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:07 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\",    type = 1  }}\r\n[ ERROR ] 2021-03-28T12:18:07+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:377 ]\t\"2021/03/28 12:18:07 go/packages.Load: err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory\\n\\n\\tsnapshot=1\\n\\tdirectory=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\\n\\tquery=[file=/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8/another.go]\\n\\tpackages=0\\n\"\r\n[ INFO ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:1040 ]\t\"exit_handler\"\t{ {    _cached_buffers = {},    _on_attach = <function 1>,    cancel_request = <function 2>,    config = {      _on_attach = <function 3>,      capabilities = {        callHierarchy = {          dynamicRegistration = false,          <metatable> = <1>{            __tostring = <function 4>          }        },        textDocument = {          codeAction = {            codeActionLiteralSupport = {              codeActionKind = {                valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" },                <metatable> = <table 1>              },              <metatable> = <table 1>            },            dynamicRegistration = false,            <metatable> = <table 1>          },          completion = {            completionItem = {              commitCharactersSupport = false,              deprecatedSupport = false,              documentationFormat = { \"markdown\", \"plaintext\" },              preselectSupport = false,              snippetSupport = false,              <metatable> = <table 1>            },            completionItemKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },              <metatable> = <table 1>            },            contextSupport = false,            dynamicRegistration = false,            <metatable> = <table 1>          },          declaration = {            linkSupport = true,            <metatable> = <table 1>          },          definition = {            linkSupport = true,            <metatable> = <table 1>          },          documentHighlight = {            dynamicRegistration = false,            <metatable> = <table 1>          },          documentSymbol = {            dynamicRegistration = false,            hierarchicalDocumentSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          hover = {            contentFormat = { \"markdown\", \"plaintext\" },            dynamicRegistration = false,            <metatable> = <table 1>          },          implementation = {            linkSupport = true,            <metatable> = <table 1>          },          publishDiagnostics = {            relatedInformation = true,            tagSupport = {              valueSet = { 1, 2 },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          references = {            dynamicRegistration = false,            <metatable> = <table 1>          },          rename = {            dynamicRegistration = false,            prepareSupport = true,            <metatable> = <table 1>          },          signatureHelp = {            dynamicRegistration = false,            signatureInformation = {              documentationFormat = { \"markdown\", \"plaintext\" },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          synchronization = {            didSave = true,            dynamicRegistration = false,            willSave = false,            willSaveWaitUntil = false,            <metatable> = <table 1>          },          typeDefinition = {            linkSupport = true,            <metatable> = <table 1>          },          <metatable> = <table 1>        },        window = {          showDocument = {            support = false,            <metatable> = <table 1>          },          showMessage = {            messageActionItem = {              additionalPropertiesSupport = false,              <metatable> = <table 1>            },            <metatable> = <table 1>          },          workDoneProgress = true,          <metatable> = <table 1>        },        workspace = {          applyEdit = true,          configuration = true,          symbol = {            dynamicRegistration = false,            hierarchicalWorkspaceSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          workspaceEdit = {            resourceOperations = { \"rename\", \"create\", \"delete\" },            <metatable> = <table 1>          },          workspaceFolders = true,          <metatable> = <table 1>        }      },      cmd = <2>{ \"gopls\" },      filetypes = <3>{ \"go\", \"gomod\" },      flags = {},      get_language_id = <function 5>,      handlers = <4>{},      init_options = vim.empty_dict(),      log_level = 2,      message_level = 2,      name = \"gopls\",      on_attach = <function 6>,      on_exit = <function 7>,      on_init = <function 8>,      root_dir = \"/home/snyssfx/private/neovim-lspconfig-main\",      settings = vim.empty_dict(),      <metatable> = <table 1>    },    handlers = <table 4>,    id = 1,    initialized = true,    is_stopped = <function 9>,    messages = {      messages = {},      name = \"gopls\",      progress = {        [\"5577006791947779410\"] = {          done = true,          message = \"Finished loading packages.\",          title = \"Setting up workspace\"        }      },      status = {}    },    name = \"gopls\",    notify = <function 10>,    offset_encoding = \"utf-16\",    request = <function 11>,    resolved_capabilities = {      call_hierarchy = true,      code_action = <5>{        codeActionKinds = { \"quickfix\", \"refactor.extract\", \"refactor.rewrite\", \"source.fixAll\", \"source.organizeImports\" }      },      code_lens = true,      code_lens_resolve = false,      completion = true,      declaration = false,      document_formatting = true,      document_highlight = true,      document_range_formatting = false,      document_symbol = true,      execute_command = true,      find_references = true,      goto_definition = true,      hover = true,      implementation = true,      rename = true,      signature_help = true,      signature_help_trigger_characters = <6>{ \"(\", \",\" },      text_document_did_change = 2,      text_document_open_close = true,      text_document_save = <7>{},      text_document_save_include_text = false,      text_document_will_save = false,      text_document_will_save_wait_until = false,      type_definition = true,      workspace_folder_properties = {        changeNotifications = \"workspace/didChangeWorkspaceFolders\",        supported = true      },      workspace_symbol = true    },    rpc = {      handle = <userdata 1>,      notify = <function 12>,      pid = 41450,      request = <function 13>    },    server_capabilities = {      callHierarchyProvider = true,      codeActionProvider = <table 5>,      codeLensProvider = {},      completionProvider = {        triggerCharacters = { \".\" }      },      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {},      documentOnTypeFormattingProvider = {        firstTriggerCharacter = \"\"      },      documentSymbolProvider = true,      executeCommandProvider = {        commands = { \"gopls.generate\", \"gopls.fill_struct\", \"gopls.regenerate_cgo\", \"gopls.test\", \"gopls.tidy\", \"gopls.update_go_sum\", \"gopls.undeclared_name\", \"gopls.go_get_package\", \"gopls.add_dependency\", \"gopls.upgrade_dependency\", \"gopls.remove_dependency\", \"gopls.vendor\", \"gopls.extract_variable\", \"gopls.extract_function\", \"gopls.gc_details\", \"gopls.generate_gopls_mod\" }      },      foldingRangeProvider = true,      hoverProvider = true,      implementationProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      signatureHelpProvider = {        triggerCharacters = <table 6>      },      textDocumentSync = {        change = 2,        openClose = true,        save = <table 7>      },      typeDefinitionProvider = true,      workspace = {        workspaceFolders = {          changeNotifications = \"workspace/didChangeWorkspaceFolders\",          supported = true        }      },      workspaceSymbolProvider = true    },    stop = <function 14>,    supports_method = <function 15>,    workspaceFolders = { {        name = \"/home/snyssfx/private/neovim-lspconfig-main\",        uri = \"file:///home/snyssfx/private/neovim-lspconfig-main\"      } },    workspace_did_change_configuration = <function 16>  }, {    _cached_buffers = {      [3] = { \"package another\", \"\", \"import (\", '\\tmain_package \"github.com/Snyssfx/neovim-lspconfig-gopls-bug\"', \")\", \"\", \"func AnotherPrint() {\", '\\tprintln(\"in another package\")', \"\\tmain_package.Print()\", \"}\" }    },    _on_attach = <function 17>,    cancel_request = <function 18>,    config = {      _on_attach = <function 3>,      capabilities = {        callHierarchy = {          dynamicRegistration = false,          <metatable> = <table 1>        },        textDocument = {          codeAction = {            codeActionLiteralSupport = {              codeActionKind = {                valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" },                <metatable> = <table 1>              },              <metatable> = <table 1>            },            dynamicRegistration = false,            <metatable> = <table 1>          },          completion = {            completionItem = {              commitCharactersSupport = false,              deprecatedSupport = false,              documentationFormat = { \"markdown\", \"plaintext\" },              preselectSupport = false,              snippetSupport = false,              <metatable> = <table 1>            },            completionItemKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },              <metatable> = <table 1>            },            contextSupport = false,            dynamicRegistration = false,            <metatable> = <table 1>          },          declaration = {            linkSupport = true,            <metatable> = <table 1>          },          definition = {            linkSupport = true,            <metatable> = <table 1>          },          documentHighlight = {            dynamicRegistration = false,            <metatable> = <table 1>          },          documentSymbol = {            dynamicRegistration = false,            hierarchicalDocumentSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          hover = {            contentFormat = { \"markdown\", \"plaintext\" },            dynamicRegistration = false,            <metatable> = <table 1>          },          implementation = {            linkSupport = true,            <metatable> = <table 1>          },          publishDiagnostics = {            relatedInformation = true,            tagSupport = {              valueSet = { 1, 2 },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          references = {            dynamicRegistration = false,            <metatable> = <table 1>          },          rename = {            dynamicRegistration = false,            prepareSupport = true,            <metatable> = <table 1>          },          signatureHelp = {            dynamicRegistration = false,            signatureInformation = {              documentationFormat = { \"markdown\", \"plaintext\" },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          synchronization = {            didSave = true,            dynamicRegistration = false,            willSave = false,            willSaveWaitUntil = false,            <metatable> = <table 1>          },          typeDefinition = {            linkSupport = true,            <metatable> = <table 1>          },          <metatable> = <table 1>        },        window = {          showDocument = {            support = false,            <metatable> = <table 1>          },          showMessage = {            messageActionItem = {              additionalPropertiesSupport = false,              <metatable> = <table 1>            },            <metatable> = <table 1>          },          workDoneProgress = true,          <metatable> = <table 1>        },        workspace = {          applyEdit = true,          configuration = true,          symbol = {            dynamicRegistration = false,            hierarchicalWorkspaceSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          workspaceEdit = {            resourceOperations = { \"rename\", \"create\", \"delete\" },            <metatable> = <table 1>          },          workspaceFolders = true,          <metatable> = <table 1>        }      },      cmd = <table 2>,      filetypes = <table 3>,      flags = {},      get_language_id = <function 19>,      handlers = <table 4>,      init_options = vim.empty_dict(),      log_level = 2,      message_level = 2,      name = \"gopls\",      on_attach = <function 20>,      on_exit = <function 21>,      on_init = <function 22>,      root_dir = \"/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\",      settings = vim.empty_dict(),      <metatable> = <table 1>    },    handlers = <table 4>,    id = 2,    initialized = true,    is_stopped = <function 23>,    messages = {      messages = {},      name = \"gopls\",      progress = {        [\"5577006791947779410\"] = {          done = true,          message = \"Finished loading packages.\",          title = \"Setting up workspace\"        },        [\"8674665223082153551\"] = {          message = \"err: exit status 1: stderr: go: github.com/Snyssfx/neovim-lspconfig-gopls-bug@v0.0.0-20210328074543-8ae21bebe8fb (replaced by ./..): reading ../go.mod: open /home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/go.mod: no such file or directory : packages.Load error\",          title = \"Error loading workspace\"        }      },      status = {}    },    name = \"gopls\",    notify = <function 24>,    offset_encoding = \"utf-16\",    request = <function 25>,    resolved_capabilities = {      call_hierarchy = true,      code_action = <8>{        codeActionKinds = { \"quickfix\", \"refactor.extract\", \"refactor.rewrite\", \"source.fixAll\", \"source.organizeImports\" }      },      code_lens = true,      code_lens_resolve = false,      completion = true,      declaration = false,      document_formatting = true,      document_highlight = true,      document_range_formatting = false,      document_symbol = true,      execute_command = true,      find_references = true,      goto_definition = true,      hover = true,      implementation = true,      rename = true,      signature_help = true,      signature_help_trigger_characters = <9>{ \"(\", \",\" },      text_document_did_change = 2,      text_document_open_close = true,      text_document_save = <10>{},      text_document_save_include_text = false,      text_document_will_save = false,      text_document_will_save_wait_until = false,      type_definition = true,      workspace_folder_properties = {        changeNotifications = \"workspace/didChangeWorkspaceFolders\",        supported = true      },      workspace_symbol = true    },    rpc = {      handle = <userdata 2>,      notify = <function 26>,      pid = 41559,      request = <function 27>    },    server_capabilities = {      callHierarchyProvider = true,      codeActionProvider = <table 8>,      codeLensProvider = {},      completionProvider = {        triggerCharacters = { \".\" }      },      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {},      documentOnTypeFormattingProvider = {        firstTriggerCharacter = \"\"      },      documentSymbolProvider = true,      executeCommandProvider = {        commands = { \"gopls.generate\", \"gopls.fill_struct\", \"gopls.regenerate_cgo\", \"gopls.test\", \"gopls.tidy\", \"gopls.update_go_sum\", \"gopls.undeclared_name\", \"gopls.go_get_package\", \"gopls.add_dependency\", \"gopls.upgrade_dependency\", \"gopls.remove_dependency\", \"gopls.vendor\", \"gopls.extract_variable\", \"gopls.extract_function\", \"gopls.gc_details\", \"gopls.generate_gopls_mod\" }      },      foldingRangeProvider = true,      hoverProvider = true,      implementationProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      signatureHelpProvider = {        triggerCharacters = <table 9>      },      textDocumentSync = {        change = 2,        openClose = true,        save = <table 10>      },      typeDefinitionProvider = true,      workspace = {        workspaceFolders = {          changeNotifications = \"workspace/didChangeWorkspaceFolders\",          supported = true        }      },      workspaceSymbolProvider = true    },    stop = <function 28>,    supports_method = <function 29>,    workspaceFolders = { {        name = \"/home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\",        uri = \"file:///home/snyssfx/go/pkg/mod/github.com/!snyssfx/neovim-lspconfig-gopls-bug/another@v0.0.0-20210328075753-65b65cceefa8\"      } },    workspace_did_change_configuration = <function 30>  } }\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 3,  jsonrpc = \"2.0\",  method = \"shutdown\"}\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  id = 4,  jsonrpc = \"2.0\",  method = \"shutdown\"}\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  id = 4,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  id = 3,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"exit\"}\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:391 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"exit\"}\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:08 Shutdown session\\n\\tshutdown_session=1\\n\",    type = 3  }}\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:492 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2021/03/28 12:18:08 Shutdown session\\n\\tshutdown_session=1\\n\",    type = 3  }}\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:08 Shutdown session\\n\\tshutdown_session=1\\n\",  type = 3}\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 2,  params = {    message = \"2021/03/28 12:18:08 Shutdown session\\n\\tshutdown_session=1\\n\",    type = 3  }}\r\n[ INFO ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:381 ]\t\"2021/03/28 12:18:08 Shutdown session\\n\\tshutdown_session=1\\n\"\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp.lua:513 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"2021/03/28 12:18:08 Shutdown session\\n\\tshutdown_session=1\\n\",  type = 3}\r\n[ DEBUG ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:409 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 1,  params = {    message = \"2021/03/28 12:18:08 Shutdown session\\n\\tshutdown_session=1\\n\",    type = 3  }}\r\n[ INFO ] 2021-03-28T12:18:08+0300 ] /usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:381 ]\t\"2021/03/28 12:18:08 Shutdown session\\n\\tshutdown_session=1\\n\"\r\n\r\n</details>\r\n",
    "closed_at": "2023-06-10T01:00:28Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "How I resolve this problem in my init.lua:\r\n```lua\r\nlocal util = require('lspconfig/util')\r\nlocal lastRootPath = nil\r\nlocal gopath = os.getenv(\"GOPATH\")\r\nif gopath == nil then\r\n  gopath = \"\"\r\nend\r\nlocal gopathmod = gopath..'/pkg/mod'\r\n\r\nnvim_lsp.gopls.setup {\r\n  root_dir = function(fname)\r\n    local fullpath = vim.fn.expand(fname, ':p')\r\n    if string.find(fullpath, gopathmod) and lastRootPath ~= nil then\r\n        return lastRootPath\r\n    end\r\n    lastRootPath = util.root_pattern(\"go.mod\", \".git\")(fname)\r\n    return lastRootPath\r\n  end,\r\n  }\r\n```\r\nBasically what I try to achieve is to attach to the previous gopls instance when I go to the `$GOPATH/pkg/mod` dir. Should I create PR or may be write this behaviour in the documentation of the neovim-lspconfig?",
            "created_at": "2021-03-28T09:32:13Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-808871389",
            "id": 808871389,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODg3MTM4OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 2,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808871389/reactions"
            },
            "updated_at": "2021-03-28T10:16:54Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808871389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16151334?v=4",
                "events_url": "https://api.github.com/users/Snyssfx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Snyssfx/followers",
                "following_url": "https://api.github.com/users/Snyssfx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Snyssfx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Snyssfx",
                "id": 16151334,
                "login": "Snyssfx",
                "node_id": "MDQ6VXNlcjE2MTUxMzM0",
                "organizations_url": "https://api.github.com/users/Snyssfx/orgs",
                "received_events_url": "https://api.github.com/users/Snyssfx/received_events",
                "repos_url": "https://api.github.com/users/Snyssfx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Snyssfx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Snyssfx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Snyssfx"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If I'm understanding you correctly, you want to not start a new language server, but attach to the active language server, when navigating to system go packages? ",
            "created_at": "2021-03-28T17:21:09Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-808927590",
            "id": 808927590,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODkyNzU5MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808927590/reactions"
            },
            "updated_at": "2021-03-28T17:21:09Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808927590",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mjlbach yes)",
            "created_at": "2021-03-28T17:28:12Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-808928557",
            "id": 808928557,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODkyODU1Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808928557/reactions"
            },
            "updated_at": "2021-03-28T17:28:12Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808928557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16151334?v=4",
                "events_url": "https://api.github.com/users/Snyssfx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Snyssfx/followers",
                "following_url": "https://api.github.com/users/Snyssfx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Snyssfx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Snyssfx",
                "id": 16151334,
                "login": "Snyssfx",
                "node_id": "MDQ6VXNlcjE2MTUxMzM0",
                "organizations_url": "https://api.github.com/users/Snyssfx/orgs",
                "received_events_url": "https://api.github.com/users/Snyssfx/received_events",
                "repos_url": "https://api.github.com/users/Snyssfx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Snyssfx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Snyssfx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Snyssfx"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm not sure how I feel about having it match root directory to GOPATH. I think the better solution is to interactively prompt the user if they would like to attach a new root to the current server when first navigating to a new project (I think this is what vscode does).",
            "created_at": "2021-03-28T17:46:03Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-808931145",
            "id": 808931145,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODkzMTE0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808931145/reactions"
            },
            "updated_at": "2021-03-28T17:46:03Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808931145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, I try to achieve the same result: if the user goes to the `/pkg/mod` dir, it should be attached to the previous server instance. Otherwise the new server won't be able to resolve the dependency of the parent module.\r\n\r\nShould it prompt the user different options or be attached silently? It might be bothering if the prompt appears many times because of, for example, nvim restarting",
            "created_at": "2021-03-28T18:25:35Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-808937522",
            "id": 808937522,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODkzNzUyMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808937522/reactions"
            },
            "updated_at": "2021-03-28T18:25:35Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808937522",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16151334?v=4",
                "events_url": "https://api.github.com/users/Snyssfx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Snyssfx/followers",
                "following_url": "https://api.github.com/users/Snyssfx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Snyssfx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Snyssfx",
                "id": 16151334,
                "login": "Snyssfx",
                "node_id": "MDQ6VXNlcjE2MTUxMzM0",
                "organizations_url": "https://api.github.com/users/Snyssfx/orgs",
                "received_events_url": "https://api.github.com/users/Snyssfx/received_events",
                "repos_url": "https://api.github.com/users/Snyssfx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Snyssfx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Snyssfx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Snyssfx"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "TBH I'm not really sure the best way to handle this from a UX perspective. On one hand, you may not want the language server to automatically start indexing the go standard library, on the other hand, multiple prompts are annoying.",
            "created_at": "2021-03-28T22:27:31Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-808969624",
            "id": 808969624,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODk2OTYyNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808969624/reactions"
            },
            "updated_at": "2021-03-28T22:27:31Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/808969624",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "By the way I believe vscode choose to attach the `pkg/mod` silently as well as Goland allows you to jump to definitions in modules, although it doesn't use the language server. So it looks like a non-obvious behavior for me. May be it should be documented somewhere.",
            "created_at": "2021-03-29T06:50:22Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-809118566",
            "id": 809118566,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTExODU2Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/809118566/reactions"
            },
            "updated_at": "2021-03-29T20:00:35Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/809118566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16151334?v=4",
                "events_url": "https://api.github.com/users/Snyssfx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Snyssfx/followers",
                "following_url": "https://api.github.com/users/Snyssfx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Snyssfx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Snyssfx",
                "id": 16151334,
                "login": "Snyssfx",
                "node_id": "MDQ6VXNlcjE2MTUxMzM0",
                "organizations_url": "https://api.github.com/users/Snyssfx/orgs",
                "received_events_url": "https://api.github.com/users/Snyssfx/received_events",
                "repos_url": "https://api.github.com/users/Snyssfx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Snyssfx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Snyssfx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Snyssfx"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@Snyssfx sorry, I kinda put this on the backburner. I think for now, we can merge a fix similar to yours (put as much of the state in the root_dir function as possible) that's unique to go. I want to fix this more generally in the long-term, but I think for now this is fine and probably solves some usability issues. If you have the time, please file a PR.",
            "created_at": "2021-05-01T18:26:37Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-830674652",
            "id": 830674652,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgzMDY3NDY1Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/830674652/reactions"
            },
            "updated_at": "2021-05-01T18:26:47Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/830674652",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mjlbach ok, I will make the PR then)",
            "created_at": "2021-05-03T08:34:43Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-831112195",
            "id": 831112195,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTExMjE5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/831112195/reactions"
            },
            "updated_at": "2021-05-03T08:34:43Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/831112195",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16151334?v=4",
                "events_url": "https://api.github.com/users/Snyssfx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Snyssfx/followers",
                "following_url": "https://api.github.com/users/Snyssfx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Snyssfx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Snyssfx",
                "id": 16151334,
                "login": "Snyssfx",
                "node_id": "MDQ6VXNlcjE2MTUxMzM0",
                "organizations_url": "https://api.github.com/users/Snyssfx/orgs",
                "received_events_url": "https://api.github.com/users/Snyssfx/received_events",
                "repos_url": "https://api.github.com/users/Snyssfx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Snyssfx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Snyssfx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Snyssfx"
            }
        },
        {
            "author_association": "NONE",
            "body": "> How I resolve this problem in my init.lua:\r\n> \r\n> ```lua\r\n> local util = require('lspconfig/util')\r\n> local lastRootPath = nil\r\n> local gopath = os.getenv(\"GOPATH\")\r\n> if gopath == nil then\r\n>   gopath = \"\"\r\n> end\r\n> local gopathmod = gopath..'/pkg/mod'\r\n> \r\n> nvim_lsp.gopls.setup {\r\n>   root_dir = function(fname)\r\n>     local fullpath = vim.fn.expand(fname, ':p')\r\n>     if string.find(fullpath, gopathmod) and lastRootPath ~= nil then\r\n>         return lastRootPath\r\n>     end\r\n>     lastRootPath = util.root_pattern(\"go.mod\", \".git\")(fname)\r\n>     return lastRootPath\r\n>   end,\r\n>   }\r\n> ```\r\n> \r\n> Basically what I try to achieve is to attach to the previous gopls instance when I go to the `$GOPATH/pkg/mod` dir. Should I create PR or may be write this behaviour in the documentation of the neovim-lspconfig?\r\n\r\nwell， I have to say， you help me a lot. I was confused how to keep root folder if sub repo do not have a go.mod file，（gopls would not work in default）. Hope this feature can merge into master, or basically, have a document also could be fine",
            "created_at": "2021-10-30T08:46:53Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-955174908",
            "id": 955174908,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC18447s_8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/955174908/reactions"
            },
            "updated_at": "2021-10-30T08:47:29Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/955174908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20359329?v=4",
                "events_url": "https://api.github.com/users/seraph98/events{/privacy}",
                "followers_url": "https://api.github.com/users/seraph98/followers",
                "following_url": "https://api.github.com/users/seraph98/following{/other_user}",
                "gists_url": "https://api.github.com/users/seraph98/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seraph98",
                "id": 20359329,
                "login": "seraph98",
                "node_id": "MDQ6VXNlcjIwMzU5MzI5",
                "organizations_url": "https://api.github.com/users/seraph98/orgs",
                "received_events_url": "https://api.github.com/users/seraph98/received_events",
                "repos_url": "https://api.github.com/users/seraph98/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seraph98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seraph98/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seraph98"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sorry, I procrastinated on this one (partly because I still don't understand the gomodule system).\r\n\r\nSince gopath seems to be deprecated in favor of go modules? I tried a different route. LMK what you think: https://github.com/neovim/nvim-lspconfig/pull/1399",
            "created_at": "2021-11-11T08:44:15Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-966098265",
            "id": 966098265,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1845lX1Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/966098265/reactions"
            },
            "updated_at": "2021-11-11T08:44:15Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/966098265",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mjlbach hi! I also know a little about `go.work` feature, as I see, it can remove necessity of `replace` statements in go.mod and therefore necessity of this issue.\r\n\r\nBut still there will be old codebases with `replace` statements because of Go backward compatibility with old versions, so this case won't be solved.\r\n\r\nThe problem occurs when there is a module in `$GOPATH/pkg/mod` (I believe the directory contains all cached modules from go.mod file) with `replace` statement. VScode treats the project's root `go.mod` as a source of truth, but the default lsp-config configuration rather choose `$GOPATH/pkg/mod` one. And then the lsp server is created, and can't follow the replaced expression since `$GOPATH/pkg/mod` has flat dir hierarchy.",
            "created_at": "2021-11-12T14:19:40Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-967152911",
            "id": 967152911,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1845pZUP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967152911/reactions"
            },
            "updated_at": "2021-11-12T14:19:40Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967152911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16151334?v=4",
                "events_url": "https://api.github.com/users/Snyssfx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Snyssfx/followers",
                "following_url": "https://api.github.com/users/Snyssfx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Snyssfx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Snyssfx",
                "id": 16151334,
                "login": "Snyssfx",
                "node_id": "MDQ6VXNlcjE2MTUxMzM0",
                "organizations_url": "https://api.github.com/users/Snyssfx/orgs",
                "received_events_url": "https://api.github.com/users/Snyssfx/received_events",
                "repos_url": "https://api.github.com/users/Snyssfx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Snyssfx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Snyssfx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Snyssfx"
            }
        },
        {
            "author_association": "NONE",
            "body": "It is the real case from my work, so I would suggest to reopen the issue)",
            "created_at": "2021-11-12T14:20:53Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-967153789",
            "id": 967153789,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1845pZh9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967153789/reactions"
            },
            "updated_at": "2021-11-12T14:26:24Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967153789",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16151334?v=4",
                "events_url": "https://api.github.com/users/Snyssfx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Snyssfx/followers",
                "following_url": "https://api.github.com/users/Snyssfx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Snyssfx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Snyssfx",
                "id": 16151334,
                "login": "Snyssfx",
                "node_id": "MDQ6VXNlcjE2MTUxMzM0",
                "organizations_url": "https://api.github.com/users/Snyssfx/orgs",
                "received_events_url": "https://api.github.com/users/Snyssfx/received_events",
                "repos_url": "https://api.github.com/users/Snyssfx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Snyssfx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Snyssfx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Snyssfx"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@Snyssfx I closed the issue only because I fixed it via #1399 \r\n\r\nIt wasn't go.work I added, but rather traversing up the filesystem hierarchy and picking the top level go.mod.\r\n\r\n I had to temporarily revert my PR due to an issue that was filed (which doesn't automatically reopen the issue), but someone *un*reverted my commit in https://github.com/neovim/nvim-lspconfig/pull/1411 which you can test.\r\n",
            "created_at": "2021-11-12T15:32:07Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-967206403",
            "id": 967206403,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1845pmYD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967206403/reactions"
            },
            "updated_at": "2021-11-12T15:32:36Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967206403",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mjlbach oh, I see, as far as I understand traversing up the filesystem solves slightly different case.\r\n\r\nConsider an example where someone work at the project not in `$GOPATH`, for example, in `~/project`. Then one tries to go to definition in the library which defined in `~/project/go.mod`. \r\n \r\nThe library has `go.mod` itself, and it physically located in `$GOPATH/pkg/mod/library/go.mod` (`go` command download libraries there). The library also has `replace` expression in the `$GOPATH/pkg/mod/library/go.mod`, which replaces some module for development reasons.\r\n\r\nThe developer of the library forgot to delete `replace` (as I learned today it's considered as a bad practice), and as soon as one open up the buffer with the library code, lspconfig will create new `gopls` instance. It won't be able to go to definition of whatever in `replace` statement. Assuming that usually `$GOPATH` is `~/go`, traversing up from `~/go/pkg/mod/library` cannot find `~/project/go.mod`, so it creates new server instead of attach to the old one.\r\n\r\nOn the other hand, your fix is pretty important too, since it will handle the popular way of treating `replaces` that contains in `~/project/go.mod` itself :)",
            "created_at": "2021-11-12T17:16:39Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-967281270",
            "id": 967281270,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1845p4p2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967281270/reactions"
            },
            "updated_at": "2021-11-12T17:16:39Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967281270",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16151334?v=4",
                "events_url": "https://api.github.com/users/Snyssfx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Snyssfx/followers",
                "following_url": "https://api.github.com/users/Snyssfx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Snyssfx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Snyssfx",
                "id": 16151334,
                "login": "Snyssfx",
                "node_id": "MDQ6VXNlcjE2MTUxMzM0",
                "organizations_url": "https://api.github.com/users/Snyssfx/orgs",
                "received_events_url": "https://api.github.com/users/Snyssfx/received_events",
                "repos_url": "https://api.github.com/users/Snyssfx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Snyssfx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Snyssfx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Snyssfx"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "(Sorry, still operating with a layman's understanding of the go module system, the following is kinda a braindup for my future use)\r\n\r\nMy understanding is GOPATH was slated to be deprecated in go 1.17 but this was deferred until 1.18. My fix should cover common scenarios for older projects, but not in scenarios where GOPATH includes library directories not in the project as you pointed out.\r\n\r\nThe problem is that using root_directory to include all files under gopath is sorta \"misusing\" (I say this lightly, because yours is a valid usecase) what a `rootDirectory`/`workspaceFolder` is supposed to be according to the LSP spec. A `rootDirectory` is communicated to the server via initialization options as \"this is the root of the project, you should index everything under this folder and ignore everything else\" but also used internally by lspconfig as \"attach a buffer to the language server instance if it meets this pattern, otherwise start a new language server and attach the buffer\". With the current workaround, it's essentially adding logic within `root_dir`\r\n\r\nWith the proposed GOPATH change, the buffer will be attached to the actively running language server (good), but will this buffer may or may not point to a file which is under the *server side* `rootDirectory/workspaceFolders` which is bad (I'm not sure navigation/code analysis will work outside of the single attached buffer which lives outside the `rootDirectory` that has been communicated to the language server.\r\n\r\nThe only solution I can really think of that *solves* this is to either override the location handlers to take a client_id in the ctx and optionally call on_attach/a callback to  send the updated list of `workspaceFolders` to the language server. The only way I can think of to detect the putative additional workspace folder is re-running the root_dir function with the putative new buffer, not sure if the root pattern will be reliable.",
            "created_at": "2021-11-12T17:29:01Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-967289376",
            "id": 967289376,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1845p6og",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967289376/reactions"
            },
            "updated_at": "2021-11-12T17:33:07Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967289376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mfussenegger wdyt? ^",
            "created_at": "2021-11-12T17:37:52Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-967295053",
            "id": 967295053,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1845p8BN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967295053/reactions"
            },
            "updated_at": "2021-11-12T17:37:52Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/967295053",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> With the proposed GOPATH change, the buffer will be attached to the actively running language server (good), but will this buffer may or may not point to a file which is under the server side rootDirectory/workspaceFolders which is bad (I'm not sure navigation/code analysis will work outside of the single attached buffer which lives outside the rootDirectory that has been communicated to the language server.\r\n\r\nI'd expect that servers which return locations to files outside of the rootDirectory/workspaceFolder can handle them without the client implicitly updating `workspaceFolders`\r\n\r\nMaybe worth checking with the gopls devs or looking up how the vscode extension handles this.",
            "created_at": "2021-11-18T16:33:29Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-973035405",
            "id": 973035405,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1845_1eN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/973035405/reactions"
            },
            "updated_at": "2021-11-18T16:33:29Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/973035405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mfussenegger the issue isn't so much handling them as determining how to attach language servers to files navigated to outside the root directory. Vscode for most extensions IIRC does not attach them. Users want to be able to \"hop\" through definitions, right now since we solely use roots to determine this it will launch a new server (most of the time in the new \"single file mode\") for each file. We could instead wrap the location handler to call buf_attach which would bypass single file mode and instead attach a server to the out-of-root file.",
            "created_at": "2021-11-19T04:24:15Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-973723797",
            "id": 973723797,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1846CdiV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/973723797/reactions"
            },
            "updated_at": "2021-11-19T04:24:15Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/973723797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We could instead wrap the location handler to call buf_attach which would bypass single file mode and instead attach a server to the out-of-root file.\r\n\r\nWouldn't that imply that it would attach buffers for all returned locations, independent of whether the user navigates to them or not?\r\nI guess for goto definition or goto implementation that could be good enough, but for references you might end up attaching dozens of unwanted buffers premature.\r\n\r\n> right now since we solely use roots to determine this it will launch a new server (most of the time in the new \"single file mode\") for each file.\r\n\r\nMaybe we could extend this. If there is no root_dir for the new file, check if the alternative/source buffer has a client attached and use that.  (Maybe behind a gated per language-server configuration flag).\r\n\r\nIn jdtls I do something like that - except only for `jdt://` which is the eclipse.jdt.ls mechanism for opening third party dependencies or JDK libs code. See https://github.com/mfussenegger/nvim-jdtls/blob/3fa992f33378fd811aed74c56e0affd33f42dae0/lua/jdtls/setup.lua#L211-L215\r\n",
            "created_at": "2021-11-19T10:11:04Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-973932946",
            "id": 973932946,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1846DQmS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/973932946/reactions"
            },
            "updated_at": "2021-11-19T10:11:04Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/973932946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mjlbach:\r\n> (most of the time in the new \"single file mode\")\r\n\r\nWhen ccls jump outside, we will fail to start a new one because:\r\n\r\nhttps://github.com/neovim/nvim-lspconfig/blob/d285f720ed2b26b687a06e9c7d5d41353dd2b743/lua/lspconfig/server_configurations/ccls.lua#L8\r\n\r\n@mfussenegger:\r\n> Wouldn't that imply that it would attach buffers for all returned locations, independent of whether the user navigates to them or not?\r\n\r\nI think this is a good enough solution. I think emacs's lsp-mode also works like this. Check https://github.com/emacs-lsp/lsp-mode/issues/225.",
            "created_at": "2022-01-10T16:26:35Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-1009056188",
            "id": 1009056188,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1848JPm8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1009056188/reactions"
            },
            "updated_at": "2022-01-10T16:26:35Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1009056188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29726878?v=4",
                "events_url": "https://api.github.com/users/black-desk/events{/privacy}",
                "followers_url": "https://api.github.com/users/black-desk/followers",
                "following_url": "https://api.github.com/users/black-desk/following{/other_user}",
                "gists_url": "https://api.github.com/users/black-desk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/black-desk",
                "id": 29726878,
                "login": "black-desk",
                "node_id": "MDQ6VXNlcjI5NzI2ODc4",
                "organizations_url": "https://api.github.com/users/black-desk/orgs",
                "received_events_url": "https://api.github.com/users/black-desk/received_events",
                "repos_url": "https://api.github.com/users/black-desk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/black-desk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/black-desk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/black-desk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think this is a good enough solution.\r\n\r\nIt can have quite the performance impact. I think in order to attach the client we would need to load the buffer. That would trigger all autocmds. If you for example look for references and get a couple hundreds of results - that can take a long time and freeze the UI if it's running on the main loop.\r\n\r\nWe made some optimizations in core specifically to avoid having to do that.",
            "created_at": "2022-01-10T16:43:13Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-1009095222",
            "id": 1009095222,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1848JZI2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1009095222/reactions"
            },
            "updated_at": "2022-01-10T16:43:13Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1009095222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "We could set up a \"catch-all\" autocommand that is shared across all servers that attaches servers when entering that buffer, so the results of a references/definition request can be cached globally and the server lazily attached when entering the buffer.",
            "created_at": "2022-01-10T16:50:05Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-1009113955",
            "id": 1009113955,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC1848Jdtj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1009113955/reactions"
            },
            "updated_at": "2022-01-10T16:50:05Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1009113955",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Btw, setting the `GOPATH` isn't standard practice anymore. The mod cache directory should be determined using `\"$(go env GOPATH)/pkg/mod\"`. I've updated the workaround provided by @Snyssfx with this in mind\r\n\r\n``` lua\r\nlocal lastRootPath = nil\r\nlocal gomodpath = vim.trim(vim.fn.system(\"go env GOPATH\")) .. \"/pkg/mod\"\r\n\r\nnvim_lsp.gopls.setup({\r\n  root_dir = function(fname)\r\n    local fullpath = vim.fn.expand(fname, \":p\")\r\n    if string.find(fullpath, gomodpath) and lastRootPath ~= nil then\r\n        return lastRootPath\r\n    end\r\n    local root = nvim_lsp.util.root_pattern(\"go.mod\", \".git\")(fname)\r\n    if root ~= nil then\r\n        lastRootPath = root\r\n    end\r\n    return root\r\n  end,\r\n})\r\n```",
            "created_at": "2022-10-11T16:00:02Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-1274928702",
            "id": 1274928702,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC185L_d4-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1274928702/reactions"
            },
            "updated_at": "2022-10-12T15:30:41Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1274928702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "NONE",
            "body": "> ```lua\r\n> gomodpath\r\n> ```\r\n\r\nI think you may have a typo there, the variable is declared as `gomodpath` but you use `gopathmod`.",
            "created_at": "2022-10-12T15:15:11Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-1276346940",
            "id": 1276346940,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC185ME4I8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1276346940/reactions"
            },
            "updated_at": "2022-10-12T15:15:11Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1276346940",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11463919?v=4",
                "events_url": "https://api.github.com/users/itaranto/events{/privacy}",
                "followers_url": "https://api.github.com/users/itaranto/followers",
                "following_url": "https://api.github.com/users/itaranto/following{/other_user}",
                "gists_url": "https://api.github.com/users/itaranto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/itaranto",
                "id": 11463919,
                "login": "itaranto",
                "node_id": "MDQ6VXNlcjExNDYzOTE5",
                "organizations_url": "https://api.github.com/users/itaranto/orgs",
                "received_events_url": "https://api.github.com/users/itaranto/received_events",
                "repos_url": "https://api.github.com/users/itaranto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/itaranto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/itaranto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/itaranto"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mjlbach this issue has been open for 2+ years. @Snyssfx's solution is hacky, but it works flawlessly. Can we reboot https://github.com/neovim/nvim-lspconfig/pull/879 ?\r\n\r\n",
            "created_at": "2023-06-08T13:24:37Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-1582577344",
            "id": 1582577344,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC185eVDbA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1582577344/reactions"
            },
            "updated_at": "2023-06-08T13:24:37Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1582577344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "cc @glepnir",
            "created_at": "2023-06-08T13:27:46Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-1582581904",
            "id": 1582581904,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC185eVEiQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1582581904/reactions"
            },
            "updated_at": "2023-06-08T13:27:46Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1582581904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't use neovim anymore, and I'm not the maintainer of lspconfig as of more than a year ago",
            "created_at": "2023-06-08T13:27:47Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-1582581918",
            "id": 1582581918,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC185eVEie",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1582581918/reactions"
            },
            "updated_at": "2023-06-08T13:27:47Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1582581918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@mjlbach  Not sure what happened. When I return from illness. some people left.  \r\n\r\n@icholy  I will review it later",
            "created_at": "2023-06-08T14:17:44Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804#issuecomment-1582661788",
            "id": 1582661788,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
            "node_id": "IC_kwDODTQC185eVYCc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1582661788/reactions"
            },
            "updated_at": "2023-06-08T14:17:44Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1582661788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        }
    ],
    "comments": 29,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804/comments",
    "created_at": "2021-03-28T09:30:20Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/804",
    "id": 842699460,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4NDI2OTk0NjA=",
    "number": 804,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 8,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 8,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804/timeline",
    "title": "gopls handle go to definition in `$GOPATH/pkg/mod` of parent package",
    "updated_at": "2023-06-10T01:00:28Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/804",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/16151334?v=4",
        "events_url": "https://api.github.com/users/Snyssfx/events{/privacy}",
        "followers_url": "https://api.github.com/users/Snyssfx/followers",
        "following_url": "https://api.github.com/users/Snyssfx/following{/other_user}",
        "gists_url": "https://api.github.com/users/Snyssfx/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Snyssfx",
        "id": 16151334,
        "login": "Snyssfx",
        "node_id": "MDQ6VXNlcjE2MTUxMzM0",
        "organizations_url": "https://api.github.com/users/Snyssfx/orgs",
        "received_events_url": "https://api.github.com/users/Snyssfx/received_events",
        "repos_url": "https://api.github.com/users/Snyssfx/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Snyssfx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Snyssfx/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Snyssfx"
    }
}