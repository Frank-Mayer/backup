{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!-- Before reporting: search existing issues and ensure you are running the latest nightly of neovim and the latest version of nvim-lspconfig. Note that this repository implements configuration and initialization of language servers. Implementation of the language server spec itself is located in the neovim core repository-->\r\n\r\n- `nvim --version`: v0.6.0-dev+132-g7d2233fad\r\n- nvim-lspconfig version(commit hash): 47d80fa334aff1fdf720ebd0f3efb1f19230788c\r\n- What language server (If the problem is related to a specific language server): clangd, ccls, pyright\r\n- Can you reproduce this behavior on other language server clients (vscode, languageclient-neovim, coc.nvim, etc.): No\r\n- Can you reproduce this behavior on other language servers offered in the nvim-lspconfig repo? (pyls -> pyright): Yes\r\n- Is the problem isolated to a particular language server: No\r\n- Operating system/version: Manjaro Linux. 5.10.56\r\n\r\nInstalled nvim-lspconfig via pathogen\r\n\r\nWhen requesting the Lspconfig for a filetype via\r\n```vim\r\nautocmd FileType cpp lua require('lspconfig').clangd.setup{}\r\n```\r\nit does not activate linting. Only after the autocommand is called twice will the linting work.\r\n```vim\r\nautocmd FileType cpp lua require('lspconfig').clangd.setup{}\r\nautocmd FileType cpp lua require('lspconfig').clangd.setup{}\r\n```\r\n\r\nYet when calling the require command without the FileType autocommand, it activates linting:\r\n```vim\r\nlua require('lspconfig').clangd.setup{}\r\n```\r\n\r\n#### Temporary solution\r\nI found a workaround that activates the lsp depending on the filetype.\r\n```vim\r\nif &filetype ==# \"cpp\"\r\n    lua require('lspconfig').clangd.setup{}\r\nendif\r\n```\r\n\r\n### How to reproduce the problem from neovim startup\r\nInstall: \r\n* nvim-lspconfig\r\n* clang\r\n* pyright\r\nOpen a file ending in either: *.cpp or *.py\r\n\r\n### Actual behaviour\r\nLSP does not show linting\r\n### Expected behaviour\r\nHave LSP show linting\r\n### Minimal init.vim or init.lua and code sample\r\n```vim\r\n\" When executing via Autocommand, the 'require' needs to be called twice.\r\naugroup CPP\r\n    autocmd!\r\n    autocmd FileType cpp lua require('lspconfig').clangd.setup{}\r\n    \"autocmd FileType cpp lua require('lspconfig').clangd.setup{}\r\naugroup END\r\n\r\naugroup PY\r\n    autocmd!\r\n    autocmd FileType python lua require('lspconfig').pyright.setup{}\r\n    \"autocmd FileType python lua require('lspconfig').pyright.setup{}\r\naugroup END\r\n\r\n\" Only need to call 'require' once when not executing via an autocommand\r\n\r\n\" lua require('lspconfig').clangd.setup{}\r\n\" lua require('lspconfig').pyright.setup{}\r\n```\r\n\r\nPython Code for testing\r\n\r\nThe LSP should show '\"var\" is not defined'\r\n```py\r\nvar\r\n```\r\n\r\nC++ Code for testing\r\n\r\nThe LSP should show 'Use of undeclared identifier 'endl'; did you mean 'std::endl'? (fix available)\r\n```cpp\r\n#include <iostream>\r\n\r\nint main()\r\n{\r\n    cout << \"hello\" << endl;\r\n}\r\n```\r\n<!-- You can download a minimal_init.lua from here \r\n      curl -fLO https://raw.githubusercontent.com/neovim/nvim-lspconfig/master/test/minimal_init.lua \r\n      After editing to include your language server, run neovim with nvim -u minimal_init.lua -->\r\n\r\n### Health check\r\n<details>\r\n<summary>Checkhealth result</summary>\r\n<!-- Run `:checkhealth lspconfig` and paste the result here-->\r\n</details>\r\n\r\n### LSP log\r\n<!-- If not using the minimal_init.lua please add vim.lsp.set_log_level(\"debug\") to your lua block \r\n     in init.vim and paste a link to your log file, located at  $HOME/.cache/nvim/lsp.log (formerly $HOME/.local/share/nvim/lsp.log) -->\r\n<details>\r\n<summary>Log file</summary>\r\n\r\nNot executing request\r\n```\r\n[ START ] 2021-08-12T20:39:46-0500 ] LSP logging initiated\r\n[ INFO ] 2021-08-12T20:39:56-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp.lua:1215 ]  \"exit_handler\"        {}\r\n ```\r\n\r\nWhen executing the request once.\r\n```\r\n[ START ] 2021-08-12T21:08:43-0500 ] LSP logging initiated\r\n[ INFO ] 2021-08-12T21:08:50-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp.lua:1215 ]  \"exit_handler\"  {}  \r\n```\r\n\r\n<-- When executing twice\r\n```\r\n[ START ] 2021-08-12T20:56:47-0500 ] LSP logging initiated\r\n[ INFO ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:316 ]\t\"Starting RPC client\"\t{  args = { \"--background-index\" },  cmd = \"clangd\",  extra = {}}\r\n[ DEBUG ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp.lua:828 ]\t\"LSP[clangd]\"\t\"initialize_params\"\t{  capabilities = {    callHierarchy = {      dynamicRegistration = false    },    offsetEncoding = { \"utf-8\", \"utf-16\" },    textDocument = {      codeAction = {        codeActionLiteralSupport = {          codeActionKind = {            valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" }          }        },        dynamicRegistration = false      },      completion = {        completionItem = {          commitCharactersSupport = false,          deprecatedSupport = false,          documentationFormat = { \"markdown\", \"plaintext\" },          preselectSupport = false,          snippetSupport = false        },        completionItemKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }        },        contextSupport = false,        dynamicRegistration = false,        editsNearCursor = true      },      declaration = {        linkSupport = true      },      definition = {        linkSupport = true      },      documentHighlight = {        dynamicRegistration = false      },      documentSymbol = {        dynamicRegistration = false,        hierarchicalDocumentSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }        }      },      hover = {        contentFormat = { \"markdown\", \"plaintext\" },        dynamicRegistration = false      },      implementation = {        linkSupport = true      },      publishDiagnostics = {        relatedInformation = true,        tagSupport = {          valueSet = { 1, 2 }        }      },      references = {        dynamicRegistration = false      },      rename = {        dynamicRegistration = false,        prepareSupport = true      },      signatureHelp = {        dynamicRegistration = false,        signatureInformation = {          activeParameterSupport = true,          documentationFormat = { \"markdown\", \"plaintext\" },          parameterInformation = {            labelOffsetSupport = true          }        }      },      synchronization = {        didSave = true,        dynamicRegistration = false,        willSave = false,        willSaveWaitUntil = false      },      typeDefinition = {        linkSupport = true      }    },    window = {      showDocument = {        support = false      },      showMessage = {        messageActionItem = {          additionalPropertiesSupport = false        }      },      workDoneProgress = true    },    workspace = {      applyEdit = true,      configuration = true,      symbol = {        dynamicRegistration = false,        hierarchicalWorkspaceSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }        }      },      workspaceEdit = {        resourceOperations = { \"rename\", \"create\", \"delete\" }      },      workspaceFolders = true    }  },  clientInfo = {    name = \"Neovim\",    version = \"0.6.0\"  },  initializationOptions = vim.empty_dict(),  processId = 33797,  rootPath = \"<source-folder>\",  rootUri = \"file:///<source-folder>\",  trace = \"off\",  workspaceFolders = { {      name = \"<source-folder>\",      uri = \"file:///<source-folder>\"    } }}\r\n[ DEBUG ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"initialize\",  params = {    capabilities = {      callHierarchy = {        dynamicRegistration = false      },      offsetEncoding = { \"utf-8\", \"utf-16\" },      textDocument = {        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" }            }          },          dynamicRegistration = false        },        completion = {          completionItem = {            commitCharactersSupport = false,            deprecatedSupport = false,            documentationFormat = { \"markdown\", \"plaintext\" },            preselectSupport = false,            snippetSupport = false          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }          },          contextSupport = false,          dynamicRegistration = false,          editsNearCursor = true        },        declaration = {          linkSupport = true        },        definition = {          linkSupport = true        },        documentHighlight = {          dynamicRegistration = false        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        hover = {          contentFormat = { \"markdown\", \"plaintext\" },          dynamicRegistration = false        },        implementation = {          linkSupport = true        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 }          }        },        references = {          dynamicRegistration = false        },        rename = {          dynamicRegistration = false,          prepareSupport = true        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            activeParameterSupport = true,            documentationFormat = { \"markdown\", \"plaintext\" },            parameterInformation = {              labelOffsetSupport = true            }          }        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = false,          willSaveWaitUntil = false        },        typeDefinition = {          linkSupport = true        }      },      window = {        showDocument = {          support = false        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false          }        },        workDoneProgress = true      },      workspace = {        applyEdit = true,        configuration = true,        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        workspaceEdit = {          resourceOperations = { \"rename\", \"create\", \"delete\" }        },        workspaceFolders = true      }    },    clientInfo = {      name = \"Neovim\",      version = \"0.6.0\"    },    initializationOptions = vim.empty_dict(),    processId = 33797,    rootPath = \"<source-folder>\",    rootUri = \"file:///<source-folder>\",    trace = \"off\",    workspaceFolders = { {        name = \"<source-folder>\",        uri = \"file:///<source-folder>t\"      } }  }}\r\n[ ERROR ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[20:56:47.482] clangd version 12.0.1\\nI[20:56:47.482] PID: 33799\\nI[20:56:47.482] Working directory: <location-of-source-neovim>/build/bin\\nI[20:56:47.482] argv[0]: clangd\\nI[20:56:47.482] argv[1]: --background-index\\n\"\r\n[ ERROR ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[20:56:47.483] Starting LSP over stdin/stdout\\n\"\r\n[ ERROR ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[20:56:47.483] <-- initialize(1)\\n\"\r\n[ ERROR ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[20:56:47.484] --> reply:initialize(1) 1 ms\\n\"\r\n[ DEBUG ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 1,  jsonrpc = \"2.0\",  result = {    capabilities = {      astProvider = true,      callHierarchyProvider = true,      codeActionProvider = {        codeActionKinds = { \"quickfix\", \"refactor\", \"info\" }      },      compilationDatabase = {        automaticReload = true      },      completionProvider = {        allCommitCharacters = { \" \", \"\\t\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"<\", \">\", \":\", \";\", \",\", \"+\", \"-\", \"/\", \"*\", \"%\", \"^\", \"&\", \"#\", \"?\", \".\", \"=\", '\"', \"'\", \"|\" },        resolveProvider = false,        triggerCharacters = { \".\", \"<\", \">\", \":\", '\"', \"/\" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {        resolveProvider = false      },      documentOnTypeFormattingProvider = {        firstTriggerCharacter = \"\\n\",        moreTriggerCharacter = {}      },      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { \"clangd.applyFix\", \"clangd.applyTweak\" }      },      hoverProvider = true,      implementationProvider = true,      memoryUsageProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = {          delta = true        },        legend = {          tokenModifiers = {},          tokenTypes = { \"variable\", \"variable\", \"parameter\", \"function\", \"method\", \"function\", \"property\", \"variable\", \"class\", \"enum\", \"enumMember\", \"type\", \"dependent\", \"dependent\", \"namespace\", \"typeParameter\", \"concept\", \"type\", \"macro\", \"comment\" }        },        range = false      },      signatureHelpProvider = {        triggerCharacters = { \"(\", \",\" }      },      textDocumentSync = {        change = 2,        openClose = true,        save = true      },      typeHierarchyProvider = true,      workspaceSymbolProvider = true    },    offsetEncoding = \"utf-8\",    serverInfo = {      name = \"clangd\",      version = \"clangd version 12.0.1\"    }  }}\r\n[ DEBUG ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"initialized\",  params = {    [true] = 6  }}\r\n[ DEBUG ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp.lua:855 ]\t\"LSP[clangd]\"\t\"server_capabilities\"\t{  astProvider = true,  callHierarchyProvider = true,  codeActionProvider = {    codeActionKinds = { \"quickfix\", \"refactor\", \"info\" }  },  compilationDatabase = {    automaticReload = true  },  completionProvider = {    allCommitCharacters = { \" \", \"\\t\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"<\", \">\", \":\", \";\", \",\", \"+\", \"-\", \"/\", \"*\", \"%\", \"^\", \"&\", \"#\", \"?\", \".\", \"=\", '\"', \"'\", \"|\" },    resolveProvider = false,    triggerCharacters = { \".\", \"<\", \">\", \":\", '\"', \"/\" }  },  declarationProvider = true,  definitionProvider = true,  documentFormattingProvider = true,  documentHighlightProvider = true,  documentLinkProvider = {    resolveProvider = false  },  documentOnTypeFormattingProvider = {    firstTriggerCharacter = \"\\n\",    moreTriggerCharacter = {}  },  documentRangeFormattingProvider = true,  documentSymbolProvider = true,  executeCommandProvider = {    commands = { \"clangd.applyFix\", \"clangd.applyTweak\" }  },  hoverProvider = true,  implementationProvider = true,  memoryUsageProvider = true,  referencesProvider = true,  renameProvider = {    prepareProvider = true  },  selectionRangeProvider = true,  semanticTokensProvider = {    full = {      delta = true    },    legend = {      tokenModifiers = {},      tokenTypes = { \"variable\", \"variable\", \"parameter\", \"function\", \"method\", \"function\", \"property\", \"variable\", \"class\", \"enum\", \"enumMember\", \"type\", \"dependent\", \"dependent\", \"namespace\", \"typeParameter\", \"concept\", \"type\", \"macro\", \"comment\" }    },    range = false  },  signatureHelpProvider = {    triggerCharacters = { \"(\", \",\" }  },  textDocumentSync = {    change = 2,    openClose = true,    save = true  },  typeHierarchyProvider = true,  workspaceSymbolProvider = true}\r\n[ INFO ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp.lua:856 ]\t\"LSP[clangd]\"\t\"initialized\"\t{  resolved_capabilities = {    call_hierarchy = true,    code_action = {      codeActionKinds = { \"quickfix\", \"refactor\", \"info\" }    },    code_lens = false,    code_lens_resolve = false,    completion = true,    declaration = true,    document_formatting = true,    document_highlight = true,    document_range_formatting = true,    document_symbol = true,    execute_command = true,    find_references = true,    goto_definition = true,    hover = true,    implementation = true,    rename = true,    signature_help = true,    signature_help_trigger_characters = { \"(\", \",\" },    text_document_did_change = 2,    text_document_open_close = true,    text_document_save = true,    text_document_save_include_text = false,    text_document_will_save = false,    text_document_will_save_wait_until = false,    type_definition = false,    workspace_folder_properties = {      changeNotifications = false,      supported = false    },    workspace_symbol = true  }}\r\n[ DEBUG ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didOpen\",  params = {    textDocument = {      languageId = \"cpp\",      text = '#include <iostream>\\n\\nint main() \\n{\\n\\tint x = 32;\\n\\n\\tstd::cout << \"hello\" << std::endl;\\n}\\n',      uri = \"file:///<source-file>\",      version = 0    }  }}\r\n[ DEBUG ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/handlers.lua:455 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  bufnr = 1,  client_id = 1,  params = {    diagnostics = {},    uri = \"file:///<source-file>\"  }}\r\n[ ERROR ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[20:56:47.491] <-- initialized\\nI[20:56:47.491] <-- textDocument/didOpen\\n\"\r\n[ ERROR ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[20:56:47.492] Failed to find compilation database for <source-file>\\n\"\r\n[ ERROR ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[20:56:47.492] ASTWorker building file <source-file> version 0 with command clangd fallback\\n[<source-folder>]\\n/usr/bin/clang <source-file> -fsyntax-only -resource-dir=/usr/lib/clang/12.0.1\\n\"\r\n[ ERROR ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[20:56:47.978] --> textDocument/publishDiagnostics\\n\"\r\n[ DEBUG ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = {},    uri = \"file:///<source-file>\",    version = 0  }}\r\n[ DEBUG ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp.lua:676 ]\t\"notification\"\t\"textDocument/publishDiagnostics\"\t{  diagnostics = {},  uri = \"file:///<source-file>\",  version = 0}\r\n[ DEBUG ] 2021-08-12T20:56:47-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/handlers.lua:455 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 1,  params = {    diagnostics = {},    uri = \"file:///<source-file>\",    version = 0  }}\r\n[ DEBUG ] 2021-08-12T20:56:48-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didClose\",  params = {    textDocument = {      uri = \"file:///<source-file>\"    }  }}\r\n[ ERROR ] 2021-08-12T20:56:48-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[20:56:48.898] <-- textDocument/didClose\\n\"\r\n[ ERROR ] 2021-08-12T20:56:48-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[20:56:48.898] --> textDocument/publishDiagnostics\\n\"\r\n[ DEBUG ] 2021-08-12T20:56:48-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = {},    uri = \"file:///<source-file>\"  }}\r\n[ DEBUG ] 2021-08-12T20:56:48-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp.lua:676 ]\t\"notification\"\t\"textDocument/publishDiagnostics\"\t{  diagnostics = {},  uri = \"file:///<source-file>\"}\r\n[ DEBUG ] 2021-08-12T20:56:48-0500 ] ...<location-of-source-neovim>/bin/share/nvim/runtime/lua/vim/lsp/handlers.lua:455 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 1,  params = {    diagnostics = {},    uri = \"file:///<source-file>\"  }}\r\n```\r\n\r\n\r\n</details>\r\n",
    "closed_at": "2021-08-13T02:35:10Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "You are lazy loading a lazy load. Your filetype autocommand is calling a function which maps a filetype autocommand which can't be called because the buffer filetype trigger was already called (and which mapped it).",
            "created_at": "2021-08-13T02:35:07Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1142#issuecomment-898130268",
            "id": 898130268,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1142",
            "node_id": "IC_kwDODTQC1841iGFc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/898130268/reactions"
            },
            "updated_at": "2021-08-13T02:35:07Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/898130268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "I see. Thanks for the quick response. \r\nThere is a lot for me to learn.",
            "created_at": "2021-08-13T03:15:35Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1142#issuecomment-898157221",
            "id": 898157221,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1142",
            "node_id": "IC_kwDODTQC1841iMql",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/898157221/reactions"
            },
            "updated_at": "2021-08-13T03:15:35Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/898157221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40518844?v=4",
                "events_url": "https://api.github.com/users/Cartogy/events{/privacy}",
                "followers_url": "https://api.github.com/users/Cartogy/followers",
                "following_url": "https://api.github.com/users/Cartogy/following{/other_user}",
                "gists_url": "https://api.github.com/users/Cartogy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Cartogy",
                "id": 40518844,
                "login": "Cartogy",
                "node_id": "MDQ6VXNlcjQwNTE4ODQ0",
                "organizations_url": "https://api.github.com/users/Cartogy/orgs",
                "received_events_url": "https://api.github.com/users/Cartogy/received_events",
                "repos_url": "https://api.github.com/users/Cartogy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Cartogy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Cartogy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Cartogy"
            }
        },
        {
            "author_association": "NONE",
            "body": "Those who use lazy.nvim could face the same problem https://github.com/folke/lazy.nvim/issues/880 for the same reason",
            "created_at": "2023-07-29T19:16:57Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1142#issuecomment-1656844163",
            "id": 1656844163,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1142",
            "node_id": "IC_kwDODTQC185iwW-D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1656844163/reactions"
            },
            "updated_at": "2023-07-29T19:16:57Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1656844163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2083950?v=4",
                "events_url": "https://api.github.com/users/Congee/events{/privacy}",
                "followers_url": "https://api.github.com/users/Congee/followers",
                "following_url": "https://api.github.com/users/Congee/following{/other_user}",
                "gists_url": "https://api.github.com/users/Congee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Congee",
                "id": 2083950,
                "login": "Congee",
                "node_id": "MDQ6VXNlcjIwODM5NTA=",
                "organizations_url": "https://api.github.com/users/Congee/orgs",
                "received_events_url": "https://api.github.com/users/Congee/received_events",
                "repos_url": "https://api.github.com/users/Congee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Congee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Congee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Congee"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1142/comments",
    "created_at": "2021-08-13T02:19:52Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1142/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1142",
    "id": 969945521,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1142/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5Njk5NDU1MjE=",
    "number": 1142,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1142/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1142/timeline",
    "title": "Linting works after activating the LSP twice using Autocommand FileType.",
    "updated_at": "2023-07-29T19:16:58Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1142",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/40518844?v=4",
        "events_url": "https://api.github.com/users/Cartogy/events{/privacy}",
        "followers_url": "https://api.github.com/users/Cartogy/followers",
        "following_url": "https://api.github.com/users/Cartogy/following{/other_user}",
        "gists_url": "https://api.github.com/users/Cartogy/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Cartogy",
        "id": 40518844,
        "login": "Cartogy",
        "node_id": "MDQ6VXNlcjQwNTE4ODQ0",
        "organizations_url": "https://api.github.com/users/Cartogy/orgs",
        "received_events_url": "https://api.github.com/users/Cartogy/received_events",
        "repos_url": "https://api.github.com/users/Cartogy/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Cartogy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Cartogy/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Cartogy"
    }
}