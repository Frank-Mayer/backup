{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Language server\r\n\r\nrust-analyzer\r\n\r\n### Requested feature\r\n\r\nI want to be able to activate Features and change the target, for which I need to restart the language server.\r\n\r\nI'm currently doing this:\r\n```lua\r\nfunction RustTarget(target)\r\n    for _, client in ipairs(vim.lsp.get_active_clients()) do\r\n        if client.name == \"rust_analyzer\" then\r\n            local settings = client.config.settings\r\n            client.stop()\r\n            settings[\"rust-analyzer\"] = vim.tbl_deep_extend(\"force\",\r\n            settings[\"rust-analyzer\"], { cargo = { target = target } })\r\n\r\n            local config = require(\"lspconfig.configs\")[\"rust_analyzer\"]\r\n            config.setup({\r\n                settings = settings\r\n            })\r\n\r\n            config.launch()\r\n        end\r\n    end\r\nend\r\n```\r\n\r\nIdeally, I'd like a way to do `client.restart({settings = updated_settings})`.\r\n\r\nIt would also be nice, if I could get a better way to access a `client` i.e.\r\n```lua\r\nsomething_get_client(\"rust-analyzer\")\r\n-- instead of\r\nfor _, client in ipairs(vim.lsp.get_active_clients()) do\r\n    if client.name == \"rust_analyzer\" then\r\n```\r\n\r\n\r\n### Other clients which have this feature\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2821/comments",
    "created_at": "2023-09-19T12:35:39Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2821/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2821",
    "id": 1902887110,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "New feature or request",
            "id": 1674892767,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzY3",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2821/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC185xa8DG",
    "number": 2821,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2821/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2821/timeline",
    "title": "Ergonomic ability to restart with updated settings",
    "updated_at": "2023-09-19T12:39:38Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2821",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11978847?v=4",
        "events_url": "https://api.github.com/users/ModProg/events{/privacy}",
        "followers_url": "https://api.github.com/users/ModProg/followers",
        "following_url": "https://api.github.com/users/ModProg/following{/other_user}",
        "gists_url": "https://api.github.com/users/ModProg/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ModProg",
        "id": 11978847,
        "login": "ModProg",
        "node_id": "MDQ6VXNlcjExOTc4ODQ3",
        "organizations_url": "https://api.github.com/users/ModProg/orgs",
        "received_events_url": "https://api.github.com/users/ModProg/received_events",
        "repos_url": "https://api.github.com/users/ModProg/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ModProg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ModProg/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ModProg"
    }
}