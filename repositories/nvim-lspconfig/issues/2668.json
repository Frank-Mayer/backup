{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Description\r\n\r\nIn the following video, I have three language servers running: `pyright`, `ccls`, and `tsserver`. Using a minimal config (`minimal.lua`), I opened three buffers (`somefile.py`, `somefile.js`, `somefile.c`) and then close `somefile.py` with `:bw`. It is clear from the video that `pyright` was still running even though the buffer has been closed. After running `:LspRestart`, for some reason `pyright` reattached itself to buffer 2 (the javascript file, where `tsserver` is attached).  \r\n\r\nhttps://github.com/neovim/nvim-lspconfig/assets/69449791/c53dd1ad-0d12-4110-af83-31d51bb6cf3b\r\n\r\nFor the sake of completeness, I did some testing with other language servers as well. In the video that follows, I tested with `tsserver` and `vscode-html-language-server`. \r\n\r\nhttps://github.com/neovim/nvim-lspconfig/assets/69449791/a1bb4c49-648d-421e-91b6-62eeecb7776f\r\n\r\nOther permutations of language servers proved to be problematic as well (`pyright` and `vscode-html-language-server`, `pyright` and `tsserver`, `pyright` and `ccls`.)\r\n\r\nIn the first video, however, notice that `pyright` reattached to buffer 2 (where `tsserver` was attached) but not buffer 1 (where `ccls` was attached). Upon further testing (see video below), it turned out `ccls` does not exhibit this strange behavior; that is, if I close any buffer that `ccls` is attached to and then run `LspRestart`, `ccls` will not attach itself to other buffers like `pyright` and `tsserver` do. \r\n\r\nhttps://github.com/neovim/nvim-lspconfig/assets/69449791/d557ba1f-f0b1-4a51-9b27-c6c197f21bf1\r\n\r\nI did check the Lsp logs, but they weren't helpful. `:checkhealth` didn't report any issue with my neovim either.\r\n\r\n### Neovim version\r\n\r\nNVIM v0.9.1\r\nBuild type: Release\r\nLuaJIT 2.1.0-beta3\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/usr/share/nvim\"\r\n\r\n### Nvim-lspconfig version\r\n\r\n_No response_\r\n\r\n### Operating system and version\r\n\r\nEndeavourOS Linux x86_64\r\n\r\n### Affected language servers\r\n\r\ntsserver, pyright, vscode-html-languageserver\r\n\r\n### Steps to reproduce\r\n\r\n1. Create two files: `somefile.py`, `somefile.js`\r\n2. Open all three files in a neovim instance. \r\n3. Make sure that all the language servers are attached. \r\n4. Close `somefile.py`\r\n5. Run `:LspInfo` to check that `pyright` is still running in the background; `pyright` is active but not attached to any buffer.\r\n6. Now run `:LspRestart`\r\n7. You should now see a bunch of errors reported because `pyright` has just be re-attached to `somefile.js`\r\n8. Check `:LspInfo` again to confirm.\r\n\r\n### Actual behavior\r\n\r\nActive language servers reattached to other buffers after running `:LspRestart`. The reattachment process does not respect the file type of the buffer.\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Minimal config\r\n\r\n```Lua\r\nvim.cmd [[set runtimepath=$VIMRUNTIME]]\r\nvim.cmd [[set packpath=/tmp/nvim/site]]\r\nlocal package_root = '/tmp/nvim/site/pack'\r\nlocal install_path = package_root .. '/packer/start/packer.nvim'\r\nlocal function load_plugins()\r\n    require('packer').startup({\r\n        function(use)\r\n            use 'wbthomason/packer.nvim'\r\n            use\r\n            {\r\n                \"nvim-treesitter/nvim-treesitter\",\r\n                run = ':TSUpdate',\r\n                config = function()\r\n                    require(\"nvim-treesitter.configs\").setup({\r\n                        highlight = {\r\n                            enable = true,\r\n                            additional_vim_regex_highlighting = true,\r\n                        },\r\n                        ensure_installed = { \"python\", \"javascript\", \"c\", \"cpp\", \"lua\", \"html\", \"css\" },\r\n                    })\r\n                end,\r\n            }\r\n            use\r\n            {\r\n                \"neovim/nvim-lspconfig\",\r\n                config = function()\r\n                    local lspconfig = require(\"lspconfig\")\r\n                    local opts = { noremap = true, silent = true }\r\n                    --Basic keymappings\r\n                    vim.keymap.set('n', '<space>d', vim.diagnostic.open_float, opts)\r\n                    vim.keymap.set('n', '[d', vim.diagnostic.goto_prev, opts)\r\n                    vim.keymap.set('n', ']d', vim.diagnostic.goto_next, opts)\r\n                    --vim.keymap.set('n', '<space>q', vim.diagnostic.setloclist, opts)\r\n\r\n                    --Keymappings on attach\r\n                    local on_attach = function(client, bufnr)\r\n                        vim.api.nvim_buf_set_option(bufnr, 'omnifunc', 'v:lua.vim.lsp.omnifunc')\r\n\r\n                        local bufopts = { noremap = true, silent = true, buffer = bufnr }\r\n                        vim.keymap.set('n', 'gD', vim.lsp.buf.declaration, bufopts)\r\n                        vim.keymap.set('n', 'gd', vim.lsp.buf.definition, bufopts)\r\n                        vim.keymap.set('n', 'K', vim.lsp.buf.hover, bufopts)\r\n                        vim.keymap.set('n', 'gi', vim.lsp.buf.implementation, bufopts)\r\n                        vim.keymap.set('n', '<C-k>', vim.lsp.buf.signature_help, bufopts)\r\n                        vim.keymap.set('n', '<space>wa', vim.lsp.buf.add_workspace_folder, bufopts)\r\n                        vim.keymap.set('n', '<space>wr', vim.lsp.buf.remove_workspace_folder, bufopts)\r\n                        vim.keymap.set('n', '<space>wl', function()\r\n                            print(vim.inspect(vim.lsp.buf.list_workspace_folders()))\r\n                        end, bufopts)\r\n                        vim.keymap.set('n', '<space>D', vim.lsp.buf.type_definition, bufopts)\r\n                        vim.keymap.set('n', '<space>rn', vim.lsp.buf.rename, bufopts)\r\n                        vim.keymap.set('n', '<space>ca', vim.lsp.buf.code_action, bufopts)\r\n                        vim.keymap.set('n', 'gr', vim.lsp.buf.references, bufopts)\r\n                    end\r\n\r\n                    local lsp_flags = {\r\n                        debounce_text_changes = 150,\r\n                    }\r\n\r\n                    --Customize diagnostics\r\n                    local signs = { Error = '󰅙', Warn = '󰀦', Hint = \"󰐗\", Info = \"󰋼\" }\r\n                    for type, icon in pairs(signs) do\r\n                        local hl = \"DiagnosticSign\" .. type\r\n                        vim.fn.sign_define(hl, { text = icon, texthl = hl, numhl = hl })\r\n                    end\r\n                    vim.diagnostic.config({\r\n                        underline = false,\r\n                        virtual_text = false,\r\n                    })\r\n\r\n                    --Server configurations\r\n                    lspconfig.pyright.setup({\r\n                        on_attach = on_attach,\r\n                    })\r\n\r\n                    lspconfig.tsserver.setup({\r\n                        init_options = {\r\n                            hostInfo = \"neovim\",\r\n                            preferences = {\r\n                                autoImportFileExcludePatterns = {},\r\n                                importModuleSpecifierEnding = \"js\",\r\n                            },\r\n                        },\r\n                        on_attach = on_attach,\r\n                    })\r\n\r\n                    lspconfig.ccls.setup({\r\n                        on_attach = on_attach,\r\n                    })\r\n\r\n                    lspconfig.html.setup({\r\n                        on_attach = on_attach,\r\n                    })\r\n\r\n                    lspconfig.cssls.setup({\r\n                        on_attach = on_attach,\r\n                    })\r\n\r\n                    -- Enable borders for floating windows\r\n                    local lspconfig_win = require('lspconfig.ui.windows')\r\n                    lspconfig_win.default_options = {\r\n                        border = \"single\"\r\n                    }\r\n                end\r\n            }\r\n        end,\r\n        config = {\r\n            package_root = package_root,\r\n            compile_path = install_path .. '/plugin/packer_compiled.lua',\r\n            display = { non_interactive = true },\r\n        }\r\n    })\r\nend\r\n\r\nif vim.fn.isdirectory(install_path) == 0 then\r\n    vim.fn.system { 'git', 'clone', '--depth=1', 'https://github.com/wbthomason/packer.nvim', install_path }\r\nend\r\n\r\nload_plugins()\r\nrequire('packer').sync()\r\nvim.cmd [[autocmd User PackerComplete ++once echo \"Ready!\"]]\r\n```\r\n\r\n\r\n### LSP log\r\n\r\nhttps://gist.github.com/anthony-S93/9a934751f054f23994824938d3da4925",
    "closed_at": "2023-06-12T13:15:13Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "because nvim is parent process of server process. there does not have a check that no buffers attached then close the server process when buffer deleted. so that's way you see the pyright still exist.   maybe need bind a buffer autocmd event `BufDelete`  `BufWipeout` . check `client.attached_buffers` is empty or not. if empty close server process.  do it on core or lspconfig ? maybe more suggest on core.\r\n\r\non core do it on `vim.lsp.start_client` . on lspconfig do it on `util.manager.add`",
            "created_at": "2023-06-12T12:37:24Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2668#issuecomment-1587259647",
            "id": 1587259647,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2668",
            "node_id": "IC_kwDODTQC185em6j_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1587259647/reactions"
            },
            "updated_at": "2023-06-12T12:42:18Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1587259647",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "author_association": "NONE",
            "body": "> because nvim is parent process of server process. there does not have a check that no buffers attached then close the server process when buffer deleted. so that's way you see the pyright still exist. maybe need bind a buffer autocmd event `BufDelete` `BufWipeout` . check `client.attached_buffers` is empty or not. if empty close server process. do it on core or lspconfig ? maybe more suggest on core.\r\n\r\nThanks for the reply. I'm aware of this. But the issue isn't about the fact that the language server is still active and running; my issue is with the fact that it _reattaches_ to other buffers (even though they are not supposed to attach to those buffers because their filetypes don't match) every time I run `:LspRestart`\r\n\r\nThis has never happened before. I only noticed this recently. \r\n\r\nBefore this, the server can remain active after a buffer closes, but they won't attach to other buffers after running `:LspRestart`",
            "created_at": "2023-06-12T13:00:33Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2668#issuecomment-1587297019",
            "id": 1587297019,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2668",
            "node_id": "IC_kwDODTQC185enDr7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1587297019/reactions"
            },
            "updated_at": "2023-06-13T03:50:11Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1587297019",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/69449791?v=4",
                "events_url": "https://api.github.com/users/anthony-S93/events{/privacy}",
                "followers_url": "https://api.github.com/users/anthony-S93/followers",
                "following_url": "https://api.github.com/users/anthony-S93/following{/other_user}",
                "gists_url": "https://api.github.com/users/anthony-S93/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/anthony-S93",
                "id": 69449791,
                "login": "anthony-S93",
                "node_id": "MDQ6VXNlcjY5NDQ5Nzkx",
                "organizations_url": "https://api.github.com/users/anthony-S93/orgs",
                "received_events_url": "https://api.github.com/users/anthony-S93/received_events",
                "repos_url": "https://api.github.com/users/anthony-S93/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/anthony-S93/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/anthony-S93/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/anthony-S93"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2668/comments",
    "created_at": "2023-06-12T12:15:16Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2668/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2668",
    "id": 1752639006,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2668/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC185odyYe",
    "number": 2668,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2668/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2668/timeline",
    "title": "`LspRestart` attaches some active language servers to the buffers in memory even though the file types don't match.",
    "updated_at": "2023-06-13T03:50:11Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2668",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/69449791?v=4",
        "events_url": "https://api.github.com/users/anthony-S93/events{/privacy}",
        "followers_url": "https://api.github.com/users/anthony-S93/followers",
        "following_url": "https://api.github.com/users/anthony-S93/following{/other_user}",
        "gists_url": "https://api.github.com/users/anthony-S93/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/anthony-S93",
        "id": 69449791,
        "login": "anthony-S93",
        "node_id": "MDQ6VXNlcjY5NDQ5Nzkx",
        "organizations_url": "https://api.github.com/users/anthony-S93/orgs",
        "received_events_url": "https://api.github.com/users/anthony-S93/received_events",
        "repos_url": "https://api.github.com/users/anthony-S93/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/anthony-S93/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/anthony-S93/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/anthony-S93"
    }
}