{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Description\r\n\r\nI'm **_new to neovim_** and I am attempting to configure `robotframework_ls` [server](https://github.com/robocorp/robotframework-lsp/tree/master/robotframework-ls).  I understand that this is a client-server architecture, where `neovim` is the client and `robotframework_ls` is the server.  However, and I've searched the internet for examples, I'm unable to understand how to configure the client to update the server's pythonpath, using the `robot.pythonpath` settings as described in its [configuration settings](https://github.com/robocorp/robotframework-lsp/blob/master/robotframework-ls/docs/config.md).\r\n\r\nThe issue I'm encountering is an inability for the LS to identify the `SeleniumLibrary` within my `robot` file (see below screen shot). \r\n\r\n![robotframework-ls-error](https://user-images.githubusercontent.com/798521/233870766-117e4f5f-728f-4621-a88e-fe992d0d0fd9.png)\r\n\r\nI'd like to configure the server to accept the `robot.pythonpath` as noted in the  [configuration settings](https://github.com/robocorp/robotframework-lsp/blob/master/robotframework-ls/docs/config.md), but I'm new to neovim and I'm not having any luck setting up the LS to support this.\r\n\r\n\r\n\r\n### Neovim version\r\n\r\nNVIM v0.8.1\r\nBuild type: Release\r\nLuaJIT 2.1.0-beta3\r\nCompiled by runner@fv-az178-366\r\n\r\n### Nvim-lspconfig version\r\n\r\n_No response_\r\n\r\n### Operating system and version\r\n\r\nKubuntu 22.04.2 LTS x86_64 (Kernel: 5.15.0-70-generic)\r\n\r\n### Affected language servers\r\n\r\nrobotframework_ls\r\n\r\n### Steps to reproduce\r\n\r\n1. be sure to install `robotframework_ls` using Mason\r\n2. open a robot (or resource) file that contains a statement that uses the `SeleniumLibrary`\r\n3. if the language server finds the selenium library, then I would expect to see no errors\r\n\r\n### Actual behavior\r\n\r\n![robotframework-ls-error](https://user-images.githubusercontent.com/798521/233870926-7d7e3944-2212-4d6d-b1be-04e2129da588.png)\r\n\r\n\r\n### Expected behavior\r\n\r\nno errors from language server\r\n\r\n### Minimal config\r\n\r\n```Lua\r\nlocal on_windows = vim.loop.os_uname().version:match 'Windows'\r\n\r\nlocal function join_paths(...)\r\n  local path_sep = on_windows and '\\\\' or '/'\r\n  local result = table.concat({ ... }, path_sep)\r\n  return result\r\nend\r\n\r\nvim.cmd [[set runtimepath=$VIMRUNTIME]]\r\n\r\nlocal temp_dir = vim.loop.os_getenv 'TEMP' or '/tmp'\r\n\r\nvim.cmd('set packpath=' .. join_paths(temp_dir, 'nvim', 'site'))\r\n\r\nlocal package_root = join_paths(temp_dir, 'nvim', 'site', 'pack')\r\nlocal lspconfig_path = join_paths(package_root, 'test', 'start', 'nvim-lspconfig')\r\n\r\nif vim.fn.isdirectory(lspconfig_path) ~= 1 then\r\n  vim.fn.system { 'git', 'clone', 'https://github.com/neovim/nvim-lspconfig', lspconfig_path }\r\nend\r\n\r\nvim.lsp.set_log_level 'trace'\r\nrequire('vim.lsp.log').set_format_func(vim.inspect)\r\nlocal nvim_lsp = require 'lspconfig'\r\nlocal on_attach = function(_, bufnr)\r\n  local function buf_set_option(...)\r\n    vim.api.nvim_buf_set_option(bufnr, ...)\r\n  end\r\n\r\n  buf_set_option('omnifunc', 'v:lua.vim.lsp.omnifunc')\r\n\r\n  -- Mappings.\r\n  local opts = { buffer = bufnr, noremap = true, silent = true }\r\n  vim.keymap.set('n', 'gD', vim.lsp.buf.declaration, opts)\r\n  vim.keymap.set('n', 'gd', vim.lsp.buf.definition, opts)\r\n  vim.keymap.set('n', 'K', vim.lsp.buf.hover, opts)\r\n  vim.keymap.set('n', 'gi', vim.lsp.buf.implementation, opts)\r\n  vim.keymap.set('n', '<C-k>', vim.lsp.buf.signature_help, opts)\r\n  vim.keymap.set('n', '<space>wa', vim.lsp.buf.add_workspace_folder, opts)\r\n  vim.keymap.set('n', '<space>wr', vim.lsp.buf.remove_workspace_folder, opts)\r\n  vim.keymap.set('n', '<space>wl', function()\r\n    print(vim.inspect(vim.lsp.buf.list_workspace_folders()))\r\n  end, opts)\r\n  vim.keymap.set('n', '<space>D', vim.lsp.buf.type_definition, opts)\r\n  vim.keymap.set('n', '<space>rn', vim.lsp.buf.rename, opts)\r\n  vim.keymap.set('n', 'gr', vim.lsp.buf.references, opts)\r\n  vim.keymap.set('n', '<space>e', vim.diagnostic.open_float, opts)\r\n  vim.keymap.set('n', '[d', vim.diagnostic.goto_prev, opts)\r\n  vim.keymap.set('n', ']d', vim.diagnostic.goto_next, opts)\r\n  vim.keymap.set('n', '<space>q', vim.diagnostic.setloclist, opts)\r\nend\r\n\r\n-- Add the server that troubles you here\r\nlocal name = 'robotframework_ls'\r\nlocal cmd = { 'robotframework_ls' } -- needed for elixirls, lua_ls, omnisharp\r\nif not name then\r\n  print 'You have not defined a server name, please edit minimal_init.lua'\r\nend\r\nif not nvim_lsp[name].document_config.default_config.cmd and not cmd then\r\n  print [[You have not defined a server default cmd for a server\r\n    that requires it please edit minimal_init.lua]]\r\nend\r\n\r\nnvim_lsp[name].setup {\r\n  cmd = cmd,\r\n  on_attach = on_attach,\r\n}\r\n\r\nprint [[You can find your log at $HOME/.cache/nvim/lsp.log. Please paste in a github issue under a details tag as described in the issue template.]]\r\n```\r\n\r\n\r\n### LSP log\r\n[lsp log file for robotframework](https://gist.github.com/restagner/f3434294e31c784c5e11172cb20a675e)",
    "closed_at": "2023-07-14T16:14:21Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "it should look like this \r\n```lua\r\nnvim_lsp[name].setup {\r\n  cmd = cmd,\r\n  on_attach = on_attach,\r\n  settings = {\r\n    robot = {\r\n      pythonpath = \"patthere\"\r\n    }\r\n  }\r\n}\r\n```",
            "created_at": "2023-04-24T15:11:03Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2572#issuecomment-1520364756",
            "id": 1520364756,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2572",
            "node_id": "IC_kwDODTQC185anuzU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1520364756/reactions"
            },
            "updated_at": "2023-04-24T15:11:03Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1520364756",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22427111?v=4",
                "events_url": "https://api.github.com/users/sigmaSd/events{/privacy}",
                "followers_url": "https://api.github.com/users/sigmaSd/followers",
                "following_url": "https://api.github.com/users/sigmaSd/following{/other_user}",
                "gists_url": "https://api.github.com/users/sigmaSd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sigmaSd",
                "id": 22427111,
                "login": "sigmaSd",
                "node_id": "MDQ6VXNlcjIyNDI3MTEx",
                "organizations_url": "https://api.github.com/users/sigmaSd/orgs",
                "received_events_url": "https://api.github.com/users/sigmaSd/received_events",
                "repos_url": "https://api.github.com/users/sigmaSd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sigmaSd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sigmaSd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sigmaSd"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2572/comments",
    "created_at": "2023-04-23T23:13:50Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2572/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2572",
    "id": 1680215427,
    "labels": [
        {
            "color": "e6e6e6",
            "default": true,
            "description": "Further information is requested",
            "id": 1674892775,
            "name": "question",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzc1",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/question"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2572/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC185kJg2D",
    "number": 2572,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2572/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2572/timeline",
    "title": "Unable to configure robotframework_ls server",
    "updated_at": "2023-07-14T16:14:21Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2572",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/798521?v=4",
        "events_url": "https://api.github.com/users/restagner/events{/privacy}",
        "followers_url": "https://api.github.com/users/restagner/followers",
        "following_url": "https://api.github.com/users/restagner/following{/other_user}",
        "gists_url": "https://api.github.com/users/restagner/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/restagner",
        "id": 798521,
        "login": "restagner",
        "node_id": "MDQ6VXNlcjc5ODUyMQ==",
        "organizations_url": "https://api.github.com/users/restagner/orgs",
        "received_events_url": "https://api.github.com/users/restagner/received_events",
        "repos_url": "https://api.github.com/users/restagner/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/restagner/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/restagner/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/restagner"
    }
}