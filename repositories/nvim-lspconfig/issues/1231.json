{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "It doesn't highlight any compiling errors that the user writes in the file, even after save.\r\n\r\n\r\n- `nvim --version`:\r\n```\r\nNVIM v0.5.0\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.0-beta3\r\nCompilation: C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/cl.exe /DWIN32 /D_WINDOWS /W3 -DNVIM_TS_HAS_SET_MATCH_LIMIT /MD /Zi /O2 /Ob1 /DNDEBUG /W3 -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE -DWIN32 -D_WIN32_WINNT=0x0600 -DINCLUDE_GENERATED_DECLARATIONS -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -DMIN_LOG_LEVEL=3 -ID:/a/neovim/neovim/build/config -ID:/a/neovim/neovim/src -ID:/a/neovim/neovim/nvim-deps/usr/include -ID:/a/neovim/neovim/build/src/nvim/auto -ID:/a/neovim/neovim/build/include\r\nCompiled by runneradmin@fv-az152-786\r\n```\r\n- nvim-lspconfig version(commit hash):\r\n`ea72eaae8809c0e475a8248aa665034d7d4520db`\r\n- What language server (If the problem is related to a specific language server):\r\n`rust-analyzer`\r\n- Can you reproduce this behavior on other language server clients (vscode, languageclient-neovim, coc.nvim, etc.):\r\ncoc works well.\r\n- Can you reproduce this behavior on other language servers offered in the nvim-lspconfig repo? (pyls -> pyright):\r\nI tested `clangd` on a C++ project and it works well.\r\n- Is the problem isolated to a particular language server:\r\nIt seems to be isolated to `rust-analyzer`\r\n- Operating system/version:\r\nTested on Windows 10 and Arch Linux.\r\n\r\n### How to reproduce the problem from neovim startup\r\n1. cd to any Rust project and start neovim on any rust file.\r\n2. Write gibberish like \"wajidoawjodaw;\"\r\n### Actual behaviour\r\nIt should highlight the error\r\n### Expected behaviour\r\nIt doesn't highlight any errors except \"MISSING SEMICOLON\"\r\n\r\n### Minimal init.vim or init.lua and code sample\r\n```vim\r\ncall plug#begin('~/.local/share/nvim/plugged')\r\nPlug 'neovim/nvim-lspconfig'\r\ncall plug#end()\r\n\r\n\" \" Color theme config\r\nset termguicolors\r\nset background=dark\r\n\r\nlua <<EOF\r\nrequire('lspconfig').rust_analyzer.setup{\r\n  capabilities = vim.lsp.protocol.make_client_capabilities(),\r\n}\r\nEOF\r\n```\r\n### Health check\r\n<details>\r\n<summary>Checkhealth result</summary>\r\n\r\n```\r\nhealth#lspconfig#check\r\n========================================================================\r\n## Checking language server protocol configuration\r\n  - INFO: rust_analyzer: configuration checked.\r\n```\r\n</details>\r\n\r\n\r\nvideo:\r\n\r\n\r\nhttps://user-images.githubusercontent.com/11927498/132291885-a742c9a2-e64b-4eb2-b19a-7bf442a7427d.mp4\r\n\r\n\r\n",
    "closed_at": "2021-09-07T18:38:31Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Heho,\n\nI guess on_attach is missing:\nhttps://github.com/aserowy/NeoCode/blob/main/lua/language/init.lua\n\nhttps://github.com/aserowy/NeoCode/blob/main/lua/language/lsp/rust.lua\n\nHope it helps.\n\nKind regards ",
            "created_at": "2021-09-07T10:34:38Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1231#issuecomment-914192119",
            "id": 914192119,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231",
            "node_id": "IC_kwDODTQC1842fXb3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914192119/reactions"
            },
            "updated_at": "2021-09-07T10:34:38Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914192119",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8199164?v=4",
                "events_url": "https://api.github.com/users/aserowy/events{/privacy}",
                "followers_url": "https://api.github.com/users/aserowy/followers",
                "following_url": "https://api.github.com/users/aserowy/following{/other_user}",
                "gists_url": "https://api.github.com/users/aserowy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aserowy",
                "id": 8199164,
                "login": "aserowy",
                "node_id": "MDQ6VXNlcjgxOTkxNjQ=",
                "organizations_url": "https://api.github.com/users/aserowy/orgs",
                "received_events_url": "https://api.github.com/users/aserowy/received_events",
                "repos_url": "https://api.github.com/users/aserowy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aserowy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aserowy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aserowy"
            }
        },
        {
            "author_association": "NONE",
            "body": "@aserowy \r\n\r\nThat seems to be for setting up maps and such. I added an empty `on_attach` function with the same result.",
            "created_at": "2021-09-07T14:05:05Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1231#issuecomment-914335357",
            "id": 914335357,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231",
            "node_id": "IC_kwDODTQC1842f6Z9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914335357/reactions"
            },
            "updated_at": "2021-09-07T14:05:05Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914335357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11927498?v=4",
                "events_url": "https://api.github.com/users/lucypero/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucypero/followers",
                "following_url": "https://api.github.com/users/lucypero/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucypero/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucypero",
                "id": 11927498,
                "login": "lucypero",
                "node_id": "MDQ6VXNlcjExOTI3NDk4",
                "organizations_url": "https://api.github.com/users/lucypero/orgs",
                "received_events_url": "https://api.github.com/users/lucypero/received_events",
                "repos_url": "https://api.github.com/users/lucypero/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucypero/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucypero/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucypero"
            }
        },
        {
            "author_association": "NONE",
            "body": "Could this be related? This is in the logs:\r\n\r\n```\r\n[ WARN ] 2021-08-30T10:56:08-0300 ] ...bin\\nvim-win64\\Neovim\\share\\nvim\\runtime\\lua\\vim\\lsp.lua:87 ]\t\"method rust-analyzer/inlayHints is not supported by any of the servers registered for the current buffer\"\r\n````",
            "created_at": "2021-09-07T14:10:23Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1231#issuecomment-914339632",
            "id": 914339632,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231",
            "node_id": "IC_kwDODTQC1842f7cw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914339632/reactions"
            },
            "updated_at": "2021-09-07T14:10:23Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914339632",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11927498?v=4",
                "events_url": "https://api.github.com/users/lucypero/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucypero/followers",
                "following_url": "https://api.github.com/users/lucypero/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucypero/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucypero",
                "id": 11927498,
                "login": "lucypero",
                "node_id": "MDQ6VXNlcjExOTI3NDk4",
                "organizations_url": "https://api.github.com/users/lucypero/orgs",
                "received_events_url": "https://api.github.com/users/lucypero/received_events",
                "repos_url": "https://api.github.com/users/lucypero/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucypero/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucypero/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucypero"
            }
        },
        {
            "author_association": "NONE",
            "body": "Update:\r\n\r\n`clangd` works well on C++ Projects.\r\n\r\nSo it must be a `rust-analyzer` problem.\r\n\r\n![image](https://user-images.githubusercontent.com/11927498/132365731-7f585249-9468-4d49-ae8f-f2fd5d376c0f.png)\r\n",
            "created_at": "2021-09-07T14:51:52Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1231#issuecomment-914372492",
            "id": 914372492,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231",
            "node_id": "IC_kwDODTQC1842gDeM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914372492/reactions"
            },
            "updated_at": "2021-09-07T14:51:52Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914372492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11927498?v=4",
                "events_url": "https://api.github.com/users/lucypero/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucypero/followers",
                "following_url": "https://api.github.com/users/lucypero/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucypero/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucypero",
                "id": 11927498,
                "login": "lucypero",
                "node_id": "MDQ6VXNlcjExOTI3NDk4",
                "organizations_url": "https://api.github.com/users/lucypero/orgs",
                "received_events_url": "https://api.github.com/users/lucypero/received_events",
                "repos_url": "https://api.github.com/users/lucypero/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucypero/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucypero/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucypero"
            }
        },
        {
            "author_association": "NONE",
            "body": "Update:\r\n\r\nI tested this on another Rust project and it works. But I see no reason why it shouldn't work on the one that doesn't work.\r\n\r\n![image](https://user-images.githubusercontent.com/11927498/132366510-74806627-0e39-4b35-8467-fbeaf46a8825.png)\r\n",
            "created_at": "2021-09-07T14:57:15Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1231#issuecomment-914376578",
            "id": 914376578,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231",
            "node_id": "IC_kwDODTQC1842gEeC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914376578/reactions"
            },
            "updated_at": "2021-09-07T14:57:15Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914376578",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11927498?v=4",
                "events_url": "https://api.github.com/users/lucypero/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucypero/followers",
                "following_url": "https://api.github.com/users/lucypero/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucypero/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucypero",
                "id": 11927498,
                "login": "lucypero",
                "node_id": "MDQ6VXNlcjExOTI3NDk4",
                "organizations_url": "https://api.github.com/users/lucypero/orgs",
                "received_events_url": "https://api.github.com/users/lucypero/received_events",
                "repos_url": "https://api.github.com/users/lucypero/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucypero/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucypero/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucypero"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That it shows MISSING_SEMICOLON indicates that it can parse your code but not compile it. I had a similar problem and it turned out that it was missing some environment magic that rustup would typically set up by appending it to your bashrc or whichever shell your using. When I installed cargo using apt it typically does not set up this magic.",
            "created_at": "2021-09-07T16:09:14Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1231#issuecomment-914437569",
            "id": 914437569,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231",
            "node_id": "IC_kwDODTQC1842gTXB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914437569/reactions"
            },
            "updated_at": "2021-09-07T16:09:14Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914437569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That it shows MISSING_SEMICOLON indicates that it can parse your code but not compile it. I had a similar problem and it turned out that it was missing some environment magic that rustup would typically set up by appending it to your bashrc or whichever shell your using. When I installed cargo using apt it typically does not set up this magic. I can't remember what the env variable was that made the difference but at `cargo` and `rustc` have to be in path.",
            "created_at": "2021-09-07T16:25:36Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1231#issuecomment-914449496",
            "id": 914449496,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231",
            "node_id": "IC_kwDODTQC1842gWRY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914449496/reactions"
            },
            "updated_at": "2021-09-07T16:25:36Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914449496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "You can report this behavior upstream to rust-analyzer, but unless there is some spetial initialization option that makes rust try to parse uncompilable files differently I don't think this is something we can fix from our end. We're sending the document correctly and reporting the diagnostics correctly.\r\n\r\n<details>\r\n\r\n```\r\n[ START ] 2021-09-07T11:35:32-0700 ] LSP logging initiated\r\n[ START ] 2021-09-07T11:35:42-0700 ] LSP logging initiated\r\n[ INFO ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:316 ]\t\"Starting RPC client\"\t{  args = {},  cmd = \"rust-analyzer\",  extra = {}}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:829 ]\t\"LSP[rust_analyzer]\"\t\"initialize_params\"\t{  capabilities = {    callHierarchy = {      dynamicRegistration = false    },    textDocument = {      codeAction = {        codeActionLiteralSupport = {          codeActionKind = {            valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" }          }        },        dynamicRegistration = false      },      completion = {        completionItem = {          commitCharactersSupport = false,          deprecatedSupport = false,          documentationFormat = { \"markdown\", \"plaintext\" },          preselectSupport = false,          snippetSupport = true        },        completionItemKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }        },        contextSupport = false,        dynamicRegistration = false      },      declaration = {        linkSupport = true      },      definition = {        linkSupport = true      },      documentHighlight = {        dynamicRegistration = false      },      documentSymbol = {        dynamicRegistration = false,        hierarchicalDocumentSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }        }      },      hover = {        contentFormat = { \"markdown\", \"plaintext\" },        dynamicRegistration = false      },      implementation = {        linkSupport = true      },      publishDiagnostics = {        relatedInformation = true,        tagSupport = {          valueSet = { 1, 2 }        }      },      references = {        dynamicRegistration = false      },      rename = {        dynamicRegistration = false,        prepareSupport = true      },      signatureHelp = {        dynamicRegistration = false,        signatureInformation = {          activeParameterSupport = true,          documentationFormat = { \"markdown\", \"plaintext\" },          parameterInformation = {            labelOffsetSupport = true          }        }      },      synchronization = {        didSave = true,        dynamicRegistration = false,        willSave = false,        willSaveWaitUntil = false      },      typeDefinition = {        linkSupport = true      }    },    window = {      showDocument = {        support = false      },      showMessage = {        messageActionItem = {          additionalPropertiesSupport = false        }      },      workDoneProgress = true    },    workspace = {      applyEdit = true,      configuration = true,      symbol = {        dynamicRegistration = false,        hierarchicalWorkspaceSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }        }      },      workspaceEdit = {        resourceOperations = { \"rename\", \"create\", \"delete\" }      },      workspaceFolders = true    }  },  clientInfo = {    name = \"Neovim\",    version = \"0.6.0\"  },  initializationOptions = vim.empty_dict(),  processId = 41055,  rootPath = \"/home/michael/test-2\",  rootUri = \"file:///home/michael/test-2\",  trace = \"off\",  workspaceFolders = { {      name = \"/home/michael/test-2\",      uri = \"file:///home/michael/test-2\"    } }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"initialize\",  params = {    capabilities = {      callHierarchy = {        dynamicRegistration = false      },      textDocument = {        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" }            }          },          dynamicRegistration = false        },        completion = {          completionItem = {            commitCharactersSupport = false,            deprecatedSupport = false,            documentationFormat = { \"markdown\", \"plaintext\" },            preselectSupport = false,            snippetSupport = true          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }          },          contextSupport = false,          dynamicRegistration = false        },        declaration = {          linkSupport = true        },        definition = {          linkSupport = true        },        documentHighlight = {          dynamicRegistration = false        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        hover = {          contentFormat = { \"markdown\", \"plaintext\" },          dynamicRegistration = false        },        implementation = {          linkSupport = true        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 }          }        },        references = {          dynamicRegistration = false        },        rename = {          dynamicRegistration = false,          prepareSupport = true        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            activeParameterSupport = true,            documentationFormat = { \"markdown\", \"plaintext\" },            parameterInformation = {              labelOffsetSupport = true            }          }        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = false,          willSaveWaitUntil = false        },        typeDefinition = {          linkSupport = true        }      },      window = {        showDocument = {          support = false        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false          }        },        workDoneProgress = true      },      workspace = {        applyEdit = true,        configuration = true,        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        workspaceEdit = {          resourceOperations = { \"rename\", \"create\", \"delete\" }        },        workspaceFolders = true      }    },    clientInfo = {      name = \"Neovim\",      version = \"0.6.0\"    },    initializationOptions = vim.empty_dict(),    processId = 41055,    rootPath = \"/home/michael/test-2\",    rootUri = \"file:///home/michael/test-2\",    trace = \"off\",    workspaceFolders = { {        name = \"/home/michael/test-2\",        uri = \"file:///home/michael/test-2\"      } }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 1,  jsonrpc = \"2.0\",  result = {    capabilities = {      callHierarchyProvider = true,      codeActionProvider = {        codeActionKinds = { \"\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\" },        resolveProvider = true      },      codeLensProvider = {        resolveProvider = true      },      completionProvider = {        triggerCharacters = { \":\", \".\", \"'\" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentOnTypeFormattingProvider = {        firstTriggerCharacter = \"=\",        moreTriggerCharacter = { \".\", \">\", \"{\" }      },      documentRangeFormattingProvider = false,      documentSymbolProvider = true,      experimental = {        hoverRange = true,        joinLines = true,        onEnter = true,        openCargoToml = true,        parentModule = true,        runnables = {          kinds = { \"cargo\" }        },        ssr = true,        workspaceSymbolScopeKindFiltering = true      },      foldingRangeProvider = true,      hoverProvider = true,      implementationProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = {          delta = true        },        legend = {          tokenModifiers = { \"documentation\", \"declaration\", \"definition\", \"static\", \"abstract\", \"deprecated\", \"readonly\", \"constant\", \"controlFlow\", \"injected\", \"mutable\", \"consuming\", \"async\", \"library\", \"public\", \"unsafe\", \"attribute\", \"trait\", \"callable\", \"intraDocLink\", \"reference\" },          tokenTypes = { \"comment\", \"keyword\", \"string\", \"number\", \"regexp\", \"operator\", \"namespace\", \"type\", \"struct\", \"class\", \"interface\", \"enum\", \"enumMember\", \"typeParameter\", \"function\", \"method\", \"property\", \"macro\", \"variable\", \"parameter\", \"angle\", \"arithmetic\", \"attribute\", \"bitwise\", \"boolean\", \"brace\", \"bracket\", \"builtinAttribute\", \"builtinType\", \"character\", \"colon\", \"comma\", \"comparison\", \"constParameter\", \"dot\", \"escapeSequence\", \"formatSpecifier\", \"generic\", \"label\", \"lifetime\", \"logical\", \"operator\", \"parenthesis\", \"punctuation\", \"selfKeyword\", \"semicolon\", \"typeAlias\", \"union\", \"unresolvedReference\" }        },        range = true      },      signatureHelpProvider = {        triggerCharacters = { \"(\", \",\" }      },      textDocumentSync = {        change = 2,        openClose = true,        save = vim.empty_dict()      },      typeDefinitionProvider = true,      workspace = {        fileOperations = {          willRename = {            filters = { {                pattern = {                  glob = \"**/*.rs\",                  matches = \"file\"                },                scheme = \"file\"              }, {                pattern = {                  glob = \"**\",                  matches = \"folder\"                },                scheme = \"file\"              } }          }        }      },      workspaceSymbolProvider = true    },    serverInfo = {      name = \"rust-analyzer\",      version = \"2021-08-23\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"initialized\",  params = {    [true] = 6  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"workspace/didChangeConfiguration\",  params = {    settings = {      [\"rust-analyzer\"] = {}    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:856 ]\t\"LSP[rust_analyzer]\"\t\"server_capabilities\"\t{  callHierarchyProvider = true,  codeActionProvider = {    codeActionKinds = { \"\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\" },    resolveProvider = true  },  codeLensProvider = {    resolveProvider = true  },  completionProvider = {    triggerCharacters = { \":\", \".\", \"'\" }  },  declarationProvider = true,  definitionProvider = true,  documentFormattingProvider = true,  documentHighlightProvider = true,  documentOnTypeFormattingProvider = {    firstTriggerCharacter = \"=\",    moreTriggerCharacter = { \".\", \">\", \"{\" }  },  documentRangeFormattingProvider = false,  documentSymbolProvider = true,  experimental = {    hoverRange = true,    joinLines = true,    onEnter = true,    openCargoToml = true,    parentModule = true,    runnables = {      kinds = { \"cargo\" }    },    ssr = true,    workspaceSymbolScopeKindFiltering = true  },  foldingRangeProvider = true,  hoverProvider = true,  implementationProvider = true,  referencesProvider = true,  renameProvider = {    prepareProvider = true  },  selectionRangeProvider = true,  semanticTokensProvider = {    full = {      delta = true    },    legend = {      tokenModifiers = { \"documentation\", \"declaration\", \"definition\", \"static\", \"abstract\", \"deprecated\", \"readonly\", \"constant\", \"controlFlow\", \"injected\", \"mutable\", \"consuming\", \"async\", \"library\", \"public\", \"unsafe\", \"attribute\", \"trait\", \"callable\", \"intraDocLink\", \"reference\" },      tokenTypes = { \"comment\", \"keyword\", \"string\", \"number\", \"regexp\", \"operator\", \"namespace\", \"type\", \"struct\", \"class\", \"interface\", \"enum\", \"enumMember\", \"typeParameter\", \"function\", \"method\", \"property\", \"macro\", \"variable\", \"parameter\", \"angle\", \"arithmetic\", \"attribute\", \"bitwise\", \"boolean\", \"brace\", \"bracket\", \"builtinAttribute\", \"builtinType\", \"character\", \"colon\", \"comma\", \"comparison\", \"constParameter\", \"dot\", \"escapeSequence\", \"formatSpecifier\", \"generic\", \"label\", \"lifetime\", \"logical\", \"operator\", \"parenthesis\", \"punctuation\", \"selfKeyword\", \"semicolon\", \"typeAlias\", \"union\", \"unresolvedReference\" }    },    range = true  },  signatureHelpProvider = {    triggerCharacters = { \"(\", \",\" }  },  textDocumentSync = {    change = 2,    openClose = true,    save = {}  },  typeDefinitionProvider = true,  workspace = {    fileOperations = {      willRename = {        filters = { {            pattern = {              glob = \"**/*.rs\",              matches = \"file\"            },            scheme = \"file\"          }, {            pattern = {              glob = \"**\",              matches = \"folder\"            },            scheme = \"file\"          } }      }    }  },  workspaceSymbolProvider = true}\r\n[ INFO ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:857 ]\t\"LSP[rust_analyzer]\"\t\"initialized\"\t{  resolved_capabilities = {    call_hierarchy = true,    code_action = {      codeActionKinds = { \"\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\" },      resolveProvider = true    },    code_lens = true,    code_lens_resolve = true,    completion = true,    declaration = true,    document_formatting = true,    document_highlight = true,    document_range_formatting = false,    document_symbol = true,    execute_command = false,    find_references = true,    goto_definition = true,    hover = true,    implementation = true,    rename = true,    signature_help = true,    signature_help_trigger_characters = { \"(\", \",\" },    text_document_did_change = 2,    text_document_open_close = true,    text_document_save = {},    text_document_save_include_text = false,    text_document_will_save = false,    text_document_will_save_wait_until = false,    type_definition = true,    workspace_folder_properties = {      changeNotifications = false,      supported = false    },    workspace_symbol = true  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didOpen\",  params = {    textDocument = {      languageId = \"rust\",      text = 'fn main() {\\n    println!(\"Hello, world!\");\\n    asdfjkls\\n}\\nwajidoawjodaw;\\n',      uri = \"file:///home/michael/test-2/src/main.rs\",      version = 0    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  ctx = '{\\n  bufnr = 1,\\n  client_id = 1,\\n  method = \"textDocument/publishDiagnostics\"\\n}',  result = {    diagnostics = {},    uri = \"file:///home/michael/test-2/src/main.rs\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 0,  jsonrpc = \"2.0\",  method = \"workspace/configuration\",  params = {    items = { {        section = \"rust-analyzer\"      } }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"rustAnalyzer/Fetching\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"begin\",      title = \"Fetching\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:691 ]\t\"server_request\"\t\"workspace/configuration\"\t{  items = { {      section = \"rust-analyzer\"    } }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request: found handler for\"\t\"workspace/configuration\"\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"workspace/configuration\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"workspace/configuration\"\\n}',  result = {    items = { {        section = \"rust-analyzer\"      } }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = { {} },  status = true}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 0,  jsonrpc = \"2.0\",  result = { {} }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:691 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"rustAnalyzer/Fetching\"}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"window/workDoneProgress/create\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 1,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Fetching\",  value = {    kind = \"begin\",    title = \"Fetching\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"begin\",      title = \"Fetching\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"report\",      message = \"metadata\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Fetching\",  value = {    kind = \"report\",    message = \"metadata\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"report\",      message = \"metadata\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"rustAnalyzer/Roots Scanned\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"begin\",      message = \"0/2\",      percentage = 0,      title = \"Roots Scanned\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"report\",      message = \"1/2\",      percentage = 50    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 3,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"rustAnalyzer/Fetching\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"begin\",      title = \"Fetching\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Fetching\",  value = {    kind = \"end\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 4,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"rustAnalyzer/Loading\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"begin\",      title = \"Loading\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:691 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"rustAnalyzer/Roots Scanned\"}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"window/workDoneProgress/create\"\\n}',  result = {    token = \"rustAnalyzer/Roots Scanned\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 2,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Roots Scanned\",  value = {    kind = \"begin\",    message = \"0/2\",    percentage = 0,    title = \"Roots Scanned\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"begin\",      message = \"0/2\",      percentage = 0,      title = \"Roots Scanned\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Roots Scanned\",  value = {    kind = \"report\",    message = \"1/2\",    percentage = 50  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"report\",      message = \"1/2\",      percentage = 50    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:691 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"rustAnalyzer/Fetching\"}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"window/workDoneProgress/create\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 3,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Fetching\",  value = {    kind = \"begin\",    title = \"Fetching\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"begin\",      title = \"Fetching\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:691 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"rustAnalyzer/Loading\"}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"window/workDoneProgress/create\"\\n}',  result = {    token = \"rustAnalyzer/Loading\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 4,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Loading\",  value = {    kind = \"begin\",    title = \"Loading\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"begin\",      title = \"Loading\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"end\",      message = \"2/2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Roots Scanned\",  value = {    kind = \"end\",    message = \"2/2\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:42-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"end\",      message = \"2/2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"report\",      message = \"metadata\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Fetching\",  value = {    kind = \"report\",    message = \"metadata\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"report\",      message = \"metadata\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"report\",      message = \"metadata test-2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Loading\",  value = {    kind = \"report\",    message = \"metadata test-2\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"report\",      message = \"metadata test-2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"report\",      message = \"metadata test-2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Loading\",  value = {    kind = \"report\",    message = \"metadata test-2\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"report\",      message = \"metadata test-2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"report\",      message = \"metadata test-2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"report\",      message = \"metadata test-2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Loading\",  value = {    kind = \"report\",    message = \"metadata test-2\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"report\",      message = \"metadata test-2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Loading\",  value = {    kind = \"report\",    message = \"metadata test-2\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"report\",      message = \"metadata test-2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 5,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"rustAnalyzer/Roots Scanned\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"begin\",      message = \"0/2\",      percentage = 0,      title = \"Roots Scanned\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"report\",      message = \"1/2\",      percentage = 50    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Loading\",  value = {    kind = \"end\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Loading\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:691 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"rustAnalyzer/Roots Scanned\"}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"window/workDoneProgress/create\"\\n}',  result = {    token = \"rustAnalyzer/Roots Scanned\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 5,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Roots Scanned\",  value = {    kind = \"begin\",    message = \"0/2\",    percentage = 0,    title = \"Roots Scanned\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"begin\",      message = \"0/2\",      percentage = 0,      title = \"Roots Scanned\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Roots Scanned\",  value = {    kind = \"report\",    message = \"1/2\",    percentage = 50  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"report\",      message = \"1/2\",      percentage = 50    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"end\",      message = \"2/2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Roots Scanned\",  value = {    kind = \"end\",    message = \"2/2\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Roots Scanned\",    value = {      kind = \"end\",      message = \"2/2\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Fetching\",  value = {    kind = \"end\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 6,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"rustAnalyzer/Fetching\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"begin\",      title = \"Fetching\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 7,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"rustAnalyzer/Indexing\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"begin\",      percentage = 0,      title = \"Indexing\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"0/12 (core)\",      percentage = 0    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:691 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"rustAnalyzer/Fetching\"}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"window/workDoneProgress/create\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 6,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Fetching\",  value = {    kind = \"begin\",    title = \"Fetching\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"begin\",      title = \"Fetching\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:691 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"rustAnalyzer/Indexing\"}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"window/workDoneProgress/create\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 7,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"begin\",    percentage = 0,    title = \"Indexing\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"begin\",      percentage = 0,      title = \"Indexing\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"0/12 (core)\",    percentage = 0  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"0/12 (core)\",      percentage = 0    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 8,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"rustAnalyzer/cargo check\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"begin\",      title = \"cargo check\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:691 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"rustAnalyzer/cargo check\"}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"window/workDoneProgress/create\"\\n}',  result = {    token = \"rustAnalyzer/cargo check\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 8,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/cargo check\",  value = {    kind = \"begin\",    title = \"cargo check\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"begin\",      title = \"cargo check\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/cargo check\",  value = {    kind = \"end\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"report\",      message = \"metadata\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Fetching\",  value = {    kind = \"report\",    message = \"metadata\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"report\",      message = \"metadata\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Fetching\",  value = {    kind = \"end\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Fetching\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 9,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"rustAnalyzer/cargo check\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"begin\",      title = \"cargo check\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:691 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"rustAnalyzer/cargo check\"}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"window/workDoneProgress/create\"\\n}',  result = {    token = \"rustAnalyzer/cargo check\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 9,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/cargo check\",  value = {    kind = \"begin\",    title = \"cargo check\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"begin\",      title = \"cargo check\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/cargo check\",  value = {    kind = \"end\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:43-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didSave\",  params = {    textDocument = {      uri = \"file:///home/michael/test-2/src/main.rs\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"1/12 (alloc)\",      percentage = 8    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"1/12 (alloc)\",    percentage = 8  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"1/12 (alloc)\",      percentage = 8    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 10,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"rustAnalyzer/cargo check\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"begin\",      title = \"cargo check\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:691 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"rustAnalyzer/cargo check\"}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"window/workDoneProgress/create\"\\n}',  result = {    token = \"rustAnalyzer/cargo check\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 10,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/cargo check\",  value = {    kind = \"begin\",    title = \"cargo check\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"begin\",      title = \"cargo check\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"2/12 (unwind)\",      percentage = 16    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"2/12 (unwind)\",    percentage = 16  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"2/12 (unwind)\",      percentage = 16    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"3/12 (std_detect)\",      percentage = 25    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"3/12 (std_detect)\",    percentage = 25  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"3/12 (std_detect)\",      percentage = 25    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"4/12 (panic_abort)\",      percentage = 33    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"4/12 (panic_abort)\",    percentage = 33  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"4/12 (panic_abort)\",      percentage = 33    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"5/12 (panic_unwind)\",      percentage = 41    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"6/12 (profiler_builtins)\",      percentage = 50    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"5/12 (panic_unwind)\",    percentage = 41  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"5/12 (panic_unwind)\",      percentage = 41    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"6/12 (profiler_builtins)\",    percentage = 50  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"6/12 (profiler_builtins)\",      percentage = 50    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"7/12 (term)\",      percentage = 58    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"7/12 (term)\",    percentage = 58  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"7/12 (term)\",      percentage = 58    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"8/12 (test)\",      percentage = 66    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"8/12 (test)\",    percentage = 66  }}\r\n[ DEBUG ] 2021-09-07T11:35:44-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"8/12 (test)\",      percentage = 66    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"9/12 (std)\",      percentage = 75    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"9/12 (std)\",    percentage = 75  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"9/12 (std)\",      percentage = 75    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = { {        message = \"expected one of `!` or `::`, found `;`\\nexpected one of `!` or `::`\",        range = {          end = {            character = 14,            line = 4          },          start = {            character = 13,            line = 4          }        },        severity = 1,        source = \"rustc\"      } },    uri = \"file:///home/michael/test-2/src/main.rs\",    version = 0  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"textDocument/publishDiagnostics\"\t{  diagnostics = { {      message = \"expected one of `!` or `::`, found `;`\\nexpected one of `!` or `::`\",      range = {        end = {          character = 14,          line = 4        },        start = {          character = 13,          line = 4        }      },      severity = 1,      source = \"rustc\"    } },  uri = \"file:///home/michael/test-2/src/main.rs\",  version = 0}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/cargo check\",  value = {    kind = \"end\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/cargo check\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"10/12 (proc_macro)\",      percentage = 83    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"10/12 (proc_macro)\",    percentage = 83  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"10/12 (proc_macro)\",      percentage = 83    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"11/12 (test_2)\",      percentage = 91    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"report\",    message = \"11/12 (test_2)\",    percentage = 91  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"report\",      message = \"11/12 (test_2)\",      percentage = 91    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"$/progress\"\t{  token = \"rustAnalyzer/Indexing\",  value = {    kind = \"end\"  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...ovim_development/neovim/runtime/lua/vim/lsp/handlers.lua:461 ]\t\"default_handler\"\t\"$/progress\"\t{  ctx = '{\\n  client_id = 1,\\n  method = \"$/progress\"\\n}',  result = {    token = \"rustAnalyzer/Indexing\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = { {        code = \"syntax-error\",        codeDescription = {          href = \"https://rust-analyzer.github.io/manual.html#syntax-error\"        },        message = \"Syntax Error: expected BANG\",        range = {          end = {            character = 13,            line = 4          },          start = {            character = 13,            line = 4          }        },        severity = 1,        source = \"rust-analyzer\"      }, {        code = \"syntax-error\",        codeDescription = {          href = \"https://rust-analyzer.github.io/manual.html#syntax-error\"        },        message = \"Syntax Error: expected `{`, `[`, `(`\",        range = {          end = {            character = 13,            line = 4          },          start = {            character = 13,            line = 4          }        },        severity = 1,        source = \"rust-analyzer\"      }, {        code = \"unresolved-macro-call\",        codeDescription = {          href = \"https://rust-analyzer.github.io/manual.html#unresolved-macro-call\"        },        message = \"unresolved macro `wajidoawjodaw!`\",        range = {          end = {            character = 13,            line = 4          },          start = {            character = 0,            line = 4          }        },        severity = 1,        source = \"rust-analyzer\"      }, {        message = \"expected one of `!` or `::`, found `;`\\nexpected one of `!` or `::`\",        range = {          end = {            character = 14,            line = 4          },          start = {            character = 13,            line = 4          }        },        severity = 1,        source = \"rustc\"      } },    uri = \"file:///home/michael/test-2/src/main.rs\",    version = 0  }}\r\n[ DEBUG ] 2021-09-07T11:35:45-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:677 ]\t\"notification\"\t\"textDocument/publishDiagnostics\"\t{  diagnostics = { {      code = \"syntax-error\",      codeDescription = {        href = \"https://rust-analyzer.github.io/manual.html#syntax-error\"      },      message = \"Syntax Error: expected BANG\",      range = {        end = {          character = 13,          line = 4        },        start = {          character = 13,          line = 4        }      },      severity = 1,      source = \"rust-analyzer\"    }, {      code = \"syntax-error\",      codeDescription = {        href = \"https://rust-analyzer.github.io/manual.html#syntax-error\"      },      message = \"Syntax Error: expected `{`, `[`, `(`\",      range = {        end = {          character = 13,          line = 4        },        start = {          character = 13,          line = 4        }      },      severity = 1,      source = \"rust-analyzer\"    }, {      code = \"unresolved-macro-call\",      codeDescription = {        href = \"https://rust-analyzer.github.io/manual.html#unresolved-macro-call\"      },      message = \"unresolved macro `wajidoawjodaw!`\",      range = {        end = {          character = 13,          line = 4        },        start = {          character = 0,          line = 4        }      },      severity = 1,      source = \"rust-analyzer\"    }, {      message = \"expected one of `!` or `::`, found `;`\\nexpected one of `!` or `::`\",      range = {        end = {          character = 14,          line = 4        },        start = {          character = 13,          line = 4        }      },      severity = 1,      source = \"rustc\"    } },  uri = \"file:///home/michael/test-2/src/main.rs\",  version = 0}\r\n[ INFO ] 2021-09-07T11:35:49-0700 ] ...tories/neovim_development/neovim/runtime/lua/vim/lsp.lua:1216 ]\t\"exit_handler\"\t{ {    _on_attach = <function 1>,    cancel_request = <function 2>,    config = {      _on_attach = <function 3>,      autostart = true,      capabilities = {        callHierarchy = {          dynamicRegistration = false        },        textDocument = {          codeAction = {            codeActionLiteralSupport = {              codeActionKind = {                valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" }              }            },            dynamicRegistration = false          },          completion = {            completionItem = {              commitCharactersSupport = false,              deprecatedSupport = false,              documentationFormat = { \"markdown\", \"plaintext\" },              preselectSupport = false,              snippetSupport = true            },            completionItemKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }            },            contextSupport = false,            dynamicRegistration = false          },          declaration = {            linkSupport = true          },          definition = {            linkSupport = true          },          documentHighlight = {            dynamicRegistration = false          },          documentSymbol = {            dynamicRegistration = false,            hierarchicalDocumentSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          hover = {            contentFormat = { \"markdown\", \"plaintext\" },            dynamicRegistration = false          },          implementation = {            linkSupport = true          },          publishDiagnostics = {            relatedInformation = true,            tagSupport = {              valueSet = { 1, 2 }            }          },          references = {            dynamicRegistration = false          },          rename = {            dynamicRegistration = false,            prepareSupport = true          },          signatureHelp = {            dynamicRegistration = false,            signatureInformation = {              activeParameterSupport = true,              documentationFormat = { \"markdown\", \"plaintext\" },              parameterInformation = {                labelOffsetSupport = true              }            }          },          synchronization = {            didSave = true,            dynamicRegistration = false,            willSave = false,            willSaveWaitUntil = false          },          typeDefinition = {            linkSupport = true          }        },        window = {          showDocument = {            support = false          },          showMessage = {            messageActionItem = {              additionalPropertiesSupport = false            }          },          workDoneProgress = true        },        workspace = {          applyEdit = true,          configuration = true,          symbol = {            dynamicRegistration = false,            hierarchicalWorkspaceSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          workspaceEdit = {            resourceOperations = { \"rename\", \"create\", \"delete\" }          },          workspaceFolders = true        }      },      cmd = { \"rust-analyzer\" },      filetypes = { \"rust\" },      flags = {},      get_language_id = <function 4>,      handlers = <1>{},      init_options = vim.empty_dict(),      log_level = 2,      message_level = 2,      name = \"rust_analyzer\",      on_attach = <function 5>,      on_exit = <function 6>,      on_init = <function 7>,      root_dir = \"/home/michael/test-2\",      settings = {        [\"rust-analyzer\"] = {}      },      workspace_folders = <2>{ {          name = \"/home/michael/test-2\",          uri = \"file:///home/michael/test-2\"        } },      <metatable> = <3>{        __tostring = <function 8>      }    },    handlers = <table 1>,    id = 1,    initialized = true,    is_stopped = <function 9>,    messages = {      messages = {},      name = \"rust_analyzer\",      progress = {        [\"rustAnalyzer/Fetching\"] = {          done = true,          title = \"Fetching\"        },        [\"rustAnalyzer/Indexing\"] = {          done = true,          percentage = 91,          title = \"Indexing\"        },        [\"rustAnalyzer/Loading\"] = {          done = true,          title = \"Loading\"        },        [\"rustAnalyzer/Roots Scanned\"] = {          done = true,          message = \"2/2\",          percentage = 50,          title = \"Roots Scanned\"        },        [\"rustAnalyzer/cargo check\"] = {          done = true,          title = \"cargo check\"        }      },      status = {}    },    name = \"rust_analyzer\",    notify = <function 10>,    offset_encoding = \"utf-16\",    request = <function 11>,    request_sync = <function 12>,    resolved_capabilities = {      call_hierarchy = true,      code_action = <4>{        codeActionKinds = { \"\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\" },        resolveProvider = true      },      code_lens = true,      code_lens_resolve = true,      completion = true,      declaration = true,      document_formatting = true,      document_highlight = true,      document_range_formatting = false,      document_symbol = true,      execute_command = false,      find_references = true,      goto_definition = true,      hover = true,      implementation = true,      rename = true,      signature_help = true,      signature_help_trigger_characters = <5>{ \"(\", \",\" },      text_document_did_change = 2,      text_document_open_close = true,      text_document_save = <6>{},      text_document_save_include_text = false,      text_document_will_save = false,      text_document_will_save_wait_until = false,      type_definition = true,      workspace_folder_properties = {        changeNotifications = false,        supported = false      },      workspace_symbol = true    },    rpc = {      handle = <userdata 1>,      notify = <function 13>,      pid = 41059,      request = <function 14>    },    server_capabilities = {      callHierarchyProvider = true,      codeActionProvider = <table 4>,      codeLensProvider = {        resolveProvider = true      },      completionProvider = {        triggerCharacters = { \":\", \".\", \"'\" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentOnTypeFormattingProvider = {        firstTriggerCharacter = \"=\",        moreTriggerCharacter = { \".\", \">\", \"{\" }      },      documentRangeFormattingProvider = false,      documentSymbolProvider = true,      experimental = {        hoverRange = true,        joinLines = true,        onEnter = true,        openCargoToml = true,        parentModule = true,        runnables = {          kinds = { \"cargo\" }        },        ssr = true,        workspaceSymbolScopeKindFiltering = true      },      foldingRangeProvider = true,      hoverProvider = true,      implementationProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = {          delta = true        },        legend = {          tokenModifiers = { \"documentation\", \"declaration\", \"definition\", \"static\", \"abstract\", \"deprecated\", \"readonly\", \"constant\", \"controlFlow\", \"injected\", \"mutable\", \"consuming\", \"async\", \"library\", \"public\", \"unsafe\", \"attribute\", \"trait\", \"callable\", \"intraDocLink\", \"reference\" },          tokenTypes = { \"comment\", \"keyword\", \"string\", \"number\", \"regexp\", \"operator\", \"namespace\", \"type\", \"struct\", \"class\", \"interface\", \"enum\", \"enumMember\", \"typeParameter\", \"function\", \"method\", \"property\", \"macro\", \"variable\", \"parameter\", \"angle\", \"arithmetic\", \"attribute\", \"bitwise\", \"boolean\", \"brace\", \"bracket\", \"builtinAttribute\", \"builtinType\", \"character\", \"colon\", \"comma\", \"comparison\", \"constParameter\", \"dot\", \"escapeSequence\", \"formatSpecifier\", \"generic\", \"label\", \"lifetime\", \"logical\", \"operator\", \"parenthesis\", \"punctuation\", \"selfKeyword\", \"semicolon\", \"typeAlias\", \"union\", \"unresolvedReference\" }        },        range = true      },      signatureHelpProvider = {        triggerCharacters = <table 5>      },      textDocumentSync = {        change = 2,        openClose = true,        save = <table 6>      },      typeDefinitionProvider = true,      workspace = {        fileOperations = {          willRename = {            filters = { {                pattern = {                  glob = \"**/*.rs\",                  matches = \"file\"                },                scheme = \"file\"              }, {                pattern = {                  glob = \"**\",                  matches = \"folder\"                },                scheme = \"file\"              } }          }        }      },      workspaceSymbolProvider = true    },    stop = <function 15>,    supports_method = <function 16>,    workspaceFolders = <table 2>,    workspace_did_change_configuration = <function 17>  } }\r\n[ DEBUG ] 2021-09-07T11:35:49-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"shutdown\"}\r\n[ DEBUG ] 2021-09-07T11:35:49-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 2,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-09-07T11:35:49-0700 ] ...es/neovim_development/neovim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"exit\"}\r\n```\r\n\r\n</details>",
            "created_at": "2021-09-07T18:38:31Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1231#issuecomment-914533581",
            "id": 914533581,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231",
            "node_id": "IC_kwDODTQC1842gqzN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914533581/reactions"
            },
            "updated_at": "2021-09-07T18:38:31Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/914533581",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@elianiva Can you try\r\n```\r\n➜  ~ cat $HOME/.cargo/env\r\n#!/bin/sh\r\n# rustup shell setup\r\n# affix colons on either side of $PATH to simplify matching\r\ncase \":${PATH}:\" in\r\n    *:\"$HOME/.cargo/bin\":*)\r\n        ;;\r\n    *)\r\n        # Prepending path in case a system-installed rustc needs to be overridden\r\n        export PATH=\"$HOME/.cargo/bin:$PATH\"\r\n        ;;\r\nesac\r\n```\r\nSo `~/.cargo/bin` must be first in your path in case you have also a system installed cargo.",
            "created_at": "2021-09-08T18:25:48Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1231#issuecomment-915469724",
            "id": 915469724,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231",
            "node_id": "IC_kwDODTQC1842kPWc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/915469724/reactions"
            },
            "updated_at": "2021-09-08T18:25:48Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/915469724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "NONE",
            "body": "I was having this same problem. The issue turned out to be that a dependency required compilation with nightly, with the result that any post-parsing diagnostics wouldn't appear. My solution was to run `rustup override set nightly` in the project root. This will force rust-analyzer to compile with nightly, and allow the compiler to proceed further.",
            "created_at": "2023-10-27T20:05:48Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1231#issuecomment-1783444522",
            "id": 1783444522,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231",
            "node_id": "IC_kwDODTQC185qTTQq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1783444522/reactions"
            },
            "updated_at": "2023-10-27T20:05:48Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1783444522",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/43722761?v=4",
                "events_url": "https://api.github.com/users/StoicDeveloper/events{/privacy}",
                "followers_url": "https://api.github.com/users/StoicDeveloper/followers",
                "following_url": "https://api.github.com/users/StoicDeveloper/following{/other_user}",
                "gists_url": "https://api.github.com/users/StoicDeveloper/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/StoicDeveloper",
                "id": 43722761,
                "login": "StoicDeveloper",
                "node_id": "MDQ6VXNlcjQzNzIyNzYx",
                "organizations_url": "https://api.github.com/users/StoicDeveloper/orgs",
                "received_events_url": "https://api.github.com/users/StoicDeveloper/received_events",
                "repos_url": "https://api.github.com/users/StoicDeveloper/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/StoicDeveloper/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/StoicDeveloper/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/StoicDeveloper"
            }
        }
    ],
    "comments": 10,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231/comments",
    "created_at": "2021-09-07T05:59:32Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1231",
    "id": 989622927,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5ODk2MjI5Mjc=",
    "number": 1231,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231/timeline",
    "title": "No error diagnostics on Rust",
    "updated_at": "2023-10-27T20:05:48Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1231",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11927498?v=4",
        "events_url": "https://api.github.com/users/lucypero/events{/privacy}",
        "followers_url": "https://api.github.com/users/lucypero/followers",
        "following_url": "https://api.github.com/users/lucypero/following{/other_user}",
        "gists_url": "https://api.github.com/users/lucypero/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lucypero",
        "id": 11927498,
        "login": "lucypero",
        "node_id": "MDQ6VXNlcjExOTI3NDk4",
        "organizations_url": "https://api.github.com/users/lucypero/orgs",
        "received_events_url": "https://api.github.com/users/lucypero/received_events",
        "repos_url": "https://api.github.com/users/lucypero/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lucypero/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lucypero/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lucypero"
    }
}