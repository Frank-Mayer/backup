{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Description\n\nAs noted in PR #2831, $HOME/.latexmkrc is used for per-user config and should not be considered for fixing `root_dir`. However, even after #2831, I'm getting $HOME as `root_dir` with the following file structure:\r\n```\r\n/home/user/\r\n├── .latexmkrc\r\n└── work/\r\n    └── project/\r\n        ├── .git\r\n        └── file.tex\r\n```\r\n\r\nAs a workaround, it is possible set `lua root_dir = require('lspconfig.util').root_pattern('.git')` which will yield the correct `root_dir` inside git repos.\n\n### Neovim version\n\nNVIM v0.10.0-dev                                                                                                      Build type: RelWithDebInfo                                                                                            LuaJIT 2.1.0-beta3                                                                                                    Run \"nvim -V1 -v\" for more info\n\n### Nvim-lspconfig version\n\n042aa6b\n\n### Operating system and version\n\nUbuntu 20.04 inside WSL2\n\n### Affected language servers\n\ntexlab\n\n### Steps to reproduce\n\n1. cd $HOME/work/project\r\n2. nvim -u minimal_init.lua file.tex\r\n3. `:LspInfo` will show `root_dir = /home/user`\n\n### Actual behavior\n\n$HOME is chosen as the `root_dir` because of the existence of the `.latexmkrc` file.\n\n### Expected behavior\n\n`$HOME/work/project` should be chosen as `root_dir` since it has a `.git` folder.\n\n### Minimal config\n\n```Lua\n-- Used the minimal_init.lua, modified only at the end to add texlab LSP\r\n\r\nlocal on_windows = vim.loop.os_uname().version:match(\"Windows\")\r\n\r\nlocal function join_paths(...)\r\n\tlocal path_sep = on_windows and \"\\\\\" or \"/\"\r\n\tlocal result = table.concat({ ... }, path_sep)\r\n\treturn result\r\nend\r\n\r\nvim.cmd([[set runtimepath=$VIMRUNTIME]])\r\n\r\nlocal temp_dir = vim.loop.os_getenv(\"TEMP\") or \"/tmp\"\r\n\r\nvim.cmd(\"set packpath=\" .. join_paths(temp_dir, \"nvim\", \"site\"))\r\n\r\nlocal package_root = join_paths(temp_dir, \"nvim\", \"site\", \"pack\")\r\nlocal lspconfig_path = join_paths(package_root, \"test\", \"start\", \"nvim-lspconfig\")\r\n\r\nif vim.fn.isdirectory(lspconfig_path) ~= 1 then\r\n\tvim.fn.system({ \"git\", \"clone\", \"https://github.com/neovim/nvim-lspconfig\", lspconfig_path })\r\nend\r\n\r\nvim.lsp.set_log_level(\"trace\")\r\nrequire(\"vim.lsp.log\").set_format_func(vim.inspect)\r\nlocal nvim_lsp = require(\"lspconfig\")\r\nlocal on_attach = function(_, bufnr)\r\n\tlocal function buf_set_option(...)\r\n\t\tvim.api.nvim_buf_set_option(bufnr, ...)\r\n\tend\r\n\r\n\tbuf_set_option(\"omnifunc\", \"v:lua.vim.lsp.omnifunc\")\r\n\r\n\t-- Mappings.\r\n\tlocal opts = { buffer = bufnr, noremap = true, silent = true }\r\n\tvim.keymap.set(\"n\", \"gD\", vim.lsp.buf.declaration, opts)\r\n\tvim.keymap.set(\"n\", \"gd\", vim.lsp.buf.definition, opts)\r\n\tvim.keymap.set(\"n\", \"K\", vim.lsp.buf.hover, opts)\r\n\tvim.keymap.set(\"n\", \"gi\", vim.lsp.buf.implementation, opts)\r\n\tvim.keymap.set(\"n\", \"<C-k>\", vim.lsp.buf.signature_help, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wa\", vim.lsp.buf.add_workspace_folder, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wr\", vim.lsp.buf.remove_workspace_folder, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wl\", function()\r\n\t\tprint(vim.inspect(vim.lsp.buf.list_workspace_folders()))\r\n\tend, opts)\r\n\tvim.keymap.set(\"n\", \"<space>D\", vim.lsp.buf.type_definition, opts)\r\n\tvim.keymap.set(\"n\", \"<space>rn\", vim.lsp.buf.rename, opts)\r\n\tvim.keymap.set(\"n\", \"gr\", vim.lsp.buf.references, opts)\r\n\tvim.keymap.set(\"n\", \"<space>e\", vim.diagnostic.open_float, opts)\r\n\tvim.keymap.set(\"n\", \"[d\", vim.diagnostic.goto_prev, opts)\r\n\tvim.keymap.set(\"n\", \"]d\", vim.diagnostic.goto_next, opts)\r\n\tvim.keymap.set(\"n\", \"<space>q\", vim.diagnostic.setloclist, opts)\r\nend\r\n\r\n-- Add the server that troubles you here\r\nlocal name = \"texlab\"\r\nif not name then\r\n\tprint(\"You have not defined a server name, please edit minimal_init.lua\")\r\nend\r\nif not nvim_lsp[name].document_config.default_config.cmd and not cmd then\r\n\tprint([[You have not defined a server default cmd for a server\r\n    that requires it please edit minimal_init.lua]])\r\nend\r\n\r\nnvim_lsp[name].setup({\r\n\tcmd = cmd,\r\n\ton_attach = on_attach,\r\n})\r\n\r\nprint([[You can find your log at $HOME/.cache/nvim/lsp.log. Please paste in a github issue under a details tag as described in the issue template.]])\n```\n\n\n### LSP log\n\nNon appeared in $HOME/.cache/nvim/lsp.log",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "This behavior of `root_directory` is causing a huge startup time in `pyright` when trying to find the root directory when file is in a deeper directory (even when the config related to that file is located in a closer ancenstor directory)\r\n\r\nThis is because the `root_directory` is giving priority to the file mentioned earliest in arglist in searching by going through all the ancestor directories before going to the next file in the arglist.\r\n\r\nInstead, IMO doing a check on all the files given in the list for each directory before going to the ancestor is logical",
            "created_at": "2024-01-19T22:38:28Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2975#issuecomment-1901241411",
            "id": 1901241411,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2975",
            "node_id": "IC_kwDODTQC185xUqRD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1901241411/reactions"
            },
            "updated_at": "2024-01-19T22:38:28Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1901241411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10277051?v=4",
                "events_url": "https://api.github.com/users/Badhi/events{/privacy}",
                "followers_url": "https://api.github.com/users/Badhi/followers",
                "following_url": "https://api.github.com/users/Badhi/following{/other_user}",
                "gists_url": "https://api.github.com/users/Badhi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Badhi",
                "id": 10277051,
                "login": "Badhi",
                "node_id": "MDQ6VXNlcjEwMjc3MDUx",
                "organizations_url": "https://api.github.com/users/Badhi/orgs",
                "received_events_url": "https://api.github.com/users/Badhi/received_events",
                "repos_url": "https://api.github.com/users/Badhi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Badhi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Badhi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Badhi"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2975/comments",
    "created_at": "2024-01-19T12:38:16Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2975/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2975",
    "id": 2090469650,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2975/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC1858mgkS",
    "number": 2975,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2975/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2975/timeline",
    "title": "Texlab root_dir is prioritising $HOME if $HOME/.latexmkrc is present",
    "updated_at": "2024-01-19T22:38:38Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2975",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/32964371?v=4",
        "events_url": "https://api.github.com/users/Eryx5502/events{/privacy}",
        "followers_url": "https://api.github.com/users/Eryx5502/followers",
        "following_url": "https://api.github.com/users/Eryx5502/following{/other_user}",
        "gists_url": "https://api.github.com/users/Eryx5502/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Eryx5502",
        "id": 32964371,
        "login": "Eryx5502",
        "node_id": "MDQ6VXNlcjMyOTY0Mzcx",
        "organizations_url": "https://api.github.com/users/Eryx5502/orgs",
        "received_events_url": "https://api.github.com/users/Eryx5502/received_events",
        "repos_url": "https://api.github.com/users/Eryx5502/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Eryx5502/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Eryx5502/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Eryx5502"
    }
}