{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Description\r\n\r\n```\r\nreturn {\r\n    require'lspconfig'.pylsp.setup {\r\n        settings = {\r\n            pylsp = {\r\n                configurationSources = {'flake8'},\r\n                plugins = {\r\n                    pycodestyle = {enabled = false},\r\n                    {mccabe = {enabled = false}},\r\n                    {pyflakes = {enabled = false}},\r\n                    {flake8 = {enabled = true}}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\n\r\n[INFO][2024-04-26 00:00:24] .../vim/lsp/rpc.lua:662\t\"Starting RPC client\"\t{  args = {},  cmd = \"pylsp\",  extra = {    cwd = \"/home/t/lab/code/python/perm\"  }}\r\n[DEBUG][2024-04-26 00:00:24] .../vim/lsp/rpc.lua:284\t\"rpc.send\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"initialize\",  params = {    capabilities = {      textDocument = {        callHierarchy = {          dynamicRegistration = false        },        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { \"\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" }            }          },          dataSupport = true,          dynamicRegistration = false,          isPreferredSupport = true,          resolveSupport = {            properties = { \"edit\" }          }        },        completion = {          completionItem = {            commitCharactersSupport = false,            deprecatedSupport = false,            documentationFormat = { \"markdown\", \"plaintext\" },            preselectSupport = false,            snippetSupport = false          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }          },          contextSupport = false,          dynamicRegistration = false        },        declaration = {          linkSupport = true        },        definition = {          linkSupport = true        },        documentHighlight = {          dynamicRegistration = false        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        hover = {          contentFormat = { \"markdown\", \"plaintext\" },          dynamicRegistration = false        },        implementation = {          linkSupport = true        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 }          }        },        references = {          dynamicRegistration = false        },        rename = {          dynamicRegistration = false,          prepareSupport = true        },        semanticTokens = {          augmentsSyntaxTokens = true,          dynamicRegistration = false,          formats = { \"relative\" },          multilineTokenSupport = false,          overlappingTokenSupport = true,          requests = {            full = {              delta = true            },            range = false          },          serverCancelSupport = false,          tokenModifiers = { \"declaration\", \"definition\", \"readonly\", \"static\", \"deprecated\", \"abstract\", \"async\", \"modification\", \"documentation\", \"defaultLibrary\" },          tokenTypes = { \"namespace\", \"type\", \"class\", \"enum\", \"interface\", \"struct\", \"typeParameter\", \"parameter\", \"variable\", \"property\", \"enumMember\", \"event\", \"function\", \"method\", \"macro\", \"keyword\", \"modifier\", \"comment\", \"string\", \"number\", \"regexp\", \"operator\", \"decorator\" }        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            activeParameterSupport = true,            documentationFormat = { \"markdown\", \"plaintext\" },            parameterInformation = {              labelOffsetSupport = true            }          }        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = true,          willSaveWaitUntil = true        },        typeDefinition = {          linkSupport = true        }      },      window = {        showDocument = {          support = true        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false          }        },        workDoneProgress = true      },      workspace = {        applyEdit = true,        configuration = true,        didChangeWatchedFiles = {          dynamicRegistration = false,          relativePatternSupport = true        },        semanticTokens = {          refreshSupport = true        },        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        workspaceEdit = {          resourceOperations = { \"rename\", \"create\", \"delete\" }        },        workspaceFolders = true      }    },    clientInfo = {      name = \"Neovim\",      version = \"0.9.5\"    },    initializationOptions = vim.empty_dict(),    processId = 145418,    rootPath = \"/home/t/lab/code/python/perm\",    rootUri = \"file:///home/t/lab/code/python/perm\",    trace = \"off\",    workspaceFolders = { {        name = \"/home/t/lab/code/python/perm\",        uri = \"file:///home/t/lab/code/python/perm\"      } }  }}\r\n[DEBUG][2024-04-26 00:00:24] .../vim/lsp/rpc.lua:387\t\"rpc.receive\"\t{  id = 1,  jsonrpc = \"2.0\",  result = {    capabilities = {      codeActionProvider = true,      codeLensProvider = {        resolveProvider = false      },      completionProvider = {        resolveProvider = true,        triggerCharacters = { \".\" }      },      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = {}      },      experimental = vim.empty_dict(),      foldingRangeProvider = true,      hoverProvider = true,      notebookDocumentSync = {        notebookSelector = { {            cells = { {                language = \"python\"              } }          } }      },      referencesProvider = true,      renameProvider = true,      signatureHelpProvider = {        triggerCharacters = { \"(\", \",\", \"=\" }      },      textDocumentSync = {        change = 2,        openClose = true,        save = {          includeText = true        }      },      workspace = {        workspaceFolders = {          changeNotifications = true,          supported = true        }      }    },    serverInfo = {      name = \"pylsp\",      version = \"1.11.0\"    }  }}\r\n[DEBUG][2024-04-26 00:00:24] .../vim/lsp/rpc.lua:284\t\"rpc.send\"\t{  jsonrpc = \"2.0\",  method = \"initialized\",  params = vim.empty_dict()}\r\n[DEBUG][2024-04-26 00:00:24] .../vim/lsp/rpc.lua:284\t\"rpc.send\"\t{  jsonrpc = \"2.0\",  method = \"workspace/didChangeConfiguration\",  params = {    settings = {      pylsp = {        configurationSources = { \"flake8\" },        plugins = { {            mccabe = {              enabled = false            }          }, {            pyflakes = {              enabled = false            }          }, {            flake8 = {              enabled = true            }          },          pycodestyle = {            enabled = false          }        }      }    }  }}\r\n[INFO][2024-04-26 00:00:24] .../lua/vim/lsp.lua:1344\t\"LSP[pylsp]\"\t\"server_capabilities\"\t{  server_capabilities = {    codeActionProvider = true,    codeLensProvider = {      resolveProvider = false    },    completionProvider = {      resolveProvider = true,      triggerCharacters = { \".\" }    },    definitionProvider = true,    documentFormattingProvider = true,    documentHighlightProvider = true,    documentRangeFormattingProvider = true,    documentSymbolProvider = true,    executeCommandProvider = {      commands = {}    },    experimental = vim.empty_dict(),    foldingRangeProvider = true,    hoverProvider = true,    notebookDocumentSync = {      notebookSelector = { {          cells = { {              language = \"python\"            } }        } }    },    referencesProvider = true,    renameProvider = true,    signatureHelpProvider = {      triggerCharacters = { \"(\", \",\", \"=\" }    },    textDocumentSync = {      change = 2,      openClose = true,      save = {        includeText = true      }    },    workspace = {      workspaceFolders = {        changeNotifications = true,        supported = true      }    }  }}\r\n[DEBUG][2024-04-26 00:00:24] .../vim/lsp/rpc.lua:284\t\"rpc.send\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didOpen\",  params = {    textDocument = {      languageId = \"python\",      text = '# thislist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\\nthislist = [\"a\", \"b\", \"c\"]\\nfix_index = [0, 0, 0]\\nhoriz_index = [0, 0, 0]\\ndepth = 0\\n# print(thislist)\\nwhile (depth > 0):\\n    #depth > 3\\n   -depth\\n# list(     \\n\\n',      uri = \"file:///home/t/lab/code/python/perm/letters.py\",      version = 0    }  }}\r\n[DEBUG][2024-04-26 00:00:25] .../vim/lsp/rpc.lua:387\t\"rpc.receive\"\t{  id = \"a3a79644-bbcd-4032-b15c-792ddbd3f24c\",  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"c0f9c74c-f012-4be3-b583-d985976b4068\"  }}\r\n[DEBUG][2024-04-26 00:00:25] .../vim/lsp/rpc.lua:403\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[DEBUG][2024-04-26 00:00:25] .../vim/lsp/rpc.lua:284\t\"rpc.send\"\t{  id = \"a3a79644-bbcd-4032-b15c-792ddbd3f24c\",  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[DEBUG][2024-04-26 00:00:25] .../vim/lsp/rpc.lua:387\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"c0f9c74c-f012-4be3-b583-d985976b4068\",    value = {      kind = \"begin\",      title = \"lint: pyflakes\"    }  }}\r\n[DEBUG][2024-04-26 00:00:25] .../vim/lsp/rpc.lua:387\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"c0f9c74c-f012-4be3-b583-d985976b4068\",    value = {      kind = \"end\"    }  }}\r\n[DEBUG][2024-04-26 00:00:25] .../vim/lsp/rpc.lua:387\t\"rpc.receive\"\t{  id = \"e7c64bf4-b143-4602-9b47-6005d88bba3b\",  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"bee2ca1c-82d6-46ed-9fa5-c3c5ab153830\"  }}\r\n[DEBUG][2024-04-26 00:00:25] .../vim/lsp/rpc.lua:403\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[DEBUG][2024-04-26 00:00:25] .../vim/lsp/rpc.lua:284\t\"rpc.send\"\t{  id = \"e7c64bf4-b143-4602-9b47-6005d88bba3b\",  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[DEBUG][2024-04-26 00:00:25] .../vim/lsp/rpc.lua:387\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"bee2ca1c-82d6-46ed-9fa5-c3c5ab153830\",    value = {      kind = \"begin\",      title = \"lint: mccabe\"    }  }}\r\n[DEBUG][2024-04-26 00:00:25] .../vim/lsp/rpc.lua:387\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"bee2ca1c-82d6-46ed-9fa5-c3c5ab153830\",    value = {      kind = \"end\"    }  }}\r\n[DEBUG][2024-04-26 00:00:25] .../vim/lsp/rpc.lua:387\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = {},    uri = \"file:///home/t/lab/code/python/perm/letters.py\"  }}\r\n```\r\nflake8 is enabled and also installed with mason (pipx installation didn't work either) but it doesn't show errors/warning in the buffer.\r\nI have to invoke flake8 manually in the nvim console to get some flake8 output  for the active buffer:\r\n\r\n```\r\n:!flake8\r\n./letters.py:8:5: E265 block comment should start with '# '\r\n./letters.py:9:4: E111 indentation is not a multiple of 4\r\n./letters.py:10:8: W291 trailing whitespace\r\n./letters.py:11:1: W391 blank line at end of file\r\n```\r\n\r\nbut this flake8 output is not shown in the nvim buffer as it should.\r\n\r\nCan someone help me please?\r\n",
    "closed_at": "2024-04-26T11:01:08Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for your report. The configs in this repo are unsupported and provided only as a starting point. We depend on users (like you) to troubleshoot issues with their specific LSP setups and [send improvements](https://github.com/neovim/nvim-lspconfig/blob/master/CONTRIBUTING.md).\r\n\r\nIf you have a usage question, try asking it at:\r\n- https://github.com/neovim/neovim/discussions\r\n- https://vi.stackexchange.com/\r\n\r\nIf you found a bug in the _core_ Nvim  `vim.lsp` module (not part of this repo), the best way to get it fixed is to [report to Nvim](https://github.com/neovim/neovim) (not nvim-lspconfig) with:\r\n- steps to reproduce it without the particular LSP server and other factors particular to your environment\r\n- (optional, but very helpful): by adding a failing test case to [lsp_spec.lua](https://github.com/neovim/neovim/blob/master/test/functional/plugin/lsp_spec.lua), which has code to setup a fake LSP server to simulate various scenarios",
            "created_at": "2024-04-26T11:01:08Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3124#issuecomment-2079165588",
            "id": 2079165588,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3124",
            "node_id": "IC_kwDODTQC18577YyU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2079165588/reactions"
            },
            "updated_at": "2024-04-26T11:01:08Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2079165588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3124/comments",
    "created_at": "2024-04-25T22:15:26Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3124/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3124",
    "id": 2264583438,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3124/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC186G-s0O",
    "number": 3124,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3124/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3124/timeline",
    "title": "pylsp + flake8 not working",
    "updated_at": "2024-04-26T11:01:08Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3124",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/56853194?v=4",
        "events_url": "https://api.github.com/users/qrockz/events{/privacy}",
        "followers_url": "https://api.github.com/users/qrockz/followers",
        "following_url": "https://api.github.com/users/qrockz/following{/other_user}",
        "gists_url": "https://api.github.com/users/qrockz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/qrockz",
        "id": 56853194,
        "login": "qrockz",
        "node_id": "MDQ6VXNlcjU2ODUzMTk0",
        "organizations_url": "https://api.github.com/users/qrockz/orgs",
        "received_events_url": "https://api.github.com/users/qrockz/received_events",
        "repos_url": "https://api.github.com/users/qrockz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/qrockz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/qrockz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/qrockz"
    }
}