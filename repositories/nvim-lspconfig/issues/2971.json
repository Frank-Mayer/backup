{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Language server\r\n\r\npyright\r\n\r\n### Requested feature\r\n\r\nThe behaviour of `lspconfig.util.root_pattern` is \"depth-first\":\r\nhttps://github.com/neovim/nvim-lspconfig/blob/7eed8b2150192e5ad05e1886fdf133493ddf2928/lua/lspconfig/util.lua#L251-L262\r\n\r\ni.e., it checks the existence of a given `root_file` (e.g. `pyproject.toml` in the current working dir), ascends as far up if it can, then tries the next `root_file` in the current working dir.\r\n\r\nAs a result, the existence of a hypothetical `~/pyproject.toml` (which, in real world situations, should probably not exist):\r\n```\r\n~/pyproject.toml\r\n~/project/.git\r\n~/project/file1\r\n~/project/pyrightconfig.json\r\n~/project/subproject/.git\r\n~/project/subproject/file2\r\n```\r\nwould override any other `root_file`. Since pyright has no problems with being initiated from `$HOME`, it will go on ahead, but take a very long time to init (up to 2 minutes on a convoluted macos system). A warning is produced in `LspLog`, but otherwise, the user has no idea that something might be off.\r\n\r\nShort of reworking `root_pattern` to allow breadth-first search (which is, in itself, undesirable, since in the above example, setting the project root to be `~/project` when working on `file2` is fairly sane behaviour), the minimum change would be to raise a warning if pyright is being started from `$HOME`. In most foreseeable cases, users will not have any of the following files in `$HOME`.\r\n\r\nhttps://github.com/neovim/nvim-lspconfig/blob/7eed8b2150192e5ad05e1886fdf133493ddf2928/lua/lspconfig/server_configurations/pyright.lua#L3-L11\r\n\r\nThe only notable exception is `$HOME/.git` for dotfiles containing python files. Such situations are not unheard of, so I'm not sure if the warning would be useful.\r\n\r\nNB: I saw that `root_pattern` has been slated for deprecation (since 2022-08 -- https://github.com/neovim/nvim-lspconfig/issues/2079), but I haven't looked at the corresponding `vim.fs` equivalent.\r\n\r\n### Other clients which have this feature\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2971/comments",
    "created_at": "2024-01-16T09:19:11Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2971/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2971",
    "id": 2083410721,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "New feature or request",
            "id": 1674892767,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzY3",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2971/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC1858LlMh",
    "number": 2971,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2971/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2971/timeline",
    "title": "Warn if pyright is started from $HOME",
    "updated_at": "2024-01-16T10:10:48Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2971",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11556924?v=4",
        "events_url": "https://api.github.com/users/hejops/events{/privacy}",
        "followers_url": "https://api.github.com/users/hejops/followers",
        "following_url": "https://api.github.com/users/hejops/following{/other_user}",
        "gists_url": "https://api.github.com/users/hejops/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/hejops",
        "id": 11556924,
        "login": "hejops",
        "node_id": "MDQ6VXNlcjExNTU2OTI0",
        "organizations_url": "https://api.github.com/users/hejops/orgs",
        "received_events_url": "https://api.github.com/users/hejops/received_events",
        "repos_url": "https://api.github.com/users/hejops/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/hejops/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hejops/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/hejops"
    }
}