{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I'm struggling to figure out how to make an autocmd to call the `editor.action.organizeImports` command that `gopls` offers. For `coc.nvim` they provide the following config https://github.com/golang/tools/blob/master/gopls/doc/vim.md#cocnvim\r\n\r\nNot sure if this is the write project to add this type of support or if it is just a lua function that calls the built in vim.lsp functions. Any help would be appreciated though.",
    "closed_at": "2020-08-30T07:37:45Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "Just winging it here, but something like this could be a starting point:\r\n\r\n```vim\r\nautocmd BufWritePost * lua vim.lsp.buf.formatting()\r\n```\r\n\r\nIt's pretty naive. So using the `on_attach` callback is probably a better approach:\r\n\r\n```lua\r\nlocal nvim_lsp = require(\"nvim_lsp\")\r\n\r\nlocal on_attach = function(_, bufnr)\r\n  vim.api.nvim_command(\"au BufWritePost <buffer> lua vim.lsp.buf.formatting()\")\r\nend\r\n\r\nnvim_lsp.gopls.setup({ on_attach = on_attach })\r\n```\r\n\r\nIt works, kind of, but leaves the file a 'modified' state which isn't desirable. So there's at least one missing piece.",
            "created_at": "2020-02-05T09:33:08Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-582319317",
            "id": 582319317,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjMxOTMxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/582319317/reactions"
            },
            "updated_at": "2020-02-05T09:33:08Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/582319317",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/177685?v=4",
                "events_url": "https://api.github.com/users/lithammer/events{/privacy}",
                "followers_url": "https://api.github.com/users/lithammer/followers",
                "following_url": "https://api.github.com/users/lithammer/following{/other_user}",
                "gists_url": "https://api.github.com/users/lithammer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lithammer",
                "id": 177685,
                "login": "lithammer",
                "node_id": "MDQ6VXNlcjE3NzY4NQ==",
                "organizations_url": "https://api.github.com/users/lithammer/orgs",
                "received_events_url": "https://api.github.com/users/lithammer/received_events",
                "repos_url": "https://api.github.com/users/lithammer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lithammer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lithammer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lithammer",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "So that autocmd works alright, however `gopls` separates out updating imports as a separate action than formatting. I guess my question is how to call a custom lsp action (not sure the lsp terms here). ",
            "created_at": "2020-02-08T18:25:24Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-583763509",
            "id": 583763509,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mzc2MzUwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/583763509/reactions"
            },
            "updated_at": "2020-02-08T18:25:24Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/583763509",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3259664?v=4",
                "events_url": "https://api.github.com/users/tkinz27/events{/privacy}",
                "followers_url": "https://api.github.com/users/tkinz27/followers",
                "following_url": "https://api.github.com/users/tkinz27/following{/other_user}",
                "gists_url": "https://api.github.com/users/tkinz27/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tkinz27",
                "id": 3259664,
                "login": "tkinz27",
                "node_id": "MDQ6VXNlcjMyNTk2NjQ=",
                "organizations_url": "https://api.github.com/users/tkinz27/orgs",
                "received_events_url": "https://api.github.com/users/tkinz27/received_events",
                "repos_url": "https://api.github.com/users/tkinz27/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tkinz27/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tkinz27/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tkinz27",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> So that autocmd works alright, however `gopls` separates out updating imports as a separate action than formatting. I guess my question is how to call a custom lsp action (not sure the lsp terms here).\r\n\r\nWhat you want to run is a code action. \"Organize imports\" is one of the gopls code actions.",
            "created_at": "2020-02-26T03:08:42Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-591215331",
            "id": 591215331,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTIxNTMzMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/591215331/reactions"
            },
            "updated_at": "2020-02-26T03:08:42Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/591215331",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7577128?v=4",
                "events_url": "https://api.github.com/users/gbrlsnchs/events{/privacy}",
                "followers_url": "https://api.github.com/users/gbrlsnchs/followers",
                "following_url": "https://api.github.com/users/gbrlsnchs/following{/other_user}",
                "gists_url": "https://api.github.com/users/gbrlsnchs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gbrlsnchs",
                "id": 7577128,
                "login": "gbrlsnchs",
                "node_id": "MDQ6VXNlcjc1NzcxMjg=",
                "organizations_url": "https://api.github.com/users/gbrlsnchs/orgs",
                "received_events_url": "https://api.github.com/users/gbrlsnchs/received_events",
                "repos_url": "https://api.github.com/users/gbrlsnchs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gbrlsnchs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gbrlsnchs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gbrlsnchs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It works, kind of, but leaves the file a 'modified' state which isn't desirable. So there's at least one missing piece.\r\n\r\nThe formatting params in https://github.com/neovim/neovim/blob/9678fe4cfba9f7a9dacbd6d5a56c58241e98aa60/runtime/lua/vim/lsp/buf.lua#L73-L85 could be extracted into a helper function, and there could be an additional `formatting_sync` function. Something along the following lines:\r\n\r\n```lua\r\nlocal function formatting_params(options)\r\n  validate { options = {options, 't', true} }\r\n  local sts = vim.bo.softtabstop;\r\n  options = vim.tbl_extend('keep', options or {}, {\r\n    tabSize = (sts > 0 and sts) or (sts < 0 and vim.bo.shiftwidth) or vim.bo.tabstop;\r\n    insertSpaces = vim.bo.expandtab;\r\n  })\r\n  return {\r\n    textDocument = { uri = vim.uri_from_bufnr(0) };\r\n    options = options;\r\n  }\r\nend\r\n\r\nfunction M.formatting(options)\r\n  return request('textDocument/formatting', params)\r\nend\r\n\r\nfunction M.formatting_sync(options, timeout)\r\n  local params = formatting_params(options)\r\n  local result = vim.lsp.buf_request_sync(0, \"textDocument/formatting\", params, timeout)\r\n  if not result then return end\r\n  result = result[1].result\r\n  vim.lsp.util.apply_text_edits(result)\r\nend\r\n```\r\n\r\nThis would allow formatting to be run synchronously on `BufWritePre` (possibly increasing the default 100ms timeout to e.g. 1000ms), so that the file isn't left in a modified state:\r\n\r\n```lua\r\nvim.api.nvim_command(\"au BufWritePre <buffer> lua vim.lsp.buf.formatting_sync(nil, 1000)\")\r\n```\r\n\r\nI know OP actually wants something slightly different, but since I got here looking for the above and got halfway there thanks to @lithammer's snippet, I figured I'd post the rest since it might help other people too :)\r\n",
            "created_at": "2020-04-20T22:27:23Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-616844477",
            "id": 616844477,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjg0NDQ3Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/616844477/reactions"
            },
            "updated_at": "2020-07-10T10:53:32Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/616844477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2734517?v=4",
                "events_url": "https://api.github.com/users/dlukes/events{/privacy}",
                "followers_url": "https://api.github.com/users/dlukes/followers",
                "following_url": "https://api.github.com/users/dlukes/following{/other_user}",
                "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dlukes",
                "id": 2734517,
                "login": "dlukes",
                "node_id": "MDQ6VXNlcjI3MzQ1MTc=",
                "organizations_url": "https://api.github.com/users/dlukes/orgs",
                "received_events_url": "https://api.github.com/users/dlukes/received_events",
                "repos_url": "https://api.github.com/users/dlukes/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dlukes",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Would you be willing to accept a PR adding a `formatting_sync` function to `vim.lsp.buf`? Or do you feel that a more general solution is needed, since there are other actions which might need to be run in a synchronous fashion (e.g. on save), like that \"organize imports\" code action of `gopls`?",
            "created_at": "2020-04-21T08:49:05Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-617044915",
            "id": 617044915,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzA0NDkxNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/617044915/reactions"
            },
            "updated_at": "2020-04-21T08:49:05Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/617044915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2734517?v=4",
                "events_url": "https://api.github.com/users/dlukes/events{/privacy}",
                "followers_url": "https://api.github.com/users/dlukes/followers",
                "following_url": "https://api.github.com/users/dlukes/following{/other_user}",
                "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dlukes",
                "id": 2734517,
                "login": "dlukes",
                "node_id": "MDQ6VXNlcjI3MzQ1MTc=",
                "organizations_url": "https://api.github.com/users/dlukes/orgs",
                "received_events_url": "https://api.github.com/users/dlukes/received_events",
                "repos_url": "https://api.github.com/users/dlukes/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dlukes",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Would you be willing to accept a PR adding a `formatting_sync` function to `vim.lsp.buf`? Or do you feel that a more general solution is needed, since there are other actions which might need to be run in a synchronous fashion (e.g. on save), like that \"organize imports\" code action of `gopls`?\r\n\r\nI think there's a reason why a `formatting_sync` equivalent exists in most LSP clients: **many** people use it. I'm not a Neovim maintainer, but IMO, it would be a nice addition to the official API. Otherwise people will either have to implement the function themselves or use a third-party plugin.",
            "created_at": "2020-04-29T00:04:19Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-620916525",
            "id": 620916525,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDkxNjUyNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/620916525/reactions"
            },
            "updated_at": "2020-04-29T00:04:19Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/620916525",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7577128?v=4",
                "events_url": "https://api.github.com/users/gbrlsnchs/events{/privacy}",
                "followers_url": "https://api.github.com/users/gbrlsnchs/followers",
                "following_url": "https://api.github.com/users/gbrlsnchs/following{/other_user}",
                "gists_url": "https://api.github.com/users/gbrlsnchs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gbrlsnchs",
                "id": 7577128,
                "login": "gbrlsnchs",
                "node_id": "MDQ6VXNlcjc1NzcxMjg=",
                "organizations_url": "https://api.github.com/users/gbrlsnchs/orgs",
                "received_events_url": "https://api.github.com/users/gbrlsnchs/received_events",
                "repos_url": "https://api.github.com/users/gbrlsnchs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gbrlsnchs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gbrlsnchs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gbrlsnchs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@dlukes I think that would make a good PR where we can talk about where that should live and how we can add improvements like this. If you make the PR and place it somewhere sensible to start, we can chat about it in that PR (which would be a better place).\r\n\r\n(As a note, the PR would be on neovim, not nvim-lsp. Just to be clear)",
            "created_at": "2020-05-04T16:56:27Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-623582027",
            "id": 623582027,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzU4MjAyNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/623582027/reactions"
            },
            "updated_at": "2020-05-04T16:56:27Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/623582027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "as of neovim/neovim#11607\r\n\r\n`autocmd BufWritePre *.go lua vim.lsp.buf.code_action({ source = { organizeImports = true } })`\r\n\r\nthis seems to kinda work, except it always prompts you what to do",
            "created_at": "2020-07-06T17:38:04Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-654373347",
            "id": 654373347,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDM3MzM0Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/654373347/reactions"
            },
            "updated_at": "2020-07-06T17:39:10Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/654373347",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6832539?v=4",
                "events_url": "https://api.github.com/users/sentriz/events{/privacy}",
                "followers_url": "https://api.github.com/users/sentriz/followers",
                "following_url": "https://api.github.com/users/sentriz/following{/other_user}",
                "gists_url": "https://api.github.com/users/sentriz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sentriz",
                "id": 6832539,
                "login": "sentriz",
                "node_id": "MDQ6VXNlcjY4MzI1Mzk=",
                "organizations_url": "https://api.github.com/users/sentriz/orgs",
                "received_events_url": "https://api.github.com/users/sentriz/received_events",
                "repos_url": "https://api.github.com/users/sentriz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sentriz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sentriz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sentriz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "So i'm still testing right now but this is what I'm trying out. I dont think its working quite right though but it at least doesn't prompt me. \r\n\r\n```lua\r\n-- organize imports sync\r\nfunction go_org_imports(options, timeout_ms)\r\n  local context = { source = { organizeImports = true } }\r\n  vim.validate { context = { context, 't', true } }\r\n  local params = vim.lsp.util.make_range_params()\r\n  params.context = context\r\n\r\n  local results = vim.lsp.buf_request_sync(0, \"textDocument/codeAction\", params, timeout_ms)\r\n  print(vim.inspect(result))\r\n  if not result then return end\r\n  vim.lsp.util.apply_text_edits(result[1].result)\r\n\r\n  -- local params = vim.lsp.util.make_formatting_params(options)\r\n  -- local result = vim.lsp.buf_request_sync(0, \"textDocument/formatting\", params, timeout_ms)\r\n  -- if not result then return end\r\n  -- result = result[1].result\r\n  -- vim.lsp.util.apply_text_edits(result)\r\nend\r\n\r\nvim.api.nvim_command(\"au BufWritePre *.go lua go_org_imports({}, 1000)\")\r\n```",
            "created_at": "2020-07-06T19:37:31Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-654427197",
            "id": 654427197,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDQyNzE5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/654427197/reactions"
            },
            "updated_at": "2020-07-06T19:37:31Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/654427197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3259664?v=4",
                "events_url": "https://api.github.com/users/tkinz27/events{/privacy}",
                "followers_url": "https://api.github.com/users/tkinz27/followers",
                "following_url": "https://api.github.com/users/tkinz27/following{/other_user}",
                "gists_url": "https://api.github.com/users/tkinz27/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tkinz27",
                "id": 3259664,
                "login": "tkinz27",
                "node_id": "MDQ6VXNlcjMyNTk2NjQ=",
                "organizations_url": "https://api.github.com/users/tkinz27/orgs",
                "received_events_url": "https://api.github.com/users/tkinz27/received_events",
                "repos_url": "https://api.github.com/users/tkinz27/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tkinz27/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tkinz27/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tkinz27",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "ah cool thanks for sharing @tkinz27 ",
            "created_at": "2020-07-06T20:15:57Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-654443606",
            "id": 654443606,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDQ0MzYwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/654443606/reactions"
            },
            "updated_at": "2020-07-06T20:15:57Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/654443606",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6832539?v=4",
                "events_url": "https://api.github.com/users/sentriz/events{/privacy}",
                "followers_url": "https://api.github.com/users/sentriz/followers",
                "following_url": "https://api.github.com/users/sentriz/following{/other_user}",
                "gists_url": "https://api.github.com/users/sentriz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sentriz",
                "id": 6832539,
                "login": "sentriz",
                "node_id": "MDQ6VXNlcjY4MzI1Mzk=",
                "organizations_url": "https://api.github.com/users/sentriz/orgs",
                "received_events_url": "https://api.github.com/users/sentriz/received_events",
                "repos_url": "https://api.github.com/users/sentriz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sentriz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sentriz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sentriz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@tkinz27 your example doesn't work because the return type of `textDocument/codeAction` is different from `textDocument/formatting`. Only after figuring this out by trial and error did I realize I should've looked at nvim-lsp's own `textDocument/codeAction` [implementation](https://github.com/neovim/neovim/blob/b39edb5b605b545843482c70a3a3d03e2331a059/runtime/lua/vim/lsp/callbacks.lua#L44).\r\n\r\nThe modified (verified working as of right now) version is:\r\n\r\n```lua\r\n-- Synchronously organise (Go) imports.\r\nfunction go_organize_imports_sync(timeout_ms)\r\n  local context = { source = { organizeImports = true } }\r\n  vim.validate { context = { context, 't', true } }\r\n  local params = vim.lsp.util.make_range_params()\r\n  params.context = context\r\n\r\n  local result = vim.lsp.buf_request_sync(0, \"textDocument/codeAction\", params, timeout_ms)\r\n  if not result then return end\r\n  result = result[1].result\r\n  if not result then return end\r\n  edit = result[1].edit\r\n  vim.lsp.util.apply_workspace_edit(edit)\r\nend\r\n```\r\n\r\nThough it's not perfect, because we should be emulating the `codeAction` handler to be resistant to changes in gopls implementation.",
            "created_at": "2020-07-09T22:02:20Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-656372575",
            "id": 656372575,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjM3MjU3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/656372575/reactions"
            },
            "updated_at": "2020-07-09T22:02:20Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/656372575",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@aktau thanks for the update, yeah I hadn't really verified that mine was working. Been stuck workign on terraform stuff and haven't worked in go for a little while. Thanks for sharing. ",
            "created_at": "2020-07-09T23:46:40Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-656404144",
            "id": 656404144,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjQwNDE0NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/656404144/reactions"
            },
            "updated_at": "2020-07-09T23:46:40Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/656404144",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3259664?v=4",
                "events_url": "https://api.github.com/users/tkinz27/events{/privacy}",
                "followers_url": "https://api.github.com/users/tkinz27/followers",
                "following_url": "https://api.github.com/users/tkinz27/following{/other_user}",
                "gists_url": "https://api.github.com/users/tkinz27/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tkinz27",
                "id": 3259664,
                "login": "tkinz27",
                "node_id": "MDQ6VXNlcjMyNTk2NjQ=",
                "organizations_url": "https://api.github.com/users/tkinz27/orgs",
                "received_events_url": "https://api.github.com/users/tkinz27/received_events",
                "repos_url": "https://api.github.com/users/tkinz27/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tkinz27/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tkinz27/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tkinz27",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for your report. The configs here [are best-effort](https://github.com/neovim/nvim-lsp#nvim-lsp):\r\n\r\n> It is hoped that these configurations serve as a \"source of truth\", but they are strictly best effort. If something doesn't work, these configs are useful as a starting point, which you can adjust to fit your environment.\r\n\r\n- If you have an improvement or fix, please send a PR! \r\n- If you have a specific question we'll try to answer it (keeping in mind the configs in this repo are best-effort and unsupported).\r\n- If you found a bug in the core `lsp` module, the best way to get it fixed is to describe steps to reproduce it without the particular LSP server and other factors particular to your environment. Or better, by adding a failing test case to [lsp_spec.lua](https://github.com/neovim/neovim/blob/master/test/functional/plugin/lsp_spec.lua), which has code to setup a fake LSP server to simulate various scenarios.",
            "created_at": "2020-08-30T07:37:45Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-683387667",
            "id": 683387667,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzM4NzY2Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/683387667/reactions"
            },
            "updated_at": "2020-08-30T07:37:45Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/683387667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sadly using latest neovim HEAD with gopls 0.6.1 and latest version of nvim-lspconfig it seems that while this code works, it doesn't really work when you are trying to import non standard library modules like dependencies in `go.mod` and vendored.\r\n\r\nExecuting a `print(vim.inspect(result))`  of the call returns `{ {} }` if I remove a module, say `\"go.uber.org/zap\"`, while it returns a nicer full table if I remove `\"time\"`.",
            "created_at": "2020-12-23T23:23:12Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-750554545",
            "id": 750554545,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDU1NDU0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/750554545/reactions"
            },
            "updated_at": "2020-12-23T23:23:12Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/750554545",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23195?v=4",
                "events_url": "https://api.github.com/users/dialtone/events{/privacy}",
                "followers_url": "https://api.github.com/users/dialtone/followers",
                "following_url": "https://api.github.com/users/dialtone/following{/other_user}",
                "gists_url": "https://api.github.com/users/dialtone/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dialtone",
                "id": 23195,
                "login": "dialtone",
                "node_id": "MDQ6VXNlcjIzMTk1",
                "organizations_url": "https://api.github.com/users/dialtone/orgs",
                "received_events_url": "https://api.github.com/users/dialtone/received_events",
                "repos_url": "https://api.github.com/users/dialtone/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dialtone/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dialtone/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dialtone",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I had a problem when using 'gd' goto definitions my go imports gave an index error. Turns out that the above script uses index[1] but that is only when a file is open directly. If a function opens the file it gets index 2. So my modified versions looks like this:\r\n```\r\nfunction go_organize_imports_sync(timeoutms)\r\n    local context = {source = {organizeImports = true}}\r\n    vim.validate {context = {context, 't', true}}\r\n\r\n    local params = vim.lsp.util.make_range_params()\r\n    params.context = context\r\n\r\n    local method = 'textDocument/codeAction'\r\n    local resp = vim.lsp.buf_request_sync(0, method, params, timeoutms)\r\n\r\n    -- imports is indexed with clientid so we cannot rely on index always is 1\r\n    for _, v in next, resp, nil do\r\n      local result = v.result\r\n      if result and result[1] then\r\n        local edit = result[1].edit\r\n        vim.lsp.util.apply_workspace_edit(edit)\r\n      end\r\n    end\r\n    -- Always do formating\r\n    vim.lsp.buf.formatting()\r\nend\r\n```",
            "created_at": "2021-05-27T18:57:33Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-849865673",
            "id": 849865673,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTg2NTY3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/849865673/reactions"
            },
            "updated_at": "2021-05-28T06:49:18Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/849865673",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13243026?v=4",
                "events_url": "https://api.github.com/users/desdic/events{/privacy}",
                "followers_url": "https://api.github.com/users/desdic/followers",
                "following_url": "https://api.github.com/users/desdic/following{/other_user}",
                "gists_url": "https://api.github.com/users/desdic/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/desdic",
                "id": 13243026,
                "login": "desdic",
                "node_id": "MDQ6VXNlcjEzMjQzMDI2",
                "organizations_url": "https://api.github.com/users/desdic/orgs",
                "received_events_url": "https://api.github.com/users/desdic/received_events",
                "repos_url": "https://api.github.com/users/desdic/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/desdic/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/desdic/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/desdic",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hey all, \r\n\r\nGot to here from: https://github.com/golang/tools/blob/master/gopls/doc/vim.md#neovim-imports\r\n\r\nI'm not sure if you are all aware, but when you're utilizing this function on save, it appears *any* code action that's available to you on the given line will be called. \r\n\r\nThis is an issue when you're saving to add an import, but your cursor is in an incomplete struct, the code action to fill in all the struct fields are ran unconditionally, while your intent was only to import a missing package.\r\n",
            "created_at": "2021-06-22T22:37:58Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-866382865",
            "id": 866382865,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjM4Mjg2NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/866382865/reactions"
            },
            "updated_at": "2021-06-22T22:40:39Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/866382865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5642902?v=4",
                "events_url": "https://api.github.com/users/ldelossa/events{/privacy}",
                "followers_url": "https://api.github.com/users/ldelossa/followers",
                "following_url": "https://api.github.com/users/ldelossa/following{/other_user}",
                "gists_url": "https://api.github.com/users/ldelossa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ldelossa",
                "id": 5642902,
                "login": "ldelossa",
                "node_id": "MDQ6VXNlcjU2NDI5MDI=",
                "organizations_url": "https://api.github.com/users/ldelossa/orgs",
                "received_events_url": "https://api.github.com/users/ldelossa/received_events",
                "repos_url": "https://api.github.com/users/ldelossa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ldelossa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ldelossa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ldelossa",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Hey all,\r\n> \r\n> Got to here from: https://github.com/golang/tools/blob/master/gopls/doc/vim.md#neovim-imports\r\n> \r\n> I'm not sure if you are all aware, but when you're utilizing this function on save, it appears _any_ code action that's available to you on the given line will be called.\r\n> \r\n> This is an issue when you're saving to add an import, but your cursor is in an incomplete struct, the code action to fill in all the struct fields are ran unconditionally, while your intent was only to import a missing package.\r\n\r\nHaven't had that problem but I guess it should be pretty easy to modify the function to test which action it is and only take action if its the wanted code action",
            "created_at": "2021-06-23T05:16:00Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-866528980",
            "id": 866528980,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjUyODk4MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/866528980/reactions"
            },
            "updated_at": "2021-06-23T05:16:00Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/866528980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13243026?v=4",
                "events_url": "https://api.github.com/users/desdic/events{/privacy}",
                "followers_url": "https://api.github.com/users/desdic/followers",
                "following_url": "https://api.github.com/users/desdic/following{/other_user}",
                "gists_url": "https://api.github.com/users/desdic/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/desdic",
                "id": 13243026,
                "login": "desdic",
                "node_id": "MDQ6VXNlcjEzMjQzMDI2",
                "organizations_url": "https://api.github.com/users/desdic/orgs",
                "received_events_url": "https://api.github.com/users/desdic/received_events",
                "repos_url": "https://api.github.com/users/desdic/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/desdic/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/desdic/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/desdic",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "This is correct, I can reproduce it. If you look at it, at the beginning it sets the context (that will be passed with the code action request) to `local context = {source = {organizeImports = true}}` - I modified that to some bogus value (for completeness, to `organizeImportsz`) and the imports were STILL organized. Which means the context was not used at all.\r\n\r\nI then went back to the spec, and apparently, the context should look like this instead: https://microsoft.github.io/language-server-protocol/specifications/specification-3-17/#codeActionContext  That's quite different from what is in the solution given in here. So I used that and it seems to actually work as expected. If I give the correct value it works, if I give a bogus value it doesn't. So in theory, it should filter out unwanted actions. This is the full method that I use, FWIW:\r\n\r\n```Lua\r\n    function util.OrgImports(wait_ms)\r\n      local params = vim.lsp.util.make_range_params()\r\n      params.context = {only = {\"source.organizeImports\"}}\r\n      local result = vim.lsp.buf_request_sync(0, \"textDocument/codeAction\", params, wait_ms)\r\n      for _, res in pairs(result or {}) do\r\n        for _, r in pairs(res.result or {}) do\r\n          if r.edit then\r\n            vim.lsp.util.apply_workspace_edit(r.edit)\r\n          else\r\n            vim.lsp.buf.execute_command(r.command)\r\n          end\r\n        end\r\n      end\r\n    end\r\n```\r\n\r\nOh, I tested this on Go files (so `gopls`).\r\n\r\nHope it helps!",
            "created_at": "2021-06-23T08:18:19Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-866632451",
            "id": 866632451,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjYzMjQ1MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 10,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/866632451/reactions"
            },
            "updated_at": "2021-06-23T08:18:19Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/866632451",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85237?v=4",
                "events_url": "https://api.github.com/users/alexaandru/events{/privacy}",
                "followers_url": "https://api.github.com/users/alexaandru/followers",
                "following_url": "https://api.github.com/users/alexaandru/following{/other_user}",
                "gists_url": "https://api.github.com/users/alexaandru/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alexaandru",
                "id": 85237,
                "login": "alexaandru",
                "node_id": "MDQ6VXNlcjg1MjM3",
                "organizations_url": "https://api.github.com/users/alexaandru/orgs",
                "received_events_url": "https://api.github.com/users/alexaandru/received_events",
                "repos_url": "https://api.github.com/users/alexaandru/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alexaandru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alexaandru/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alexaandru",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "the above code also works great for me as long as I add `vim.lsp.buf.formatting()` ",
            "created_at": "2021-06-23T08:31:52Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-866641903",
            "id": 866641903,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjY0MTkwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/866641903/reactions"
            },
            "updated_at": "2021-06-23T08:31:52Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/866641903",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13243026?v=4",
                "events_url": "https://api.github.com/users/desdic/events{/privacy}",
                "followers_url": "https://api.github.com/users/desdic/followers",
                "following_url": "https://api.github.com/users/desdic/following{/other_user}",
                "gists_url": "https://api.github.com/users/desdic/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/desdic",
                "id": 13243026,
                "login": "desdic",
                "node_id": "MDQ6VXNlcjEzMjQzMDI2",
                "organizations_url": "https://api.github.com/users/desdic/orgs",
                "received_events_url": "https://api.github.com/users/desdic/received_events",
                "repos_url": "https://api.github.com/users/desdic/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/desdic/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/desdic/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/desdic",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The code above seems to work although now it seems the imports are re-organized but code is formatted again after the save has happened so it needs a new command to again save the buffer.",
            "created_at": "2021-07-06T17:21:06Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-874943445",
            "id": 874943445,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDk0MzQ0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/874943445/reactions"
            },
            "updated_at": "2021-07-06T17:21:06Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/874943445",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23195?v=4",
                "events_url": "https://api.github.com/users/dialtone/events{/privacy}",
                "followers_url": "https://api.github.com/users/dialtone/followers",
                "following_url": "https://api.github.com/users/dialtone/following{/other_user}",
                "gists_url": "https://api.github.com/users/dialtone/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dialtone",
                "id": 23195,
                "login": "dialtone",
                "node_id": "MDQ6VXNlcjIzMTk1",
                "organizations_url": "https://api.github.com/users/dialtone/orgs",
                "received_events_url": "https://api.github.com/users/dialtone/received_events",
                "repos_url": "https://api.github.com/users/dialtone/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dialtone/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dialtone/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dialtone",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi!\r\n\r\nCan someone, please, summarise a full working example? Thanks in advance!",
            "created_at": "2021-07-16T11:18:00Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-881372982",
            "id": 881372982,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC1840iK82",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 13,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 13,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/881372982/reactions"
            },
            "updated_at": "2021-07-16T11:18:00Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/881372982",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13454223?v=4",
                "events_url": "https://api.github.com/users/jurisbu/events{/privacy}",
                "followers_url": "https://api.github.com/users/jurisbu/followers",
                "following_url": "https://api.github.com/users/jurisbu/following{/other_user}",
                "gists_url": "https://api.github.com/users/jurisbu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jurisbu",
                "id": 13454223,
                "login": "jurisbu",
                "node_id": "MDQ6VXNlcjEzNDU0MjIz",
                "organizations_url": "https://api.github.com/users/jurisbu/orgs",
                "received_events_url": "https://api.github.com/users/jurisbu/received_events",
                "repos_url": "https://api.github.com/users/jurisbu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jurisbu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jurisbu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jurisbu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Not sure if it's the best practice, but this seems to be working fine for me. I have put this in a `~/.config/nvim/ftplugin/go/lsp.vim`\r\n```vim\r\nlua <<EOF\r\n    function org_imports(wait_ms)\r\n      local params = vim.lsp.util.make_range_params()\r\n      params.context = {only = {\"source.organizeImports\"}}\r\n      local result = vim.lsp.buf_request_sync(0, \"textDocument/codeAction\", params, wait_ms)\r\n      for _, res in pairs(result or {}) do\r\n        for _, r in pairs(res.result or {}) do\r\n          if r.edit then\r\n            vim.lsp.util.apply_workspace_edit(r.edit)\r\n          else\r\n            vim.lsp.buf.execute_command(r.command)\r\n          end\r\n        end\r\n      end\r\n  end\r\nEOF\r\n\r\naugroup GO_LSP\r\n\tautocmd!\r\n\tautocmd BufWritePre *.go :silent! lua vim.lsp.buf.formatting()\r\n\tautocmd BufWritePre *.go :silent! lua org_imports(3000)\r\naugroup END\r\n```",
            "created_at": "2021-08-20T13:07:06Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-902680058",
            "id": 902680058,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC1841zc36",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 16,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 16,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/902680058/reactions"
            },
            "updated_at": "2022-05-17T13:23:06Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/902680058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15123086?v=4",
                "events_url": "https://api.github.com/users/zapling/events{/privacy}",
                "followers_url": "https://api.github.com/users/zapling/followers",
                "following_url": "https://api.github.com/users/zapling/following{/other_user}",
                "gists_url": "https://api.github.com/users/zapling/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zapling",
                "id": 15123086,
                "login": "zapling",
                "node_id": "MDQ6VXNlcjE1MTIzMDg2",
                "organizations_url": "https://api.github.com/users/zapling/orgs",
                "received_events_url": "https://api.github.com/users/zapling/received_events",
                "repos_url": "https://api.github.com/users/zapling/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zapling/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zapling/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zapling",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just a little heads up for everyone using this workaround from @zapling with a recent neovim version. With the current master (f4300985d3212887ef27d703ba8cb4230813e095), this does not work anymore and imports are not automatically added.",
            "created_at": "2022-02-01T14:40:03Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1026914389",
            "id": 1026914389,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC1849NXhV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1026914389/reactions"
            },
            "updated_at": "2022-02-01T14:40:03Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1026914389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1506585?v=4",
                "events_url": "https://api.github.com/users/rverton/events{/privacy}",
                "followers_url": "https://api.github.com/users/rverton/followers",
                "following_url": "https://api.github.com/users/rverton/following{/other_user}",
                "gists_url": "https://api.github.com/users/rverton/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rverton",
                "id": 1506585,
                "login": "rverton",
                "node_id": "MDQ6VXNlcjE1MDY1ODU=",
                "organizations_url": "https://api.github.com/users/rverton/orgs",
                "received_events_url": "https://api.github.com/users/rverton/received_events",
                "repos_url": "https://api.github.com/users/rverton/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rverton/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rverton/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rverton",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "That is due to https://github.com/neovim/neovim/issues/14090#issuecomment-1012005684 , the `offset_encoding` is now a required parameter for `vim.lsp.util.apply_workspace_edit()` & friends.\r\n\r\nChanging `vim.lsp.util.apply_workspace_edit(r.edit)` to `vim.lsp.util.apply_workspace_edit(r.edit, \"utf-16\")` should do for most LSPs (including `gopls`) or you can follow the instructions in the issue above mentioned for a more correct solution (i.e. detect the offset encoding and use that).",
            "created_at": "2022-02-01T15:14:24Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1026952321",
            "id": 1026952321,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC1849NgyB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1026952321/reactions"
            },
            "updated_at": "2022-02-01T15:14:24Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1026952321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85237?v=4",
                "events_url": "https://api.github.com/users/alexaandru/events{/privacy}",
                "followers_url": "https://api.github.com/users/alexaandru/followers",
                "following_url": "https://api.github.com/users/alexaandru/following{/other_user}",
                "gists_url": "https://api.github.com/users/alexaandru/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alexaandru",
                "id": 85237,
                "login": "alexaandru",
                "node_id": "MDQ6VXNlcjg1MjM3",
                "organizations_url": "https://api.github.com/users/alexaandru/orgs",
                "received_events_url": "https://api.github.com/users/alexaandru/received_events",
                "repos_url": "https://api.github.com/users/alexaandru/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alexaandru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alexaandru/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alexaandru",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Just a little heads up for everyone using this workaround from @zapling with a recent neovim version. With the current master (f4300985d3212887ef27d703ba8cb4230813e095), this does not work anymore and imports are not automatically added.\r\n\r\nThanks for the heads up. The fix should is probably be like this, as @alexaandru mentioned.\r\n```diff\r\n          if r.edit then\r\n-            vim.lsp.util.apply_workspace_edit(r.edit)\r\n+            vim.lsp.util.apply_workspace_edit(r.edit, \"utf-16\")\r\n          else\r\n```",
            "created_at": "2022-02-01T15:29:59Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1026971597",
            "id": 1026971597,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC1849NlfN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 14,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 14,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1026971597/reactions"
            },
            "updated_at": "2022-02-01T15:29:59Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1026971597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15123086?v=4",
                "events_url": "https://api.github.com/users/zapling/events{/privacy}",
                "followers_url": "https://api.github.com/users/zapling/followers",
                "following_url": "https://api.github.com/users/zapling/following{/other_user}",
                "gists_url": "https://api.github.com/users/zapling/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zapling",
                "id": 15123086,
                "login": "zapling",
                "node_id": "MDQ6VXNlcjE1MTIzMDg2",
                "organizations_url": "https://api.github.com/users/zapling/orgs",
                "received_events_url": "https://api.github.com/users/zapling/received_events",
                "repos_url": "https://api.github.com/users/zapling/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zapling/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zapling/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zapling",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@alexaandru Can you add some explanations to the code? because when I hit :w, nothing happened and the `result` is nil",
            "created_at": "2022-04-18T04:28:52Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1101083880",
            "id": 1101083880,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185BoTTo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1101083880/reactions"
            },
            "updated_at": "2022-04-18T04:28:52Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1101083880",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3980841?v=4",
                "events_url": "https://api.github.com/users/juniway/events{/privacy}",
                "followers_url": "https://api.github.com/users/juniway/followers",
                "following_url": "https://api.github.com/users/juniway/following{/other_user}",
                "gists_url": "https://api.github.com/users/juniway/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/juniway",
                "id": 3980841,
                "login": "juniway",
                "node_id": "MDQ6VXNlcjM5ODA4NDE=",
                "organizations_url": "https://api.github.com/users/juniway/orgs",
                "received_events_url": "https://api.github.com/users/juniway/received_events",
                "repos_url": "https://api.github.com/users/juniway/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/juniway/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/juniway/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/juniway",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sorry, I can't get this to work, `result` is always nil",
            "created_at": "2022-04-19T07:13:43Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1102176277",
            "id": 1102176277,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185BseAV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1102176277/reactions"
            },
            "updated_at": "2022-04-19T07:13:43Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1102176277",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3980841?v=4",
                "events_url": "https://api.github.com/users/juniway/events{/privacy}",
                "followers_url": "https://api.github.com/users/juniway/followers",
                "following_url": "https://api.github.com/users/juniway/following{/other_user}",
                "gists_url": "https://api.github.com/users/juniway/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/juniway",
                "id": 3980841,
                "login": "juniway",
                "node_id": "MDQ6VXNlcjM5ODA4NDE=",
                "organizations_url": "https://api.github.com/users/juniway/orgs",
                "received_events_url": "https://api.github.com/users/juniway/received_events",
                "repos_url": "https://api.github.com/users/juniway/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/juniway/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/juniway/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/juniway",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "you can just dump this anywhere in your Neovim lua config:\r\n\r\norganize imports aka `goimports`:\r\n```lua\r\nvim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n\tpattern = { \"*.go\" },\r\n\tcallback = function()\r\n\t\tlocal params = vim.lsp.util.make_range_params(nil, \"utf-16\")\r\n\t\tparams.context = { only = { \"source.organizeImports\" } }\r\n\t\tlocal result = vim.lsp.buf_request_sync(0, \"textDocument/codeAction\", params, 3000)\r\n\t\tfor _, res in pairs(result or {}) do\r\n\t\t\tfor _, r in pairs(res.result or {}) do\r\n\t\t\t\tif r.edit then\r\n\t\t\t\t\tvim.lsp.util.apply_workspace_edit(r.edit, \"utf-16\")\r\n\t\t\t\telse\r\n\t\t\t\t\tvim.lsp.buf.execute_command(r.command)\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend,\r\n})\r\n```\r\n\r\ncode formatting aka `gofmt`:\r\n```lua\r\nvim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n\tpattern = { \"*.go\" },\r\n\tcallback = function()\r\n\t\tvim.lsp.buf.formatting_sync(nil, 500)\r\n\tend,\r\n})\r\n```\r\n(mostly taken from https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-902680058\r\n\r\nEDIT: Updated the `gofmt` suggestion to do format_sync and have a longer timeout. The previous suggestion set `vim.lsp.buf.formatting` as the callback.",
            "created_at": "2022-05-16T20:41:26Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1128115341",
            "id": 1128115341,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185DPayN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 8,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1128115341/reactions"
            },
            "updated_at": "2022-05-17T14:17:19Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1128115341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5249233?v=4",
                "events_url": "https://api.github.com/users/jan-xyz/events{/privacy}",
                "followers_url": "https://api.github.com/users/jan-xyz/followers",
                "following_url": "https://api.github.com/users/jan-xyz/following{/other_user}",
                "gists_url": "https://api.github.com/users/jan-xyz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jan-xyz",
                "id": 5249233,
                "login": "jan-xyz",
                "node_id": "MDQ6VXNlcjUyNDkyMzM=",
                "organizations_url": "https://api.github.com/users/jan-xyz/orgs",
                "received_events_url": "https://api.github.com/users/jan-xyz/received_events",
                "repos_url": "https://api.github.com/users/jan-xyz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jan-xyz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jan-xyz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jan-xyz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "For some reason this formats the code on write but its not written .. so I have to save twice\r\n",
            "created_at": "2022-05-17T06:38:44Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1128472550",
            "id": 1128472550,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185DQx_m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1128472550/reactions"
            },
            "updated_at": "2022-05-17T06:39:49Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1128472550",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13243026?v=4",
                "events_url": "https://api.github.com/users/desdic/events{/privacy}",
                "followers_url": "https://api.github.com/users/desdic/followers",
                "following_url": "https://api.github.com/users/desdic/following{/other_user}",
                "gists_url": "https://api.github.com/users/desdic/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/desdic",
                "id": 13243026,
                "login": "desdic",
                "node_id": "MDQ6VXNlcjEzMjQzMDI2",
                "organizations_url": "https://api.github.com/users/desdic/orgs",
                "received_events_url": "https://api.github.com/users/desdic/received_events",
                "repos_url": "https://api.github.com/users/desdic/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/desdic/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/desdic/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/desdic",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> For some reason this formats the code on write but its not written .. so I have to save twice\r\n\r\ntry to increment the timeout (from 3000 to something like 5000 or more)",
            "created_at": "2022-05-17T12:36:37Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1128815767",
            "id": 1128815767,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185DSFyX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1128815767/reactions"
            },
            "updated_at": "2022-05-17T12:36:37Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1128815767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1598854?v=4",
                "events_url": "https://api.github.com/users/rafaelsq/events{/privacy}",
                "followers_url": "https://api.github.com/users/rafaelsq/followers",
                "following_url": "https://api.github.com/users/rafaelsq/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelsq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rafaelsq",
                "id": 1598854,
                "login": "rafaelsq",
                "node_id": "MDQ6VXNlcjE1OTg4NTQ=",
                "organizations_url": "https://api.github.com/users/rafaelsq/orgs",
                "received_events_url": "https://api.github.com/users/rafaelsq/received_events",
                "repos_url": "https://api.github.com/users/rafaelsq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rafaelsq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelsq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rafaelsq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> For some reason this formats the code on write but its not written .. so I have to save twice\r\n\r\nYou can try:\r\n```lua\r\nvim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n\tpattern = { \"*.go\" },\r\n\tcallback = function()\r\n\t\tvim.lsp.buf.formatting_sync(nil, 500)\r\n\tend,\r\n})\r\n```",
            "created_at": "2022-05-17T14:15:41Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1128927161",
            "id": 1128927161,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185DSg-5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1128927161/reactions"
            },
            "updated_at": "2022-05-17T14:15:50Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1128927161",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5249233?v=4",
                "events_url": "https://api.github.com/users/jan-xyz/events{/privacy}",
                "followers_url": "https://api.github.com/users/jan-xyz/followers",
                "following_url": "https://api.github.com/users/jan-xyz/following{/other_user}",
                "gists_url": "https://api.github.com/users/jan-xyz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jan-xyz",
                "id": 5249233,
                "login": "jan-xyz",
                "node_id": "MDQ6VXNlcjUyNDkyMzM=",
                "organizations_url": "https://api.github.com/users/jan-xyz/orgs",
                "received_events_url": "https://api.github.com/users/jan-xyz/received_events",
                "repos_url": "https://api.github.com/users/jan-xyz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jan-xyz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jan-xyz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jan-xyz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "formatting_sync was deprecated. You should use vim.lsp.buf.format\r\n\r\nAnd when I try to use 3000 for the timeout, I have to save twice as welll.\r\nWhat I did to fix it was to change to 5000(5s)\r\n\r\n```lua\r\nfunction org_imports()\r\n  local clients = vim.lsp.buf_get_clients()\r\n  for _, client in pairs(clients) do\r\n\r\n    local params = vim.lsp.util.make_range_params(nil, client.offset_encoding)\r\n    params.context = {only = {\"source.organizeImports\"}}\r\n\r\n    local result = vim.lsp.buf_request_sync(0, \"textDocument/codeAction\", params, 5000)\r\n    for _, res in pairs(result or {}) do\r\n      for _, r in pairs(res.result or {}) do\r\n        if r.edit then\r\n          vim.lsp.util.apply_workspace_edit(r.edit, client.offset_encoding)\r\n        else\r\n          vim.lsp.buf.execute_command(r.command)\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nvim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n  pattern = { \"*.go\" },\r\n  callback = vim.lsp.buf.format,\r\n})\r\n\r\nvim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n  pattern = { \"*.go\" },\r\n  callback = org_imports,\r\n})\r\n```",
            "created_at": "2022-05-17T14:34:19Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1128949874",
            "id": 1128949874,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185DSmhy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1128949874/reactions"
            },
            "updated_at": "2022-05-17T14:34:19Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1128949874",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1598854?v=4",
                "events_url": "https://api.github.com/users/rafaelsq/events{/privacy}",
                "followers_url": "https://api.github.com/users/rafaelsq/followers",
                "following_url": "https://api.github.com/users/rafaelsq/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelsq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rafaelsq",
                "id": 1598854,
                "login": "rafaelsq",
                "node_id": "MDQ6VXNlcjE1OTg4NTQ=",
                "organizations_url": "https://api.github.com/users/rafaelsq/orgs",
                "received_events_url": "https://api.github.com/users/rafaelsq/received_events",
                "repos_url": "https://api.github.com/users/rafaelsq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rafaelsq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelsq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rafaelsq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > For some reason this formats the code on write but its not written .. so I have to save twice\r\n> \r\n> try to increment the timeout (from 3000 to something like 5000 or more)\r\n\r\nI just find it soo nasty. Its like having sleep in my code and I'm not a fan .. wish it would fail and give an error if it got a timeout",
            "created_at": "2022-05-18T05:01:50Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1129568037",
            "id": 1129568037,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185DU9cl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1129568037/reactions"
            },
            "updated_at": "2022-05-18T05:01:50Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1129568037",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13243026?v=4",
                "events_url": "https://api.github.com/users/desdic/events{/privacy}",
                "followers_url": "https://api.github.com/users/desdic/followers",
                "following_url": "https://api.github.com/users/desdic/following{/other_user}",
                "gists_url": "https://api.github.com/users/desdic/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/desdic",
                "id": 13243026,
                "login": "desdic",
                "node_id": "MDQ6VXNlcjEzMjQzMDI2",
                "organizations_url": "https://api.github.com/users/desdic/orgs",
                "received_events_url": "https://api.github.com/users/desdic/received_events",
                "repos_url": "https://api.github.com/users/desdic/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/desdic/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/desdic/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/desdic",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It's true that `vim.lsp.buf.formatting_sync` was deprecated (more information on the deprecation in https://github.com/neovim/neovim/issues/18371). However, unless you're building from the default branch you won't have access to `vim.lsp.buf.format` yet. I'm running Neovim v0.7.0 with the following configuration for Go:\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n  pattern = { \"*.go\" },\r\n  callback = function()\r\n\t  vim.lsp.buf.formatting_sync(nil, 3000)\r\n  end,\r\n})\r\n\r\nvim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n\tpattern = { \"*.go\" },\r\n\tcallback = function()\r\n\t\tlocal params = vim.lsp.util.make_range_params(nil, vim.lsp.util._get_offset_encoding())\r\n\t\tparams.context = {only = {\"source.organizeImports\"}}\r\n\r\n\t\tlocal result = vim.lsp.buf_request_sync(0, \"textDocument/codeAction\", params, 3000)\r\n\t\tfor _, res in pairs(result or {}) do\r\n\t\t\tfor _, r in pairs(res.result or {}) do\r\n\t\t\t\tif r.edit then\r\n\t\t\t\t\tvim.lsp.util.apply_workspace_edit(r.edit, vim.lsp.util._get_offset_encoding())\r\n\t\t\t\telse\r\n\t\t\t\t\tvim.lsp.buf.execute_command(r.command)\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend,\r\n})\r\n```\r\n\r\nI'm using `vim.lsp.util._get_offset_encoding()` to get the offset encoding currently. I'm not sure if there's a better way. If anyone has any suggestions, please let me know.",
            "created_at": "2022-05-18T18:34:39Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1130373799",
            "id": 1130373799,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185DYCKn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 14,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 5,
                "laugh": 0,
                "rocket": 0,
                "total_count": 19,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1130373799/reactions"
            },
            "updated_at": "2022-05-18T18:34:39Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1130373799",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24284972?v=4",
                "events_url": "https://api.github.com/users/sudomateo/events{/privacy}",
                "followers_url": "https://api.github.com/users/sudomateo/followers",
                "following_url": "https://api.github.com/users/sudomateo/following{/other_user}",
                "gists_url": "https://api.github.com/users/sudomateo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sudomateo",
                "id": 24284972,
                "login": "sudomateo",
                "node_id": "MDQ6VXNlcjI0Mjg0OTcy",
                "organizations_url": "https://api.github.com/users/sudomateo/orgs",
                "received_events_url": "https://api.github.com/users/sudomateo/received_events",
                "repos_url": "https://api.github.com/users/sudomateo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sudomateo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sudomateo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sudomateo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Anyone aware of a way to specify the equivalent to  `goimports -local`?",
            "created_at": "2022-07-05T17:38:11Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1175325012",
            "id": 1175325012,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185GDglU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1175325012/reactions"
            },
            "updated_at": "2022-07-05T17:38:11Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1175325012",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1400401?v=4",
                "events_url": "https://api.github.com/users/chancez/events{/privacy}",
                "followers_url": "https://api.github.com/users/chancez/followers",
                "following_url": "https://api.github.com/users/chancez/following{/other_user}",
                "gists_url": "https://api.github.com/users/chancez/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chancez",
                "id": 1400401,
                "login": "chancez",
                "node_id": "MDQ6VXNlcjE0MDA0MDE=",
                "organizations_url": "https://api.github.com/users/chancez/orgs",
                "received_events_url": "https://api.github.com/users/chancez/received_events",
                "repos_url": "https://api.github.com/users/chancez/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chancez/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chancez/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chancez",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Anyone aware of a way to specify the equivalent to `goimports -local`?\r\n\r\nwhen in your gopls settings there is a \"local\" setting\r\nhttps://github.com/golang/tools/blob/master/gopls/doc/settings.md#local-string\r\n\r\ni think something like\r\n\r\n```lua\r\nlspconfig.gopls.setup({\r\n\tsettings = {\r\n\t\tgopls = {\r\n\t\t\tlocal = \"example.com\"\r\n\t\t}\r\n\t}\r\n})\r\n```\r\n\r\n",
            "created_at": "2022-07-05T18:53:15Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1175392137",
            "id": 1175392137,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185GDw-J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1175392137/reactions"
            },
            "updated_at": "2022-07-05T18:53:15Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1175392137",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6832539?v=4",
                "events_url": "https://api.github.com/users/sentriz/events{/privacy}",
                "followers_url": "https://api.github.com/users/sentriz/followers",
                "following_url": "https://api.github.com/users/sentriz/following{/other_user}",
                "gists_url": "https://api.github.com/users/sentriz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sentriz",
                "id": 6832539,
                "login": "sentriz",
                "node_id": "MDQ6VXNlcjY4MzI1Mzk=",
                "organizations_url": "https://api.github.com/users/sentriz/orgs",
                "received_events_url": "https://api.github.com/users/sentriz/received_events",
                "repos_url": "https://api.github.com/users/sentriz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sentriz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sentriz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sentriz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ah yes, I needed to look more carefully. Though I hadn't realized it was a prefix, that's not very useful as-is. I'll have to figure out a way to automagically get that value 😭 ",
            "created_at": "2022-07-05T18:57:42Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1175397502",
            "id": 1175397502,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185GDyR-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1175397502/reactions"
            },
            "updated_at": "2022-07-05T18:57:52Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1175397502",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1400401?v=4",
                "events_url": "https://api.github.com/users/chancez/events{/privacy}",
                "followers_url": "https://api.github.com/users/chancez/followers",
                "following_url": "https://api.github.com/users/chancez/following{/other_user}",
                "gists_url": "https://api.github.com/users/chancez/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chancez",
                "id": 1400401,
                "login": "chancez",
                "node_id": "MDQ6VXNlcjE0MDA0MDE=",
                "organizations_url": "https://api.github.com/users/chancez/orgs",
                "received_events_url": "https://api.github.com/users/chancez/received_events",
                "repos_url": "https://api.github.com/users/chancez/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chancez/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chancez/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chancez",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Ah yes, I needed to look more carefully. Though I hadn't realized it was a prefix, that's not very useful as-is. I'll have to figure out a way to automagically get that value sob\r\n\r\ni wonder if you could do something funny like have lua execute the equivalent of `go mod edit -json | jq .Module.Path` and use that as `local` :grin: ",
            "created_at": "2022-07-05T19:05:53Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1175403468",
            "id": 1175403468,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185GDzvM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1175403468/reactions"
            },
            "updated_at": "2022-07-05T19:05:53Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1175403468",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6832539?v=4",
                "events_url": "https://api.github.com/users/sentriz/events{/privacy}",
                "followers_url": "https://api.github.com/users/sentriz/followers",
                "following_url": "https://api.github.com/users/sentriz/following{/other_user}",
                "gists_url": "https://api.github.com/users/sentriz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sentriz",
                "id": 6832539,
                "login": "sentriz",
                "node_id": "MDQ6VXNlcjY4MzI1Mzk=",
                "organizations_url": "https://api.github.com/users/sentriz/orgs",
                "received_events_url": "https://api.github.com/users/sentriz/received_events",
                "repos_url": "https://api.github.com/users/sentriz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sentriz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sentriz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sentriz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > Ah yes, I needed to look more carefully. Though I hadn't realized it was a prefix, that's not very useful as-is. I'll have to figure out a way to automagically get that value sob\r\n> \r\n> i wonder if you could do something funny like have lua execute the equivalent of `go mod edit -json | jq .Module.Path` and use that as `local` 😁\r\n\r\nI wrote a simple helper function in Lua:\r\n\r\n```\r\n-- see if the file exists\r\nfunction FileExists(file)\r\n  local f = io.open(file, \"rb\")\r\n  if f then f:close() end\r\n  return f ~= nil\r\nend\r\n\r\n-- Get the value of the module name from go.mod in PWD\r\nfunction GetGoModuleName()\r\n  if not FileExists(\"go.mod\") then return nil end\r\n  for line in io.lines(\"go.mod\") do\r\n    if vim.startswith(line, \"module\") then\r\n      local items = vim.split(line, \" \")\r\n      local module_name = vim.trim(items[2])\r\n      return module_name\r\n    end\r\n  end\r\n  return nil\r\nend\r\n\r\nlocal goModule = GetGoModuleName()\r\n...\r\n\r\nlocal servers = {\r\n  goals = {\r\n    [\"local\"] = goModule,\r\n  }\r\n}\r\n```\r\n\r\nThat said, it seems like organizing imports doesn't always behave as I would expect when the local setting is configured, but I'm not sure why.",
            "created_at": "2022-07-05T22:36:42Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1175568990",
            "id": 1175568990,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185GEcJe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1175568990/reactions"
            },
            "updated_at": "2022-07-05T22:40:28Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1175568990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1400401?v=4",
                "events_url": "https://api.github.com/users/chancez/events{/privacy}",
                "followers_url": "https://api.github.com/users/chancez/followers",
                "following_url": "https://api.github.com/users/chancez/following{/other_user}",
                "gists_url": "https://api.github.com/users/chancez/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chancez",
                "id": 1400401,
                "login": "chancez",
                "node_id": "MDQ6VXNlcjE0MDA0MDE=",
                "organizations_url": "https://api.github.com/users/chancez/orgs",
                "received_events_url": "https://api.github.com/users/chancez/received_events",
                "repos_url": "https://api.github.com/users/chancez/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chancez/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chancez/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chancez",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "`autocmd BufWritePre *.go :silent! lua vim.lsp.buf.code_action({ context = { only = { \"source.organizeImports\" } }, apply = true })`",
            "created_at": "2022-09-20T12:41:04Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1252297542",
            "id": 1252297542,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185KpItG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 4,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 11,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1252297542/reactions"
            },
            "updated_at": "2022-09-20T12:41:04Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1252297542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53512609?v=4",
                "events_url": "https://api.github.com/users/yaocccc/events{/privacy}",
                "followers_url": "https://api.github.com/users/yaocccc/followers",
                "following_url": "https://api.github.com/users/yaocccc/following{/other_user}",
                "gists_url": "https://api.github.com/users/yaocccc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yaocccc",
                "id": 53512609,
                "login": "yaocccc",
                "node_id": "MDQ6VXNlcjUzNTEyNjA5",
                "organizations_url": "https://api.github.com/users/yaocccc/orgs",
                "received_events_url": "https://api.github.com/users/yaocccc/received_events",
                "repos_url": "https://api.github.com/users/yaocccc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yaocccc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yaocccc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yaocccc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Does any one encounter slow response time when the buffer is first time send `textDocument/codeAction` to gopls?",
            "created_at": "2023-11-08T04:21:20Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1801060419",
            "id": 1801060419,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185rWgBD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1801060419/reactions"
            },
            "updated_at": "2023-11-08T04:21:20Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1801060419",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39915562?v=4",
                "events_url": "https://api.github.com/users/leonasdev/events{/privacy}",
                "followers_url": "https://api.github.com/users/leonasdev/followers",
                "following_url": "https://api.github.com/users/leonasdev/following{/other_user}",
                "gists_url": "https://api.github.com/users/leonasdev/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leonasdev",
                "id": 39915562,
                "login": "leonasdev",
                "node_id": "MDQ6VXNlcjM5OTE1NTYy",
                "organizations_url": "https://api.github.com/users/leonasdev/orgs",
                "received_events_url": "https://api.github.com/users/leonasdev/received_events",
                "repos_url": "https://api.github.com/users/leonasdev/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leonasdev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leonasdev/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leonasdev",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Does any one encounter slow response time when the buffer is first time send `textDocument/codeAction` to gopls?\r\n\r\nI wrote some hacks to prevent blocking when save buffer on first time opened (send a preflight request to `gopls` when lsp attached):\r\n```lua\r\nlocal golang_organize_imports = function(bufnr, isPreflight)\r\n  local params = vim.lsp.util.make_range_params(nil, vim.lsp.util._get_offset_encoding(bufnr))\r\n  params.context = { only = { \"source.organizeImports\" } }\r\n\r\n  if isPreflight then\r\n    vim.lsp.buf_request(bufnr, \"textDocument/codeAction\", params, function() end)\r\n    return\r\n  end\r\n\r\n  local result = vim.lsp.buf_request_sync(bufnr, \"textDocument/codeAction\", params, 3000)\r\n  for _, res in pairs(result or {}) do\r\n    for _, r in pairs(res.result or {}) do\r\n      if r.edit then\r\n        vim.lsp.util.apply_workspace_edit(r.edit, vim.lsp.util._get_offset_encoding(bufnr))\r\n      else\r\n        vim.lsp.buf.execute_command(r.command)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nvim.api.nvim_create_autocmd(\"LspAttach\", {\r\n  group = vim.api.nvim_create_augroup(\"LspFormatting\", {}),\r\n  callback = function(args)\r\n    local bufnr = args.buf\r\n    local client = vim.lsp.get_client_by_id(args.data.client_id)\r\n\r\n    if client.name == \"gopls\" then\r\n      -- hack: Preflight async request to gopls, which can prevent blocking when save buffer on first time opened\r\n      golang_organize_imports(bufnr, true)\r\n\r\n      vim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n        pattern = \"*.go\",\r\n        group = vim.api.nvim_create_augroup(\"LspGolangOrganizeImports.\" .. bufnr, {}),\r\n        callback = function()\r\n          golang_organize_imports(bufnr)\r\n        end,\r\n      })\r\n    end\r\n  end,\r\n})\r\n```\r\ncomparision demo:\r\n\r\nhttps://github.com/neovim/nvim-lspconfig/assets/39915562/18b10465-8765-4964-ae60-87f1f48c4167\r\n\r\n\r\n",
            "created_at": "2023-11-08T05:11:25Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-1801096383",
            "id": 1801096383,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC185rWoy_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1801096383/reactions"
            },
            "updated_at": "2023-11-08T05:12:32Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1801096383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39915562?v=4",
                "events_url": "https://api.github.com/users/leonasdev/events{/privacy}",
                "followers_url": "https://api.github.com/users/leonasdev/followers",
                "following_url": "https://api.github.com/users/leonasdev/following{/other_user}",
                "gists_url": "https://api.github.com/users/leonasdev/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leonasdev",
                "id": 39915562,
                "login": "leonasdev",
                "node_id": "MDQ6VXNlcjM5OTE1NTYy",
                "organizations_url": "https://api.github.com/users/leonasdev/orgs",
                "received_events_url": "https://api.github.com/users/leonasdev/received_events",
                "repos_url": "https://api.github.com/users/leonasdev/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leonasdev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leonasdev/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leonasdev",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm simply doing like this.\n\n```\nvim.api.nvim_create_autocmd(\"BufWritePre\", {\n  callback = function(args)\n    vim.lsp.buf.format()\n    vim.lsp.buf.code_action { context = { only = { 'source.organizeImports' } }, apply = true }\n    vim.lsp.buf.code_action { context = { only = { 'source.fixAll' } }, apply = true }\n  end,\n})\n```",
            "created_at": "2024-10-09T20:18:32Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-2403354797",
            "id": 2403354797,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC186PQEit",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2403354797/reactions"
            },
            "updated_at": "2024-10-09T20:18:46Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2403354797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5334715?v=4",
                "events_url": "https://api.github.com/users/yoshiya0503/events{/privacy}",
                "followers_url": "https://api.github.com/users/yoshiya0503/followers",
                "following_url": "https://api.github.com/users/yoshiya0503/following{/other_user}",
                "gists_url": "https://api.github.com/users/yoshiya0503/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yoshiya0503",
                "id": 5334715,
                "login": "yoshiya0503",
                "node_id": "MDQ6VXNlcjUzMzQ3MTU=",
                "organizations_url": "https://api.github.com/users/yoshiya0503/orgs",
                "received_events_url": "https://api.github.com/users/yoshiya0503/received_events",
                "repos_url": "https://api.github.com/users/yoshiya0503/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yoshiya0503/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yoshiya0503/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yoshiya0503",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi!\n\nI have read through this thread wanting to do the same thing for my setup. I ended up realizing that:\n\n- Some actions have an `.edit` or a `.command`: those can be run immediately synchronously\n- Other actions don't have either, so for those I was trying to fall back to `vim.lsp.buf.code_action`\n- However, `vim.lsp.buf.code_action` is asynchronous, so it does not always resolve before Neovim has written to the file\n- I found that for those actions, there is a `codeAction/resolve` command, which we _can_ call synchronously using `buf_request_sync`\n\nI've put this all together into a snippet here: https://github.com/fnune/codeactions-on-save.nvim/blob/06ee93541ae32d335e5614ea389b2703a31cb658/lua/codeactions-on-save/main.lua#L15-L70\n\nYou can use it as a plugin if you'd like: https://github.com/fnune/codeactions-on-save.nvim\n\nThanks for this thread 🙇 ",
            "created_at": "2024-10-26T09:18:38Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-2439444562",
            "id": 2439444562,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC186RZvhS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2439444562/reactions"
            },
            "updated_at": "2024-10-26T09:18:38Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2439444562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16181067?v=4",
                "events_url": "https://api.github.com/users/fnune/events{/privacy}",
                "followers_url": "https://api.github.com/users/fnune/followers",
                "following_url": "https://api.github.com/users/fnune/following{/other_user}",
                "gists_url": "https://api.github.com/users/fnune/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fnune",
                "id": 16181067,
                "login": "fnune",
                "node_id": "MDQ6VXNlcjE2MTgxMDY3",
                "organizations_url": "https://api.github.com/users/fnune/orgs",
                "received_events_url": "https://api.github.com/users/fnune/received_events",
                "repos_url": "https://api.github.com/users/fnune/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fnune/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fnune/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fnune",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi @fnune. Wouldn't it be a good idea to request upstream (neovim/neovim) for a synchronous option for `vim.lsp.buf.code_action`?",
            "created_at": "2024-11-11T21:54:45Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115#issuecomment-2469124454",
            "id": 2469124454,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
            "node_id": "IC_kwDODTQC186TK9lm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2469124454/reactions"
            },
            "updated_at": "2024-11-11T21:54:45Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2469124454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 45,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115/comments",
    "created_at": "2020-02-05T06:04:52Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/115",
    "id": 560160501,
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "Improvements or additions to documentation",
            "id": 1674892763,
            "name": "documentation",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYz",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/documentation"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NjAxNjA1MDE=",
    "number": 115,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115/timeline",
    "title": "[gopls] run `editor.action.organizeImports`  on save.",
    "updated_at": "2024-11-11T21:54:46Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/115",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3259664?v=4",
        "events_url": "https://api.github.com/users/tkinz27/events{/privacy}",
        "followers_url": "https://api.github.com/users/tkinz27/followers",
        "following_url": "https://api.github.com/users/tkinz27/following{/other_user}",
        "gists_url": "https://api.github.com/users/tkinz27/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tkinz27",
        "id": 3259664,
        "login": "tkinz27",
        "node_id": "MDQ6VXNlcjMyNTk2NjQ=",
        "organizations_url": "https://api.github.com/users/tkinz27/orgs",
        "received_events_url": "https://api.github.com/users/tkinz27/received_events",
        "repos_url": "https://api.github.com/users/tkinz27/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tkinz27/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tkinz27/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tkinz27",
        "user_view_type": "public"
    }
}