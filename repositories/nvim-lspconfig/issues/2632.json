{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Description\r\n\r\nThe issue is that lspconfig requires the command table for a client config that is passed to the lspconfig .setup method call to be of type table, where the key is the command name and the value is array table of two values which requires the first value to be a function, and the second optional one to be a description. That however does not match what lsp core expects for the client.config.commands, which for the commands table is simple key - function mapping. Lspconfig does not transform the commands' table when passing it to start the lspclient\r\n\r\nFor some inexplicable, reason, lspconfig is creating those commands as user commands, which is useless, since those commands are not meant to be used like that anyway.\r\n\r\nHere is how it is actually used to produce some user commands\r\n```lua\r\n      util.create_module_commands(config_name, M.commands)\r\n```\r\n\r\nHere is the validation that lspconfig does, at `configs.lua:46` \r\n```lua\r\n    for k, v in pairs(config_def.commands) do\r\n      validate {\r\n        ['command.name'] = { k, 's' },\r\n        ['command.fn'] = { v[1], 'f' },\r\n      }\r\n    end\r\n```\r\n\r\nHere is how the lsp core is using client.commands , at `lsp/buf.lua:807`\r\n```lua\r\n      local fn = client.commands[command.command] or vim.lsp.commands[command.command]\r\n```\r\n\r\nPretty much obvious where the issue is, property name either should change to user_commands, since it is confusing, or transform it to match what core expects, so it is actually correct.\r\n\r\n### Neovim version\r\n\r\nNVIM 9.0.0\r\n\r\n### Nvim-lspconfig version\r\n\r\nmaster\r\n\r\n### Operating system and version\r\n\r\nUbuntu 22\r\n\r\n### Affected language servers\r\n\r\nall\r\n\r\n### Steps to reproduce\r\n\r\n1. Invoke .setup with {commands = { [\"command.name\"] = function() ..... end }\r\n2. Observe that the validation fails since it expects the value against the key to be array of two values function and description.\r\n\r\n### Actual behavior\r\n\r\nCommands table is not propagated to the lsp.core which has an explicit handle when executing commands, instead it just sets them as UserCommands. \r\n\r\nAt the moment the workaround is to set it to the globals commands table @ vim.lsp.commands, or force override the lsp_configs[server_name] which will bypass the validation, instead of passing to .setup which tries to validate the passed in user_config.\r\n\r\n### Expected behavior\r\n\r\nEither rename this commands, because it does not respect the interface expected by lsp core and client.config.commands , property or handle it correctly, i.e correct the validation, or transform the table to match the lsp core specs.\r\n\r\n### Minimal config\r\n\r\n```Lua\r\nNot applicable\r\n```\r\n\r\n\r\n### LSP log\r\n\r\nnot applicable",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2632/comments",
    "created_at": "2023-05-24T06:33:28Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2632/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2632",
    "id": 1723271030,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2632/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC185mtwd2",
    "number": 2632,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2632/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2632/timeline",
    "title": "Client commands table validation does not match what is expected by lsp core.",
    "updated_at": "2023-05-24T06:34:50Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2632",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
        "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
        "followers_url": "https://api.github.com/users/asmodeus812/followers",
        "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
        "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/asmodeus812",
        "id": 15955811,
        "login": "asmodeus812",
        "node_id": "MDQ6VXNlcjE1OTU1ODEx",
        "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
        "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
        "repos_url": "https://api.github.com/users/asmodeus812/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/asmodeus812"
    }
}