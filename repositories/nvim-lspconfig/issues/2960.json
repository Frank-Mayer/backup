{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Language server\r\n\r\n_No response_\r\n\r\n### Requested feature\r\n\r\nConsider a project with the following structure:\r\n\r\n```\r\n.\r\n├── bar\r\n│   ├── bar.py\r\n│   └── pyproject.toml\r\n├── foo\r\n│   ├── foo.py\r\n│   └── pyproject.toml\r\n├── pyproject.toml\r\n└── root.py\r\n```\r\n\r\nEach pyproject.toml represents a different virtual environment, with different packages, and the `[tool.pyright]` section correctly reflects that as well. Pyright works with this pattern, since it has multiple workspace support. \r\n\r\nHowever, depending on the order that the files are opened up, the workspace may not be set up correctly. If I open up `root.py`, then `foo/foo.py` in a different buffer, `foo/foo.py` will be in the root workspace. \r\n\r\nIf you reverse the order, and open up `foo/foo.py` first, *then* open up `root.py`, they will both be in their own, appropriate workplaces. Similarly, if I was to open up `foo/foo.py` followed by `bar/bar.py`, the workspaces will be configured correctly as well. I believe the issue is around the following function, in `lspconfig/manager.lua`:\r\n\r\n```lua\r\nfunction M:_attach_or_spawn(bufnr, new_config, root_dir, client, single_file)\r\n  if check_in_workspace(client, root_dir) then\r\n    return self:_attach_and_cache(bufnr, root_dir, client.id)\r\n  end\r\n\r\n  local supported = vim.tbl_get(client, 'server_capabilities', 'workspace', 'workspaceFolders', 'supported')\r\n  if supported then\r\n    return self:_register_workspace_folders(bufnr, root_dir, client)\r\n  end\r\n  self:_start_new_client(bufnr, new_config, root_dir, single_file)\r\nend\r\n```\r\n\r\nIn the above example, `check_in_workspace` it would see that the root_dir `foo/` is in the workspace for `.`, so it would not create a new workspace. The code seems to be pretty intentionally written to behave this well as well, so I don't think it's necessarily a bug. Maybe for other language servers / project structures this behavior is desirable? That said, changing the behavior based on the order files are opened is definitely strange.\r\n\r\nIt would be great if there was some kind of callback that could configure this behavior. The root directory is correct, so even a way force each root directory to be their own workspace would work well in this case. \r\n\r\n### Other clients which have this feature\r\n\r\n_No response_",
    "closed_at": "2024-01-29T01:00:19Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for your report. The configs in this repo are unsupported and provided only as a starting point. We depend on users (like you) to troubleshoot issues with their specific LSP setups and [send improvements](https://github.com/neovim/nvim-lspconfig/blob/master/CONTRIBUTING.md).\r\n\r\nIf you found a bug in the _core_ Nvim  `vim.lsp` module (not part of this repo), the best way to get it fixed is to [report to Nvim](https://github.com/neovim/neovim) (not nvim-lspconfig) with:\r\n- steps to reproduce it without the particular LSP server and other factors particular to your environment\r\n- (optional, but very helpful): by adding a failing test case to [lsp_spec.lua](https://github.com/neovim/neovim/blob/master/test/functional/plugin/lsp_spec.lua), which has code to setup a fake LSP server to simulate various scenarios",
            "created_at": "2024-01-29T01:00:19Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2960#issuecomment-1913794961",
            "id": 1913794961,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2960",
            "node_id": "IC_kwDODTQC185yEjGR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1913794961/reactions"
            },
            "updated_at": "2024-01-29T01:00:19Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1913794961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2960/comments",
    "created_at": "2024-01-09T02:44:06Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2960/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2960",
    "id": 2071530259,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "New feature or request",
            "id": 1674892767,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzY3",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2960/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC1857eQsT",
    "number": 2960,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2960/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2960/timeline",
    "title": "Add better support for nested projects / workspaces",
    "updated_at": "2024-01-29T01:00:19Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2960",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11918820?v=4",
        "events_url": "https://api.github.com/users/ryanmeans/events{/privacy}",
        "followers_url": "https://api.github.com/users/ryanmeans/followers",
        "following_url": "https://api.github.com/users/ryanmeans/following{/other_user}",
        "gists_url": "https://api.github.com/users/ryanmeans/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ryanmeans",
        "id": 11918820,
        "login": "ryanmeans",
        "node_id": "MDQ6VXNlcjExOTE4ODIw",
        "organizations_url": "https://api.github.com/users/ryanmeans/orgs",
        "received_events_url": "https://api.github.com/users/ryanmeans/received_events",
        "repos_url": "https://api.github.com/users/ryanmeans/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ryanmeans/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ryanmeans/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ryanmeans"
    }
}