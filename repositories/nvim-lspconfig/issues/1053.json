{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "- `nvim --version`: `NVIM v0.6.0-dev+1507-ge43dbfdd0`\r\n- nvim-lspconfig version(commit hash): `e5e06b4254ccf720c981cbfc4c2733548b4d88c5`\r\n- What language server (If the problem is related to a specific language server): ccls, clangd\r\n- Can you reproduce this behavior on other language server clients (vscode, languageclient-neovim, coc.nvim, etc.): no\r\n- Can you reproduce this behavior on other language servers offered in the nvim-lspconfig repo? (pyls -> pyright): no\r\n- Is the problem isolated to a particular language server: ?\r\n- Operating system/version: macOS 11.4\r\n\r\n### How to reproduce the problem from neovim startup\r\n\r\n1. Prepare the following files.\r\n\r\n`main.c`\r\n```c\r\n#include \"foo.h\"\r\n\r\nint main() {\r\n    foo();\r\n}\r\n```\r\n\r\n`foo.h`\r\n```c\r\n#pragma once\r\n\r\nvoid foo();\r\n```\r\n\r\n`foo.c`\r\n```c\r\n#include \"foo.h\"\r\n#include <stdio.h>\r\n\r\nvoid foo() {\r\n    puts(\"foo\");\r\n}\r\n```\r\n\r\n(Also `init.vim` from below.)\r\n\r\n2. Setup Vundle.\r\n\r\n```\r\ngit clone https://github.com/VundleVim/Vundle.vim /tmp/bundle/Vundle.vim\r\n```\r\n\r\n3. Start nvim and run `:PluginInstall`.\r\n\r\n4. Exit nvim and start over with `nvim main.c`.\r\n\r\n5. Move the cursor at the beginning of `foo()`.\r\n\r\n6. Run the command `:lua vim.lsp.buf.definition()`.\r\n\r\n### Actual behaviour\r\n\r\nnvim jumps to the *declaration* of `foo()` in`foo.h`. But if the file `foo.c` is manually opened before running the command then the behaviour is the expected one.\r\n\r\n### Expected behaviour\r\n\r\nnvim should jump to the *definition* of `foo()` in `foo.c`.\r\n\r\n### Minimal init.vim or init.lua and code sample\r\n\r\n`init.vim`\r\n```vim\r\nset rtp+=/tmp/bundle/Vundle.vim\r\ncall vundle#begin()\r\nPlugin 'VundleVim/Vundle.vim'\r\nPlugin 'neovim/nvim-lspconfig'\r\ncall vundle#end()\r\n\r\nlua << EOF\r\nvim.lsp.set_log_level(\"debug\")\r\nrequire'lspconfig'.ccls.setup{}\r\nEOF\r\n```\r\n\r\n### Health check\r\n<details>\r\n<summary>Checkhealth result</summary>\r\n```\r\nhealth#lspconfig#check\r\n========================================================================\r\n## Checking language server protocol configuration\r\n  - INFO: ccls: configuration checked.\r\n```\r\n</details>\r\n\r\n### LSP log\r\n<details>\r\n<summary>Log file</summary>\r\n```\r\n[ START ] 2021-07-10T12:26:09+0200 ] LSP logging initiated\r\n[ INFO ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:316 ]\t\"Starting RPC client\"\t{  args = {},  cmd = \"ccls\",  extra = {}}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:827 ]\t\"LSP[ccls]\"\t\"initialize_params\"\t{  capabilities = {    callHierarchy = {      dynamicRegistration = false,      <metatable> = <1>{        __tostring = <function 1>      }    },    textDocument = {      codeAction = {        codeActionLiteralSupport = {          codeActionKind = {            valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        dynamicRegistration = false,        <metatable> = <table 1>      },      completion = {        completionItem = {          commitCharactersSupport = false,          deprecatedSupport = false,          documentationFormat = { \"markdown\", \"plaintext\" },          preselectSupport = false,          snippetSupport = false,          <metatable> = <table 1>        },        completionItemKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },          <metatable> = <table 1>        },        contextSupport = false,        dynamicRegistration = false,        <metatable> = <table 1>      },      declaration = {        linkSupport = true,        <metatable> = <table 1>      },      definition = {        linkSupport = true,        <metatable> = <table 1>      },      documentHighlight = {        dynamicRegistration = false,        <metatable> = <table 1>      },      documentSymbol = {        dynamicRegistration = false,        hierarchicalDocumentSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      hover = {        contentFormat = { \"markdown\", \"plaintext\" },        dynamicRegistration = false,        <metatable> = <table 1>      },      implementation = {        linkSupport = true,        <metatable> = <table 1>      },      publishDiagnostics = {        relatedInformation = true,        tagSupport = {          valueSet = { 1, 2 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      references = {        dynamicRegistration = false,        <metatable> = <table 1>      },      rename = {        dynamicRegistration = false,        prepareSupport = true,        <metatable> = <table 1>      },      signatureHelp = {        dynamicRegistration = false,        signatureInformation = {          activeParameterSupport = true,          documentationFormat = { \"markdown\", \"plaintext\" },          parameterInformation = {            labelOffsetSupport = true,            <metatable> = <table 1>          },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      synchronization = {        didSave = true,        dynamicRegistration = false,        willSave = false,        willSaveWaitUntil = false,        <metatable> = <table 1>      },      typeDefinition = {        linkSupport = true,        <metatable> = <table 1>      },      <metatable> = <table 1>    },    window = {      showDocument = {        support = false,        <metatable> = <table 1>      },      showMessage = {        messageActionItem = {          additionalPropertiesSupport = false,          <metatable> = <table 1>        },        <metatable> = <table 1>      },      workDoneProgress = true,      <metatable> = <table 1>    },    workspace = {      applyEdit = true,      configuration = true,      symbol = {        dynamicRegistration = false,        hierarchicalWorkspaceSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      workspaceEdit = {        resourceOperations = { \"rename\", \"create\", \"delete\" },        <metatable> = <table 1>      },      workspaceFolders = true,      <metatable> = <table 1>    }  },  clientInfo = {    name = \"Neovim\",    version = \"0.6.0\"  },  initializationOptions = vim.empty_dict(),  processId = 33592,  rootPath = \"/Users/cyrus/tmp/nvim-lsp-issue\",  rootUri = \"file:///Users/cyrus/tmp/nvim-lsp-issue\",  trace = \"off\",  workspaceFolders = { {      name = \"/Users/cyrus/tmp/nvim-lsp-issue\",      uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue\"    } }}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"initialize\",  params = {    capabilities = {      callHierarchy = {        dynamicRegistration = false,        <metatable> = <1>{          __tostring = <function 1>        }      },      textDocument = {        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          dynamicRegistration = false,          <metatable> = <table 1>        },        completion = {          completionItem = {            commitCharactersSupport = false,            deprecatedSupport = false,            documentationFormat = { \"markdown\", \"plaintext\" },            preselectSupport = false,            snippetSupport = false,            <metatable> = <table 1>          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },            <metatable> = <table 1>          },          contextSupport = false,          dynamicRegistration = false,          <metatable> = <table 1>        },        declaration = {          linkSupport = true,          <metatable> = <table 1>        },        definition = {          linkSupport = true,          <metatable> = <table 1>        },        documentHighlight = {          dynamicRegistration = false,          <metatable> = <table 1>        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        hover = {          contentFormat = { \"markdown\", \"plaintext\" },          dynamicRegistration = false,          <metatable> = <table 1>        },        implementation = {          linkSupport = true,          <metatable> = <table 1>        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        references = {          dynamicRegistration = false,          <metatable> = <table 1>        },        rename = {          dynamicRegistration = false,          prepareSupport = true,          <metatable> = <table 1>        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            activeParameterSupport = true,            documentationFormat = { \"markdown\", \"plaintext\" },            parameterInformation = {              labelOffsetSupport = true,              <metatable> = <table 1>            },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = false,          willSaveWaitUntil = false,          <metatable> = <table 1>        },        typeDefinition = {          linkSupport = true,          <metatable> = <table 1>        },        <metatable> = <table 1>      },      window = {        showDocument = {          support = false,          <metatable> = <table 1>        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false,            <metatable> = <table 1>          },          <metatable> = <table 1>        },        workDoneProgress = true,        <metatable> = <table 1>      },      workspace = {        applyEdit = true,        configuration = true,        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        workspaceEdit = {          resourceOperations = { \"rename\", \"create\", \"delete\" },          <metatable> = <table 1>        },        workspaceFolders = true,        <metatable> = <table 1>      }    },    clientInfo = {      name = \"Neovim\",      version = \"0.6.0\"    },    initializationOptions = vim.empty_dict(),    processId = 33592,    rootPath = \"/Users/cyrus/tmp/nvim-lsp-issue\",    rootUri = \"file:///Users/cyrus/tmp/nvim-lsp-issue\",    trace = \"off\",    workspaceFolders = { {        name = \"/Users/cyrus/tmp/nvim-lsp-issue\",        uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue\"      } }  }}\r\n[ ERROR ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"ccls\"\t\"stderr\"\t\"12:26:09                initialize.cc:274 I initialize in directory /Users/cyrus/tmp/nvim-lsp-issue with uri file:///Users/cyrus/tmp/nvim-lsp-issue\\n\"\r\n[ ERROR ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"ccls\"\t\"stderr\"\t'12:26:09                initialize.cc:297 I initializationOptions: {\"compilationDatabaseCommand\":\"\",\"compilationDatabaseDirectory\":\"\",\"cache\":{\"directory\":\".ccls-cache\",\"format\":\"binary\",\"hierarchicalPath\":false,\"retainInMemory\":2},\"capabilities\":{\"documentOnTypeFormattingProvider\":{\"firstTriggerCharacter\":\"}\",\"moreTriggerCharacter\":[]},\"foldingRangeProvider\":true,\"workspace\":{\"workspaceFolders\":{\"supported\":true,\"changeNotifications\":true}}},\"clang\":{\"excludeArgs\":[],\"extraArgs\":[],\"pathMappings\":[],\"resourceDir\":\"\"},\"client\":{\"diagnosticsRelatedInformation\":true,\"hierarchicalDocumentSymbolSupport\":true,\"linkSupport\":true,\"snippetSupport\":true},\"codeLens\":{\"localVariables\":true},\"completion\":{\"caseSensitivity\":2,\"detailedLabel\":true,\"dropOldRequests\":true,\"duplicateOptional\":true,\"filterAndSort\":true,\"include\":{\"blacklist\":[],\"maxPathSize\":30,\"suffixWhitelist\":[\".h\",\".hpp\",\".hh\",\".inc\"],\"whitelist\":[]},\"maxNum\":100,\"placeholder\":true},\"diagnostics\":{\"blacklist\":[],\"onChange\":1000,\"onOpen\":0,\"onSave\":0,\"spellChecking\":true,\"whitelist\":[]},\"highlight\":{\"largeFileSize\":2097152,\"lsRanges\":false,\"blacklist\":[],\"whitelist\":[]},\"index\":{\"blacklist\":[],\"comments\":2,\"initialNoLinkage\":false,\"initialBlacklist\":[],\"initialWhitelist\":[],\"maxInitializerLines\":5,\"multiVersion\":0,\"multiVersionBlacklist\":[],\"multiVersionWhitelist\":[],\"name\":{\"suppressUnwrittenScope\":false},\"onChange\":false,\"parametersInDeclarations\":true,\"threads\":0,\"trackDependency\":2,\"whitelist\":[]},\"request\":{\"timeout\":5000},\"session\":{\"maxNum\":10},\"workspaceSymbol\":{\"caseSensitivity\":1,\"maxNum\":1000,\"sort\":true},\"xref\":{\"maxNum\":2000}}\\n12:26:09                initialize.cc:329 I use -resource-dir=/usr/local/Cellar/llvm/12.0.0/lib/clang/12.0.0\\n12:26:09                initialize.cc:361 I workspace folder: /Users/cyrus/tmp/nvim-lsp-issue/\\n'\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 1,  jsonrpc = \"2.0\",  result = {    capabilities = {      codeActionProvider = {        codeActionKinds = { \"quickfix\" }      },      codeLensProvider = {        resolveProvider = false      },      completionProvider = {        resolveProvider = false,        triggerCharacters = { \".\", \":\", \">\", \"#\", \"<\", '\"', \"/\" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {        resolveProvider = true      },      documentOnTypeFormattingProvider = {        firstTriggerCharacter = \"}\",        moreTriggerCharacter = {}      },      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { \"ccls.xref\" }      },      foldingRangeProvider = true,      hoverProvider = true,      implementationProvider = true,      referencesProvider = true,      renameProvider = true,      signatureHelpProvider = {        triggerCharacters = { \"(\", \",\" }      },      textDocumentSync = {        change = 2,        openClose = true,        save = {          includeText = false        },        willSave = false,        willSaveWaitUntil = false      },      typeDefinitionProvider = true,      workspace = {        workspaceFolders = {          changeNotifications = true,          supported = true        }      },      workspaceSymbolProvider = true    },    serverInfo = {      name = \"ccls\",      version = \"<unknown>\"    }  }}\r\n[ ERROR ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"ccls\"\t\"stderr\"\t\"12:26:09                initialize.cc:386 I start 8 indexers\\n12:26:09                initialize.cc:394 I dispatch initial index requests\\n12:26:09                  pipeline.cc:493 I loaded project. Refresh semantic highlight for all working file.\\n\"\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"initialized\",  params = {    [true] = 6  }}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:854 ]\t\"LSP[ccls]\"\t\"server_capabilities\"\t{  codeActionProvider = {    codeActionKinds = { \"quickfix\" }  },  codeLensProvider = {    resolveProvider = false  },  completionProvider = {    resolveProvider = false,    triggerCharacters = { \".\", \":\", \">\", \"#\", \"<\", '\"', \"/\" }  },  declarationProvider = true,  definitionProvider = true,  documentFormattingProvider = true,  documentHighlightProvider = true,  documentLinkProvider = {    resolveProvider = true  },  documentOnTypeFormattingProvider = {    firstTriggerCharacter = \"}\",    moreTriggerCharacter = {}  },  documentRangeFormattingProvider = true,  documentSymbolProvider = true,  executeCommandProvider = {    commands = { \"ccls.xref\" }  },  foldingRangeProvider = true,  hoverProvider = true,  implementationProvider = true,  referencesProvider = true,  renameProvider = true,  signatureHelpProvider = {    triggerCharacters = { \"(\", \",\" }  },  textDocumentSync = {    change = 2,    openClose = true,    save = {      includeText = false    },    willSave = false,    willSaveWaitUntil = false  },  typeDefinitionProvider = true,  workspace = {    workspaceFolders = {      changeNotifications = true,      supported = true    }  },  workspaceSymbolProvider = true}\r\n[ INFO ] 2021-07-10T12:26:09+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:855 ]\t\"LSP[ccls]\"\t\"initialized\"\t{  resolved_capabilities = {    call_hierarchy = false,    code_action = {      codeActionKinds = { \"quickfix\" }    },    code_lens = true,    code_lens_resolve = false,    completion = true,    declaration = true,    document_formatting = true,    document_highlight = true,    document_range_formatting = true,    document_symbol = true,    execute_command = true,    find_references = true,    goto_definition = true,    hover = true,    implementation = true,    rename = true,    signature_help = true,    signature_help_trigger_characters = { \"(\", \",\" },    text_document_did_change = 2,    text_document_open_close = true,    text_document_save = {      includeText = false    },    text_document_save_include_text = false,    text_document_will_save = false,    text_document_will_save_wait_until = false,    type_definition = true,    workspace_folder_properties = {      changeNotifications = true,      supported = true    },    workspace_symbol = true  }}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didOpen\",  params = {    textDocument = {      languageId = \"c\",      text = '#include \"foo.h\"\\n\\nint main() {\\n    foo();\\n}\\n\\n/*\\n\\nlua vim.lsp.buf.implementation()\\nlua vim.lsp.buf.declaration()\\nlua vim.lsp.buf.definition()\\n\\n*/\\n',      uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\",      version = 0    }  }}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/handlers.lua:445 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 1,  params = {    diagnostics = {},    uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\"  }}\r\n[ ERROR ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"ccls\"\t\"stderr\"\t\"12:26:09              sema_manager.cc:763 I create session for /Users/cyrus/tmp/nvim-lsp-issue/main.c\\n\"\r\n[ ERROR ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"ccls\"\t\"stderr\"\t\"12:26:09                  pipeline.cc:298 I load cache for /Users/cyrus/tmp/nvim-lsp-issue/main.c\\n\"\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$ccls/publishSkippedRanges\",  params = {    skippedRanges = {},    uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\"  }}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:680 ]\t\"notification\"\t\"$ccls/publishSkippedRanges\"\t{  skippedRanges = {},  uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\"}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$ccls/publishSemanticHighlight\",  params = {    symbols = { {        id = 0,        kind = 12,        lsRanges = {},        parentKind = 1,        ranges = { {            L = 22,            R = 26          } },        storage = 0      }, {        id = 1,        kind = 12,        lsRanges = {},        parentKind = 0,        ranges = { {            L = 35,            R = 38          } },        storage = 0      } },    uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\"  }}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 0,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"index\"  }}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:680 ]\t\"notification\"\t\"$ccls/publishSemanticHighlight\"\t{  symbols = { {      id = 0,      kind = 12,      lsRanges = {},      parentKind = 1,      ranges = { {          L = 22,          R = 26        } },      storage = 0    }, {      id = 1,      kind = 12,      lsRanges = {},      parentKind = 0,      ranges = { {          L = 35,          R = 38        } },      storage = 0    } },  uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\"}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:694 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"index\"}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:697 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/handlers.lua:445 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  client_id = 1,  params = {    token = \"index\"  }}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 0,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = {},    uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\"  }}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:680 ]\t\"notification\"\t\"textDocument/publishDiagnostics\"\t{  diagnostics = {},  uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\"}\r\n[ DEBUG ] 2021-07-10T12:26:09+0200 ] ...HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/handlers.lua:445 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 1,  params = {    diagnostics = {},    uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\"  }}\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:895 ]\t\"LSP[ccls]\"\t\"client.request\"\t1\t\"textDocument/definition\"\t{  position = {    character = 4,    line = 3  },  textDocument = {    uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\"  }}\t<function 1>\t1\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"textDocument/definition\",  params = {    position = {      character = 4,      line = 3    },    textDocument = {      uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\"    }  }}\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 2,  jsonrpc = \"2.0\",  result = { {      targetRange = {        end = {          character = 10,          line = 2        },        start = {          character = 0,          line = 2        }      },      targetSelectionRange = {        end = {          character = 8,          line = 2        },        start = {          character = 5,          line = 2        }      },      targetUri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/foo.h\"    } }}\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/handlers.lua:445 ]\t\"default_handler\"\t\"textDocument/definition\"\t{  bufnr = 1,  client_id = 1,  params = { {      targetRange = {        end = {          character = 10,          line = 2        },        start = {          character = 0,          line = 2        }      },      targetSelectionRange = {        end = {          character = 8,          line = 2        },        start = {          character = 5,          line = 2        }      },      targetUri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/foo.h\"    } }}\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didClose\",  params = {    textDocument = {      uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/main.c\"    }  }}\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didOpen\",  params = {    textDocument = {      languageId = \"cpp\",      text = \"#pragma once\\n\\nvoid foo();\\n\",      uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/foo.h\",      version = 0    }  }}\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/handlers.lua:445 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 1,  params = {    diagnostics = {},    uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/foo.h\"  }}\r\n[ ERROR ] 2021-07-10T12:26:16+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"ccls\"\t\"stderr\"\t\"12:26:16              sema_manager.cc:763 I create session for /Users/cyrus/tmp/nvim-lsp-issue/foo.h\\n\"\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$ccls/publishSkippedRanges\",  params = {    skippedRanges = {},    uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/foo.h\"  }}\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$ccls/publishSemanticHighlight\",  params = {    symbols = { {        id = 1,        kind = 12,        lsRanges = {},        parentKind = 0,        ranges = { {            L = 19,            R = 22          } },        storage = 0      } },    uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/foo.h\"  }}\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:680 ]\t\"notification\"\t\"$ccls/publishSkippedRanges\"\t{  skippedRanges = {},  uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/foo.h\"}\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:680 ]\t\"notification\"\t\"$ccls/publishSemanticHighlight\"\t{  symbols = { {      id = 1,      kind = 12,      lsRanges = {},      parentKind = 0,      ranges = { {          L = 19,          R = 22        } },      storage = 0    } },  uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/foo.h\"}\r\n[ ERROR ] 2021-07-10T12:26:16+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"ccls\"\t\"stderr\"\t\"12:26:16                  pipeline.cc:386 I parse /Users/cyrus/tmp/nvim-lsp-issue/foo.h\\n\"\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = {},    uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/foo.h\"  }}\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:680 ]\t\"notification\"\t\"textDocument/publishDiagnostics\"\t{  diagnostics = {},  uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/foo.h\"}\r\n[ DEBUG ] 2021-07-10T12:26:16+0200 ] ...HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/handlers.lua:445 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 1,  params = {    diagnostics = {},    uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue/foo.h\"  }}\r\n[ INFO ] 2021-07-10T12:26:19+0200 ] ...r/neovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp.lua:1214 ]\t\"exit_handler\"\t{ {    _on_attach = <function 1>,    cancel_request = <function 2>,    config = {      capabilities = {        callHierarchy = {          dynamicRegistration = false,          <metatable> = <1>{            __tostring = <function 3>          }        },        textDocument = {          codeAction = {            codeActionLiteralSupport = {              codeActionKind = {                valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" },                <metatable> = <table 1>              },              <metatable> = <table 1>            },            dynamicRegistration = false,            <metatable> = <table 1>          },          completion = {            completionItem = {              commitCharactersSupport = false,              deprecatedSupport = false,              documentationFormat = { \"markdown\", \"plaintext\" },              preselectSupport = false,              snippetSupport = false,              <metatable> = <table 1>            },            completionItemKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },              <metatable> = <table 1>            },            contextSupport = false,            dynamicRegistration = false,            <metatable> = <table 1>          },          declaration = {            linkSupport = true,            <metatable> = <table 1>          },          definition = {            linkSupport = true,            <metatable> = <table 1>          },          documentHighlight = {            dynamicRegistration = false,            <metatable> = <table 1>          },          documentSymbol = {            dynamicRegistration = false,            hierarchicalDocumentSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          hover = {            contentFormat = { \"markdown\", \"plaintext\" },            dynamicRegistration = false,            <metatable> = <table 1>          },          implementation = {            linkSupport = true,            <metatable> = <table 1>          },          publishDiagnostics = {            relatedInformation = true,            tagSupport = {              valueSet = { 1, 2 },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          references = {            dynamicRegistration = false,            <metatable> = <table 1>          },          rename = {            dynamicRegistration = false,            prepareSupport = true,            <metatable> = <table 1>          },          signatureHelp = {            dynamicRegistration = false,            signatureInformation = {              activeParameterSupport = true,              documentationFormat = { \"markdown\", \"plaintext\" },              parameterInformation = {                labelOffsetSupport = true,                <metatable> = <table 1>              },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          synchronization = {            didSave = true,            dynamicRegistration = false,            willSave = false,            willSaveWaitUntil = false,            <metatable> = <table 1>          },          typeDefinition = {            linkSupport = true,            <metatable> = <table 1>          },          <metatable> = <table 1>        },        window = {          showDocument = {            support = false,            <metatable> = <table 1>          },          showMessage = {            messageActionItem = {              additionalPropertiesSupport = false,              <metatable> = <table 1>            },            <metatable> = <table 1>          },          workDoneProgress = true,          <metatable> = <table 1>        },        workspace = {          applyEdit = true,          configuration = true,          symbol = {            dynamicRegistration = false,            hierarchicalWorkspaceSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          workspaceEdit = {            resourceOperations = { \"rename\", \"create\", \"delete\" },            <metatable> = <table 1>          },          workspaceFolders = true,          <metatable> = <table 1>        }      },      cmd = { \"ccls\" },      filetypes = { \"c\", \"cpp\", \"objc\", \"objcpp\" },      flags = {},      get_language_id = <function 4>,      handlers = <2>{},      init_options = vim.empty_dict(),      log_level = 2,      message_level = 2,      name = \"ccls\",      on_attach = <function 5>,      on_exit = <function 6>,      on_init = <function 7>,      root_dir = \"/Users/cyrus/tmp/nvim-lsp-issue\",      settings = vim.empty_dict(),      <metatable> = <table 1>    },    handlers = <table 2>,    id = 1,    initialized = true,    is_stopped = <function 8>,    messages = {      messages = {},      name = \"ccls\",      progress = {        index = {}      },      status = {}    },    name = \"ccls\",    notify = <function 9>,    offset_encoding = \"utf-16\",    request = <function 10>,    request_sync = <function 11>,    resolved_capabilities = {      call_hierarchy = false,      code_action = <3>{        codeActionKinds = { \"quickfix\" }      },      code_lens = true,      code_lens_resolve = false,      completion = true,      declaration = true,      document_formatting = true,      document_highlight = true,      document_range_formatting = true,      document_symbol = true,      execute_command = true,      find_references = true,      goto_definition = true,      hover = true,      implementation = true,      rename = true,      signature_help = true,      signature_help_trigger_characters = <4>{ \"(\", \",\" },      text_document_did_change = 2,      text_document_open_close = true,      text_document_save = <5>{        includeText = false      },      text_document_save_include_text = false,      text_document_will_save = false,      text_document_will_save_wait_until = false,      type_definition = true,      workspace_folder_properties = {        changeNotifications = true,        supported = true      },      workspace_symbol = true    },    rpc = {      handle = <userdata 1>,      notify = <function 12>,      pid = 33593,      request = <function 13>    },    server_capabilities = {      codeActionProvider = <table 3>,      codeLensProvider = {        resolveProvider = false      },      completionProvider = {        resolveProvider = false,        triggerCharacters = { \".\", \":\", \">\", \"#\", \"<\", '\"', \"/\" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {        resolveProvider = true      },      documentOnTypeFormattingProvider = {        firstTriggerCharacter = \"}\",        moreTriggerCharacter = {}      },      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { \"ccls.xref\" }      },      foldingRangeProvider = true,      hoverProvider = true,      implementationProvider = true,      referencesProvider = true,      renameProvider = true,      signatureHelpProvider = {        triggerCharacters = <table 4>      },      textDocumentSync = {        change = 2,        openClose = true,        save = <table 5>,        willSave = false,        willSaveWaitUntil = false      },      typeDefinitionProvider = true,      workspace = {        workspaceFolders = {          changeNotifications = true,          supported = true        }      },      workspaceSymbolProvider = true    },    stop = <function 14>,    supports_method = <function 15>,    workspaceFolders = { {        name = \"/Users/cyrus/tmp/nvim-lsp-issue\",        uri = \"file:///Users/cyrus/tmp/nvim-lsp-issue\"      } },    workspace_did_change_configuration = <function 16>  } }\r\n[ DEBUG ] 2021-07-10T12:26:19+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 3,  jsonrpc = \"2.0\",  method = \"shutdown\"}\r\n[ DEBUG ] 2021-07-10T12:26:19+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 3,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-07-10T12:26:19+0200 ] ...ovim/HEAD-e43dbfd/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"exit\"}\r\n```\r\n</details>\r\n",
    "closed_at": "2021-07-11T10:25:16Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hi @cyrus-and,\r\n\r\nThanks for the report. This is expected behavior: you'll need to generate a compile_commands.json to point clang to the right source files (otherwise it will just find the header). People typically use cmake for this:\r\n\r\n```\r\n# CMakeLists files in this project can\r\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and\r\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}.\r\ncmake_minimum_required (VERSION 2.8.11)\r\nproject (fooer)\r\n\r\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\r\n\r\nadd_executable (myExecutable foo.c main.c)\r\n```\r\n\r\nHere's what I got:\r\n```json\r\n[\r\n{\r\n  \"directory\": \"/Users/michael/Repositories/test_c_project/build\",\r\n  \"command\": \"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc    -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk -o CMakeFiles/myExecutable.dir/foo.c.o -c /Users/michael/Repositories/test_c_project/foo.c\",\r\n  \"file\": \"/Users/michael/Repositories/test_c_project/foo.c\"\r\n},\r\n{\r\n  \"directory\": \"/Users/michael/Repositories/test_c_project/build\",\r\n  \"command\": \"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc    -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk -o CMakeFiles/myExecutable.dir/main.c.o -c /Users/michael/Repositories/test_c_project/main.c\",\r\n  \"file\": \"/Users/michael/Repositories/test_c_project/main.c\"\r\n}\r\n]\r\n```\r\n\r\nWith that in ./build, my go-to definition takes me to the definition, not declaration.",
            "created_at": "2021-07-11T10:25:16Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1053#issuecomment-877775740",
            "id": 877775740,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3Nzc3NTc0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877775740/reactions"
            },
            "updated_at": "2021-07-11T10:25:52Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877775740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you @mjlbach for the quick reply, and sorry if this was such a basic issue. This is the first time that I attempt to set up this environment.\r\n\r\nI was puzzled because opening that folder in VSCode, it just works as expected, without providing any additional information. But I guess VSCode goes one step further and tries to perform some guesswork?",
            "created_at": "2021-07-11T10:38:31Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1053#issuecomment-877777252",
            "id": 877777252,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3Nzc3NzI1Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877777252/reactions"
            },
            "updated_at": "2021-07-11T10:38:31Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877777252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1660263?v=4",
                "events_url": "https://api.github.com/users/cyrus-and/events{/privacy}",
                "followers_url": "https://api.github.com/users/cyrus-and/followers",
                "following_url": "https://api.github.com/users/cyrus-and/following{/other_user}",
                "gists_url": "https://api.github.com/users/cyrus-and/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cyrus-and",
                "id": 1660263,
                "login": "cyrus-and",
                "node_id": "MDQ6VXNlcjE2NjAyNjM=",
                "organizations_url": "https://api.github.com/users/cyrus-and/orgs",
                "received_events_url": "https://api.github.com/users/cyrus-and/received_events",
                "repos_url": "https://api.github.com/users/cyrus-and/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cyrus-and/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cyrus-and/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cyrus-and"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "No worries, clangd is fairly unique in this regard. \r\n\r\nUnfortunately, I can't reproduce the behavior you are seeing on vscode. With/without compile_commands.json, the behavior matches between vscode and lspconfig for me.",
            "created_at": "2021-07-11T11:04:24Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1053#issuecomment-877780420",
            "id": 877780420,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3Nzc4MDQyMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877780420/reactions"
            },
            "updated_at": "2021-07-11T11:04:24Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877780420",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Unfortunately, I can't reproduce the behavior you are seeing on vscode. With/without compile_commands.json, the behavior matches between vscode and lspconfig for me.\r\n\r\nI just start VSCode with `code .` in that folder then, \"Go to Definition\" from the context menu, and the file `foo.c` is opened in the right point. Note that there are no other files in that folder.\r\n\r\n<img width=\"645\" alt=\"Screenshot 2021-07-11 at 1 06 26 PM\" src=\"https://user-images.githubusercontent.com/1660263/125192566-cffe3c00-e248-11eb-99f8-639843bd9a7d.png\">",
            "created_at": "2021-07-11T11:08:48Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1053#issuecomment-877780963",
            "id": 877780963,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3Nzc4MDk2Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877780963/reactions"
            },
            "updated_at": "2021-07-11T11:09:11Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877780963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1660263?v=4",
                "events_url": "https://api.github.com/users/cyrus-and/events{/privacy}",
                "followers_url": "https://api.github.com/users/cyrus-and/followers",
                "following_url": "https://api.github.com/users/cyrus-and/following{/other_user}",
                "gists_url": "https://api.github.com/users/cyrus-and/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cyrus-and",
                "id": 1660263,
                "login": "cyrus-and",
                "node_id": "MDQ6VXNlcjE2NjAyNjM=",
                "organizations_url": "https://api.github.com/users/cyrus-and/orgs",
                "received_events_url": "https://api.github.com/users/cyrus-and/received_events",
                "repos_url": "https://api.github.com/users/cyrus-and/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cyrus-and/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cyrus-and/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cyrus-and"
            }
        },
        {
            "author_association": "NONE",
            "body": "Same issue.\r\nThis has been messing with me for a long time.\r\nThe Vscode can open the right position.\r\nBut the lsp of nvim must open the file first, then it can work normally.\r\nI use the ccls lsp server.\r\n",
            "created_at": "2022-05-29T14:41:45Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1053#issuecomment-1140463391",
            "id": 1140463391,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053",
            "node_id": "IC_kwDODTQC185D-hcf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1140463391/reactions"
            },
            "updated_at": "2022-05-29T14:41:45Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1140463391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12377225?v=4",
                "events_url": "https://api.github.com/users/invokermoon/events{/privacy}",
                "followers_url": "https://api.github.com/users/invokermoon/followers",
                "following_url": "https://api.github.com/users/invokermoon/following{/other_user}",
                "gists_url": "https://api.github.com/users/invokermoon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/invokermoon",
                "id": 12377225,
                "login": "invokermoon",
                "node_id": "MDQ6VXNlcjEyMzc3MjI1",
                "organizations_url": "https://api.github.com/users/invokermoon/orgs",
                "received_events_url": "https://api.github.com/users/invokermoon/received_events",
                "repos_url": "https://api.github.com/users/invokermoon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/invokermoon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/invokermoon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/invokermoon"
            }
        },
        {
            "author_association": "NONE",
            "body": "@cyrus-and \r\nHow did you end this issue?\r\nThank you.\r\n",
            "created_at": "2022-05-29T14:43:30Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1053#issuecomment-1140463723",
            "id": 1140463723,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053",
            "node_id": "IC_kwDODTQC185D-hhr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1140463723/reactions"
            },
            "updated_at": "2022-05-29T14:43:30Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1140463723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12377225?v=4",
                "events_url": "https://api.github.com/users/invokermoon/events{/privacy}",
                "followers_url": "https://api.github.com/users/invokermoon/followers",
                "following_url": "https://api.github.com/users/invokermoon/following{/other_user}",
                "gists_url": "https://api.github.com/users/invokermoon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/invokermoon",
                "id": 12377225,
                "login": "invokermoon",
                "node_id": "MDQ6VXNlcjEyMzc3MjI1",
                "organizations_url": "https://api.github.com/users/invokermoon/orgs",
                "received_events_url": "https://api.github.com/users/invokermoon/received_events",
                "repos_url": "https://api.github.com/users/invokermoon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/invokermoon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/invokermoon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/invokermoon"
            }
        },
        {
            "author_association": "NONE",
            "body": "> How did you end this issue?\r\n\r\n@invokermoon I switched back to Emacs lol.",
            "created_at": "2022-05-29T19:17:23Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1053#issuecomment-1140508421",
            "id": 1140508421,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053",
            "node_id": "IC_kwDODTQC185D-scF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1140508421/reactions"
            },
            "updated_at": "2022-05-29T19:17:23Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1140508421",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1660263?v=4",
                "events_url": "https://api.github.com/users/cyrus-and/events{/privacy}",
                "followers_url": "https://api.github.com/users/cyrus-and/followers",
                "following_url": "https://api.github.com/users/cyrus-and/following{/other_user}",
                "gists_url": "https://api.github.com/users/cyrus-and/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cyrus-and",
                "id": 1660263,
                "login": "cyrus-and",
                "node_id": "MDQ6VXNlcjE2NjAyNjM=",
                "organizations_url": "https://api.github.com/users/cyrus-and/orgs",
                "received_events_url": "https://api.github.com/users/cyrus-and/received_events",
                "repos_url": "https://api.github.com/users/cyrus-and/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cyrus-and/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cyrus-and/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cyrus-and"
            }
        },
        {
            "author_association": "NONE",
            "body": "compile_commands.json can be in the root, it doesn't have to be in a ./build directory.\r\nThis is my temporary solution:\r\n\r\n```\r\n#!/usr/bin/env python3\r\nimport os\r\nimport json\r\nfrom glob import glob\r\n\r\ndic=[]\r\nroot = os.getcwd()\r\nfor name in glob('*.c'):\r\n    dic.append({\"command\": \"cc\", \"directory\":root, \"file\": os.path.join(root, name)})\r\njson.dump(dic, open('compile_commands.json', 'w'))\r\n```",
            "created_at": "2023-06-07T00:45:24Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1053#issuecomment-1579661029",
            "id": 1579661029,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053",
            "node_id": "IC_kwDODTQC185eJ7bl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1579661029/reactions"
            },
            "updated_at": "2023-06-07T00:45:24Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1579661029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17622113?v=4",
                "events_url": "https://api.github.com/users/liba2k/events{/privacy}",
                "followers_url": "https://api.github.com/users/liba2k/followers",
                "following_url": "https://api.github.com/users/liba2k/following{/other_user}",
                "gists_url": "https://api.github.com/users/liba2k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/liba2k",
                "id": 17622113,
                "login": "liba2k",
                "node_id": "MDQ6VXNlcjE3NjIyMTEz",
                "organizations_url": "https://api.github.com/users/liba2k/orgs",
                "received_events_url": "https://api.github.com/users/liba2k/received_events",
                "repos_url": "https://api.github.com/users/liba2k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/liba2k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/liba2k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/liba2k"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053/comments",
    "created_at": "2021-07-10T10:28:46Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1053",
    "id": 941221989,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5NDEyMjE5ODk=",
    "number": 1053,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053/timeline",
    "title": "vim.lsp.buf.definition only works if the target file is already open (the first time)",
    "updated_at": "2023-06-07T00:45:24Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1053",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1660263?v=4",
        "events_url": "https://api.github.com/users/cyrus-and/events{/privacy}",
        "followers_url": "https://api.github.com/users/cyrus-and/followers",
        "following_url": "https://api.github.com/users/cyrus-and/following{/other_user}",
        "gists_url": "https://api.github.com/users/cyrus-and/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/cyrus-and",
        "id": 1660263,
        "login": "cyrus-and",
        "node_id": "MDQ6VXNlcjE2NjAyNjM=",
        "organizations_url": "https://api.github.com/users/cyrus-and/orgs",
        "received_events_url": "https://api.github.com/users/cyrus-and/received_events",
        "repos_url": "https://api.github.com/users/cyrus-and/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/cyrus-and/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cyrus-and/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/cyrus-and"
    }
}