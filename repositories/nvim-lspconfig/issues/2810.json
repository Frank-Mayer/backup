{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Description\n\nThis is a Windows-specific issue. Running Neovim in WSL or native Linux (Arch) in my tests I could not reproduce. \r\n\r\nWhen editing .ps1 files in windows-native neovim, the client starts but does not attach to the open buffer. \n\n### Neovim version\n\nNVIM v0.9.1\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.0-beta3\n\n### Nvim-lspconfig version\n\n_No response_\n\n### Operating system and version\n\nWindows 11 22H2\n\n### Affected language servers\n\npowershell_es\n\n### Steps to reproduce\n\n1. Open a .ps1 file.\r\n2. Check output of :LspInfo & :LspLog\n\n### Actual behavior\n\n:LspLog shows the client has started - no errors or warnings.\r\n\r\n:LspInfo shows that the client is not attached to the current buffer.\n\n### Expected behavior\n\nThe client should attach to the current buffer when a .ps1 file is opened.\n\n### Minimal config\n\n```Lua\nlocal on_windows = vim.loop.os_uname().version:match(\"Windows\")\r\n\r\nlocal function join_paths(...)\r\n  local path_sep = on_windows and \"\\\\\" or \"/\"\r\n  local result = table.concat({ ... }, path_sep)\r\n  return result\r\nend\r\n\r\nvim.cmd([[set runtimepath=$VIMRUNTIME]])\r\n\r\nlocal temp_dir = vim.loop.os_getenv(\"TEMP\") or \"/tmp\"\r\n\r\nvim.cmd(\"set packpath=\" .. join_paths(temp_dir, \"nvim\", \"site\"))\r\n\r\nlocal package_root = join_paths(temp_dir, \"nvim\", \"site\", \"pack\")\r\nlocal lspconfig_path = join_paths(package_root, \"test\", \"start\", \"nvim-lspconfig\")\r\n\r\nif vim.fn.isdirectory(lspconfig_path) ~= 1 then\r\n  vim.fn.system({ \"git\", \"clone\", \"https://github.com/neovim/nvim-lspconfig\", lspconfig_path })\r\nend\r\n\r\nlocal mason_path = join_paths(package_root, \"test\", \"start\", \"mason\")\r\n\r\nif vim.fn.isdirectory(mason_path) ~= 1 then\r\n  vim.fn.system({ \"git\", \"clone\", \"https://github.com/williamboman/mason.nvim\", mason_path })\r\nend\r\n\r\nvim.lsp.set_log_level(\"trace\")\r\nrequire(\"vim.lsp.log\").set_format_func(vim.inspect)\r\nlocal nvim_lsp = require(\"lspconfig\")\r\nlocal on_attach = function(_, bufnr)\r\n  local function buf_set_option(...)\r\n    vim.api.nvim_buf_set_option(bufnr, ...)\r\n  end\r\n\r\n  buf_set_option(\"omnifunc\", \"v:lua.vim.lsp.omnifunc\")\r\n\r\n  -- Mappings.\r\n  local opts = { buffer = bufnr, noremap = true, silent = true }\r\n  vim.keymap.set(\"n\", \"gD\", vim.lsp.buf.declaration, opts)\r\n  vim.keymap.set(\"n\", \"gd\", vim.lsp.buf.definition, opts)\r\n  vim.keymap.set(\"n\", \"K\", vim.lsp.buf.hover, opts)\r\n  vim.keymap.set(\"n\", \"gi\", vim.lsp.buf.implementation, opts)\r\n  vim.keymap.set(\"n\", \"<C-k>\", vim.lsp.buf.signature_help, opts)\r\n  vim.keymap.set(\"n\", \"<space>wa\", vim.lsp.buf.add_workspace_folder, opts)\r\n  vim.keymap.set(\"n\", \"<space>wr\", vim.lsp.buf.remove_workspace_folder, opts)\r\n  vim.keymap.set(\"n\", \"<space>wl\", function()\r\n    print(vim.inspect(vim.lsp.buf.list_workspace_folders()))\r\n  end, opts)\r\n  vim.keymap.set(\"n\", \"<space>D\", vim.lsp.buf.type_definition, opts)\r\n  vim.keymap.set(\"n\", \"<space>rn\", vim.lsp.buf.rename, opts)\r\n  vim.keymap.set(\"n\", \"gr\", vim.lsp.buf.references, opts)\r\n  vim.keymap.set(\"n\", \"<space>e\", vim.diagnostic.open_float, opts)\r\n  vim.keymap.set(\"n\", \"[d\", vim.diagnostic.goto_prev, opts)\r\n  vim.keymap.set(\"n\", \"]d\", vim.diagnostic.goto_next, opts)\r\n  vim.keymap.set(\"n\", \"<space>q\", vim.diagnostic.setloclist, opts)\r\nend\r\n\r\nrequire(\"mason\").setup({\r\n  install_root_dir = mason_path,\r\n})\r\n\r\nlocal mason_root = join_paths(mason_path, \"packages\")\r\n\r\n-- Add the server that troubles you here\r\nlocal name = \"powershell_es\"\r\nlocal bundle_path = vim.fs.normalize(join_paths(mason_root, \"powershell-editor-services\"))\r\nif not name then\r\n  print(\"You have not defined a server name, please edit minimal_init.lua\")\r\nend\r\n-- if not nvim_lsp[name].document_config.default_config.cmd and not cmd then\r\n-- \tprint([[You have not defined a server default cmd for a server\r\n--     that requires it please edit minimal_init.lua]])\r\n-- end\r\n\r\nnvim_lsp[name].setup({\r\n  bundle_path = bundle_path,\r\n  on_attach = on_attach,\r\n})\r\n\r\nprint(\r\n  [[You can find your log at $HOME/.cache/nvim/lsp.log. Please paste in a github issue under a details tag as described in the issue template.]]\r\n)\n```\n\n\n### LSP log\n\nhttps://gist.github.com/scottmckendry/c3b502ba707aa9effbcca656e823d499",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2810/comments",
    "created_at": "2023-09-13T20:08:56Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2810/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2810",
    "id": 1895192417,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2810/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC185w9ldh",
    "number": 2810,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2810/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2810/timeline",
    "title": "PowerShell Editor Services - LSP client starts but doesn't attach to buffer",
    "updated_at": "2023-09-13T20:08:56Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2810",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/39483124?v=4",
        "events_url": "https://api.github.com/users/scottmckendry/events{/privacy}",
        "followers_url": "https://api.github.com/users/scottmckendry/followers",
        "following_url": "https://api.github.com/users/scottmckendry/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottmckendry/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scottmckendry",
        "id": 39483124,
        "login": "scottmckendry",
        "node_id": "MDQ6VXNlcjM5NDgzMTI0",
        "organizations_url": "https://api.github.com/users/scottmckendry/orgs",
        "received_events_url": "https://api.github.com/users/scottmckendry/received_events",
        "repos_url": "https://api.github.com/users/scottmckendry/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scottmckendry/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottmckendry/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scottmckendry"
    }
}