{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Description\n\nWith the changes introduced in #3066 sourcekit-lsp fails in monorepos with multiple `Package.swift` files.\r\n\r\nFor example, I have the following structure:\r\n```\r\ncoding_challenges/\r\n  foo/Package.swift\r\n  bar/Package.swift\r\n  baz/Package.swift\r\n```\r\n\r\nWhen doing `cd coding_challenges/foo` and `nvim Package.swift` I'm seeing this in the `lsp.log` file:\r\n```\r\n[ERROR][2024-06-04 11:41:34] .../vim/lsp/rpc.lua:770\t\"rpc\"\t\"/usr/bin/sourcekit-lsp\"\t\"stderr\"\t\"[2024-06-04 11:41:34.862] could not find manifest, or not a SwiftPM package: /Users/gonzalorehu/other_projects/coding_challenges\\n\"\r\n[ERROR][2024-06-04 11:41:34] .../vim/lsp/rpc.lua:770\t\"rpc\"\t\"/usr/bin/sourcekit-lsp\"\t\"stderr\"\t\"[2024-06-04 11:41:34.868] could not open compilation database for /Users/gonzalorehu/other_projects/coding_challenges/wc/Sources/WordCount.swift\\n\"\r\n```\r\n\r\nThis is because the plugin now searches for `Package.swift` at the top of the git (mono)repo and there is none. It is not clear from #3066 why this order was modified, but reverting to the old order solves my issue:\r\n```\r\nroot_dir = util.root_pattern('Package.swift', 'buildServer.json', 'compile_commands.json', '.git')\r\n```\r\n\r\nMoving `or util.find_git_ancestor(filename)` after `Package.swift` also seems to work:\r\n```\r\n    root_dir = function(filename, _)\r\n      return util.root_pattern 'buildServer.json'(filename)\r\n        or util.root_pattern('*.xcodeproj', '*.xcworkspace')(filename)\r\n        -- better to keep it at the end, because some modularized apps contain multiple Package.swift files\r\n        or util.root_pattern('compile_commands.json', 'Package.swift')(filename)\r\n     -> or util.find_git_ancestor(filename)\r\n    end,\r\n```\r\n\r\nIn my opinion, we should maintain the original order, or at the very least push the `.git` search to the very end.\r\n@wojciech-kulik thoughts? I saw you're running a complex setup [here](https://wojciechkulik.pl/ios/the-complete-guide-to-ios-macos-development-in-neovim), can you test if something breaks if we make this change?\r\n\r\n",
    "closed_at": "2024-06-05T06:59:44Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hi,\r\n\r\n> It is not clear from https://github.com/neovim/nvim-lspconfig/pull/3066 why this order was modified\r\n\r\nI left the comment here:\r\n<img width=\"809\" alt=\"image\" src=\"https://github.com/neovim/nvim-lspconfig/assets/3128467/95f95005-c48a-41de-ab91-cd62e3acee57\">\r\n\r\nIt's common approach that you have the root app (for example iOS app) which must have `xcodeproj` and then you modularize it with SPM packages, having multiple `Package.swift` as you mentioned.\r\n\r\nIn this case, if we look for `Package.swift` first, the LSP wouldn't understand the whole project, it would consider some module to be the root, which is incorrect.\r\n\r\nIn general, I'm not sure if there is any generic fix for this issue because the expected behavior depends on what you do. If you want to work on a single module you can just change `cwd` and the LSP will then properly detect your `Package.swift`.\r\n\r\nSo I think the current solution allows to work with both cases: a single SPM package and the whole project with SPM modules. The only difference is where you set the root / where you open your Neovim. At least that was the assumption.\r\n\r\nHowever, as you mentioned, it seems like it searches for git root below the current working directory. Maybe my assumption about this function `find_git_ancestor` was incorrect. So I guess the proposed solution by you should work :).",
            "created_at": "2024-06-04T17:29:27Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3191#issuecomment-2148056509",
            "id": 2148056509,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191",
            "node_id": "IC_kwDODTQC186ACL29",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148056509/reactions"
            },
            "updated_at": "2024-06-04T17:36:38Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148056509",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3128467?v=4",
                "events_url": "https://api.github.com/users/wojciech-kulik/events{/privacy}",
                "followers_url": "https://api.github.com/users/wojciech-kulik/followers",
                "following_url": "https://api.github.com/users/wojciech-kulik/following{/other_user}",
                "gists_url": "https://api.github.com/users/wojciech-kulik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wojciech-kulik",
                "id": 3128467,
                "login": "wojciech-kulik",
                "node_id": "MDQ6VXNlcjMxMjg0Njc=",
                "organizations_url": "https://api.github.com/users/wojciech-kulik/orgs",
                "received_events_url": "https://api.github.com/users/wojciech-kulik/received_events",
                "repos_url": "https://api.github.com/users/wojciech-kulik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wojciech-kulik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wojciech-kulik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wojciech-kulik"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Oh, I've just remembered why I moved git root above `Package.swift`. Because sometimes the `xcodeproj` can be in a different node like:\r\n```\r\n- .git\r\n- dir\r\n-- project.xcodeproj\r\n- some_dir\r\n-- file.swift\r\n```\r\nIn this case I assumed that if we can't find the project file, we should use the git root. However, this is an edge case.\r\n\r\nI'm not sure if it is possible to guess what is the expected root in this case, because even if we somehow find the nested `xcodeproj` we can't tell whether it is the root project, or some library, or something else.\r\n\r\nSo I guess, we could assume that this is an edge case that should be handled manually by changing the config on the user's side and go with your proposed solution, assuming that if we couldn't find `buildServer.json`, or `xcodeproj`/`xcworkspace` then we try with `Package.swift`",
            "created_at": "2024-06-04T17:34:36Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3191#issuecomment-2148064761",
            "id": 2148064761,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191",
            "node_id": "IC_kwDODTQC186ACN35",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148064761/reactions"
            },
            "updated_at": "2024-06-04T17:41:38Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148064761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3128467?v=4",
                "events_url": "https://api.github.com/users/wojciech-kulik/events{/privacy}",
                "followers_url": "https://api.github.com/users/wojciech-kulik/followers",
                "following_url": "https://api.github.com/users/wojciech-kulik/following{/other_user}",
                "gists_url": "https://api.github.com/users/wojciech-kulik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wojciech-kulik",
                "id": 3128467,
                "login": "wojciech-kulik",
                "node_id": "MDQ6VXNlcjMxMjg0Njc=",
                "organizations_url": "https://api.github.com/users/wojciech-kulik/orgs",
                "received_events_url": "https://api.github.com/users/wojciech-kulik/received_events",
                "repos_url": "https://api.github.com/users/wojciech-kulik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wojciech-kulik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wojciech-kulik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wojciech-kulik"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It's common approach that you have the root app (for example iOS app) which must have xcodeproj and then you modularize it with SPM packages, having multiple Package.swift as you mentioned.\r\n>\r\n> In this case, if we look for Package.swift first, the LSP wouldn't understand the whole project, it would consider some module to be the root, which is incorrect.\r\n\r\nIn this scenario, we could have some command-line-tool written in Swift unrelated to the iOS project:\r\n```\r\nMyProject.xcworkspace\r\ntools/\r\n  my-command-line-tool/\r\n    Package.swift\r\n```\r\n\r\nIn this case, the current search order would also override the cwd even if it's set to `tools/my-command-line-tool` no?\r\n`Package.swift` should be the first file we search for because it is the smaller unit. A swift package cannot depend on an xcodeproj but an xcodeproj can depend on a swift package.\r\n\r\nI think we should respect the user's cwd. If cwd is set to a folder with Package.swift, that's what we should use for the lsp. If cwd is pointing to the root folder with an `xcodeproj`, then we should use the xcodeproj.\r\n\r\nThe scenario where we might not want to do this would be the following:\r\n```\r\nMyProject.xcworkspace\r\nPackage.swift\r\nSources/\r\nTests/\r\n```\r\nBut I'm not sure if this is common, usually if you have a Package.swift at the top level is if the entire project is a package. ",
            "created_at": "2024-06-04T18:48:19Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3191#issuecomment-2148187845",
            "id": 2148187845,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191",
            "node_id": "IC_kwDODTQC186ACr7F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148187845/reactions"
            },
            "updated_at": "2024-06-04T18:48:19Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148187845",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/25568998?v=4",
                "events_url": "https://api.github.com/users/dirtyhabits97/events{/privacy}",
                "followers_url": "https://api.github.com/users/dirtyhabits97/followers",
                "following_url": "https://api.github.com/users/dirtyhabits97/following{/other_user}",
                "gists_url": "https://api.github.com/users/dirtyhabits97/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dirtyhabits97",
                "id": 25568998,
                "login": "dirtyhabits97",
                "node_id": "MDQ6VXNlcjI1NTY4OTk4",
                "organizations_url": "https://api.github.com/users/dirtyhabits97/orgs",
                "received_events_url": "https://api.github.com/users/dirtyhabits97/received_events",
                "repos_url": "https://api.github.com/users/dirtyhabits97/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dirtyhabits97/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dirtyhabits97/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dirtyhabits97"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> In this case, the current search order would also override the cwd even if it's set to tools/my-command-line-tool no?\r\nPackage.swift should be the first file we search for because it is the smaller unit.\r\n\r\nThe root is searched per each individual file. So you can be in a file within a module, but you are working on a whole project (`cwd` set to the place where `xcodeproj` is), so it's crucial then to detect the project, not the `Package.swift`, even though this is closer to the file being edited.\r\n\r\nRegarding the last case, I think we don't have to handle it, it would be a super edge case to have `Package.swift` and `xcodeproj` at the same level.\r\n\r\nI think we can go with the solution you suggested:\r\n```lua\r\n    root_dir = function(filename, _)\r\n      return util.root_pattern 'buildServer.json'(filename)\r\n        or util.root_pattern('*.xcodeproj', '*.xcworkspace')(filename)\r\n        or util.root_pattern('compile_commands.json', 'Package.swift')(filename)\r\n        or util.find_git_ancestor(filename)\r\n    end,\r\n```\r\n\r\nIt will respect the `cwd`. If the user is within SPM package, it won't find `xcodeproj` but it will find `Package.swift`. If the user is in the root dir with `xcodeproj` it will find it as expected. Git root will be used as the last resort.\r\n\r\nAt least if I understand correctly that `root_pattern` doesn't go below `cwd`.",
            "created_at": "2024-06-04T19:08:18Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3191#issuecomment-2148218118",
            "id": 2148218118,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191",
            "node_id": "IC_kwDODTQC186ACzUG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148218118/reactions"
            },
            "updated_at": "2024-06-04T19:22:03Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148218118",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3128467?v=4",
                "events_url": "https://api.github.com/users/wojciech-kulik/events{/privacy}",
                "followers_url": "https://api.github.com/users/wojciech-kulik/followers",
                "following_url": "https://api.github.com/users/wojciech-kulik/following{/other_user}",
                "gists_url": "https://api.github.com/users/wojciech-kulik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wojciech-kulik",
                "id": 3128467,
                "login": "wojciech-kulik",
                "node_id": "MDQ6VXNlcjMxMjg0Njc=",
                "organizations_url": "https://api.github.com/users/wojciech-kulik/orgs",
                "received_events_url": "https://api.github.com/users/wojciech-kulik/received_events",
                "repos_url": "https://api.github.com/users/wojciech-kulik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wojciech-kulik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wojciech-kulik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wojciech-kulik"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> A swift package cannot depend on an xcodeproj but an xcodeproj can depend on a swift package.\r\n\r\nHmm, I know what you mean, that theoretically while editing a file from a SPM Package, the LSP doesn't have to know about the whole project. However, I think there was some problem while working on an iOS/macOS app modularized with SPM packages, but I don't remember exactly what the problem was. \r\n\r\nMaybe something with detecting changes in other places? In general, it is a little bit complicated, because to develop iOS apps we need to use xcode-build-server, so that the LSP understands the project structure.",
            "created_at": "2024-06-04T19:21:27Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3191#issuecomment-2148238038",
            "id": 2148238038,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191",
            "node_id": "IC_kwDODTQC186AC4LW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148238038/reactions"
            },
            "updated_at": "2024-06-04T19:21:27Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148238038",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3128467?v=4",
                "events_url": "https://api.github.com/users/wojciech-kulik/events{/privacy}",
                "followers_url": "https://api.github.com/users/wojciech-kulik/followers",
                "following_url": "https://api.github.com/users/wojciech-kulik/following{/other_user}",
                "gists_url": "https://api.github.com/users/wojciech-kulik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wojciech-kulik",
                "id": 3128467,
                "login": "wojciech-kulik",
                "node_id": "MDQ6VXNlcjMxMjg0Njc=",
                "organizations_url": "https://api.github.com/users/wojciech-kulik/orgs",
                "received_events_url": "https://api.github.com/users/wojciech-kulik/received_events",
                "repos_url": "https://api.github.com/users/wojciech-kulik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wojciech-kulik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wojciech-kulik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wojciech-kulik"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't mind creating the PR with my initial proposal because it solves my original issue.\r\n\r\nBut keep in mind that it will not solve this other case:\r\n```\r\nMyProject.xcworkspace\r\ntools/\r\n  my-command-line-tool/\r\n    Package.swift\r\n```\r\n\r\nI just tested this with cwd pointing to the folder with `Package.swift`\r\n```\r\n[ERROR][2024-06-04 14:17:19] .../vim/lsp/rpc.lua:770\t\"rpc\"\t\"/usr/bin/sourcekit-lsp\"\t\"stderr\"\t\"[2024-06-04 14:17:19.571] could not find manifest, or not a SwiftPM package: /Users/gonzalorehu/other_projects/ios/apps/ContactsApp\\n\"\r\n[ERROR][2024-06-04 14:17:19] .../vim/lsp/rpc.lua:770\t\"rpc\"\t\"/usr/bin/sourcekit-lsp\"\t\"stderr\"\t\"[2024-06-04 14:17:19.576] could not open compilation database for /Users/gonzalorehu/other_projects/ios/apps/ContactsApp/tools/HelloWorld/Sources/main.swift\\n\"\r\n[ERROR][2024-06-04 14:17:24] .../vim/lsp/rpc.lua:770\t\"rpc\"\t\"/usr/bin/sourcekit-lsp\"\t\"stderr\"\t\"[2024-06-04 14:17:24.029] could not open compilation database for /Users/gonzalorehu/other_projects/ios/apps/ContactsApp/tools/HelloWorld/Sources/Hello.swift\\n\"\r\n```\r\n\r\nI think this can only be solved by searching for `Package.swift` before the `xcodeproj`.",
            "created_at": "2024-06-04T19:27:06Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3191#issuecomment-2148246865",
            "id": 2148246865,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191",
            "node_id": "IC_kwDODTQC186AC6VR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148246865/reactions"
            },
            "updated_at": "2024-06-04T19:27:06Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148246865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/25568998?v=4",
                "events_url": "https://api.github.com/users/dirtyhabits97/events{/privacy}",
                "followers_url": "https://api.github.com/users/dirtyhabits97/followers",
                "following_url": "https://api.github.com/users/dirtyhabits97/following{/other_user}",
                "gists_url": "https://api.github.com/users/dirtyhabits97/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dirtyhabits97",
                "id": 25568998,
                "login": "dirtyhabits97",
                "node_id": "MDQ6VXNlcjI1NTY4OTk4",
                "organizations_url": "https://api.github.com/users/dirtyhabits97/orgs",
                "received_events_url": "https://api.github.com/users/dirtyhabits97/received_events",
                "repos_url": "https://api.github.com/users/dirtyhabits97/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dirtyhabits97/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dirtyhabits97/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dirtyhabits97"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This is weird because I checked the code and it looks like it stops searching for `root_pattern` once it hits `cwd`. But I just quickly checked the code and it is quite nested so maybe I missed something. If `root_pattern` doesn't go below cwd, it would cover both cases, because `xcodeproj` would not be found in your example.\r\n\r\nOn the other hand, maybe some people navigate to random folder and open a file there, it would break LSP then. So it looks like there is no perfect solution if the user has a freedom to set `cwd`.",
            "created_at": "2024-06-04T19:34:24Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3191#issuecomment-2148261860",
            "id": 2148261860,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191",
            "node_id": "IC_kwDODTQC186AC9_k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148261860/reactions"
            },
            "updated_at": "2024-06-04T19:36:08Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148261860",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3128467?v=4",
                "events_url": "https://api.github.com/users/wojciech-kulik/events{/privacy}",
                "followers_url": "https://api.github.com/users/wojciech-kulik/followers",
                "following_url": "https://api.github.com/users/wojciech-kulik/following{/other_user}",
                "gists_url": "https://api.github.com/users/wojciech-kulik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wojciech-kulik",
                "id": 3128467,
                "login": "wojciech-kulik",
                "node_id": "MDQ6VXNlcjMxMjg0Njc=",
                "organizations_url": "https://api.github.com/users/wojciech-kulik/orgs",
                "received_events_url": "https://api.github.com/users/wojciech-kulik/received_events",
                "repos_url": "https://api.github.com/users/wojciech-kulik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wojciech-kulik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wojciech-kulik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wojciech-kulik"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "From what I understand this is what is happening:\r\n```\r\ncwd = ./tools/my-command-line-tool/\r\n\r\nsearch for *.xcodeproj\r\nlooking at: ./tools/my-command-line-tool\r\nlooking at: ./tools\r\nlooking at: ./\r\n\r\n- Found *.xcodeproj at / \r\n```\r\nIt finds the *.xcodeproj in a parent directory and doesn't need to search for `Package.swift`. What we need is a bread-first-search I believe, where we check for `*.xcodeproj`, `*.xcworkspace` and `Package.swift` at every level.",
            "created_at": "2024-06-04T19:47:12Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3191#issuecomment-2148300349",
            "id": 2148300349,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191",
            "node_id": "IC_kwDODTQC186ADHY9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148300349/reactions"
            },
            "updated_at": "2024-06-04T19:47:12Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148300349",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/25568998?v=4",
                "events_url": "https://api.github.com/users/dirtyhabits97/events{/privacy}",
                "followers_url": "https://api.github.com/users/dirtyhabits97/followers",
                "following_url": "https://api.github.com/users/dirtyhabits97/following{/other_user}",
                "gists_url": "https://api.github.com/users/dirtyhabits97/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dirtyhabits97",
                "id": 25568998,
                "login": "dirtyhabits97",
                "node_id": "MDQ6VXNlcjI1NTY4OTk4",
                "organizations_url": "https://api.github.com/users/dirtyhabits97/orgs",
                "received_events_url": "https://api.github.com/users/dirtyhabits97/received_events",
                "repos_url": "https://api.github.com/users/dirtyhabits97/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dirtyhabits97/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dirtyhabits97/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dirtyhabits97"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yeah, probably, but it would be very slow as it happens for every file. Going straight down is much faster, because usually you will have only a few levels. \r\n\r\nFor now, I think we can go with your solution as it resolves your issue and shouldn't break anything while working with `xcodeproj`.\r\n",
            "created_at": "2024-06-04T19:56:36Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3191#issuecomment-2148314742",
            "id": 2148314742,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191",
            "node_id": "IC_kwDODTQC186ADK52",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148314742/reactions"
            },
            "updated_at": "2024-06-04T19:56:36Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2148314742",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3128467?v=4",
                "events_url": "https://api.github.com/users/wojciech-kulik/events{/privacy}",
                "followers_url": "https://api.github.com/users/wojciech-kulik/followers",
                "following_url": "https://api.github.com/users/wojciech-kulik/following{/other_user}",
                "gists_url": "https://api.github.com/users/wojciech-kulik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wojciech-kulik",
                "id": 3128467,
                "login": "wojciech-kulik",
                "node_id": "MDQ6VXNlcjMxMjg0Njc=",
                "organizations_url": "https://api.github.com/users/wojciech-kulik/orgs",
                "received_events_url": "https://api.github.com/users/wojciech-kulik/received_events",
                "repos_url": "https://api.github.com/users/wojciech-kulik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wojciech-kulik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wojciech-kulik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wojciech-kulik"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191/comments",
    "created_at": "2024-06-04T17:15:22Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3191",
    "id": 2334010271,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC186LHiuf",
    "number": 3191,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191/timeline",
    "title": "sourcekit-lsp in monorepos",
    "updated_at": "2024-06-05T06:59:44Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3191",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/25568998?v=4",
        "events_url": "https://api.github.com/users/dirtyhabits97/events{/privacy}",
        "followers_url": "https://api.github.com/users/dirtyhabits97/followers",
        "following_url": "https://api.github.com/users/dirtyhabits97/following{/other_user}",
        "gists_url": "https://api.github.com/users/dirtyhabits97/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dirtyhabits97",
        "id": 25568998,
        "login": "dirtyhabits97",
        "node_id": "MDQ6VXNlcjI1NTY4OTk4",
        "organizations_url": "https://api.github.com/users/dirtyhabits97/orgs",
        "received_events_url": "https://api.github.com/users/dirtyhabits97/received_events",
        "repos_url": "https://api.github.com/users/dirtyhabits97/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dirtyhabits97/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dirtyhabits97/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dirtyhabits97"
    }
}