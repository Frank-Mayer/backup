{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I'm trying to figure out why `UpdateRemotePlugins` is not finding any plugins. I hacked in some printf debugging into `runtime/autoload/remote/host.vim` and it seems like when `function! s:RegistrationCommands` calls `rpcrequest(channel, 'specs', path)` it doesn't seem to come back with any specs.\r\n\r\n```\r\npaths: ['C:/Users/<user>/AppData/Local/nvim/rplugin/python3/__pycache__',\r\n'C:/Users/<user>/AppData/Local/nvim/rplugin/python3/example.py',\r\n'C:/Users/<user>/AppData/Local/nvim/rplugin/python3/limit.py']\r\nno spec found: 0 \r\nno spec found: 0 \r\nno spec found: 0 \r\nremote/host: python3 host registered plugins [] \r\nremote/host: generated rplugin manifest: C:\\Users\\<user>\\AppData\\Local\\nvim-data/rplugin.vim \r\n```\r\n\r\n- `example.py` is the example from the pynvim docs\r\n- `limit.py` is the example from the neovim docs on remote plugins\r\n\r\n### Modified function for my printf debug\r\n```vim\r\nfunction! s:RegistrationCommands(host) abort\r\n  \" Register a temporary host clone for discovering specs\r\n  let host_id = a:host.'-registration-clone'\r\n  call remote#host#RegisterClone(host_id, a:host)\r\n  let pattern = s:plugin_patterns[a:host]\r\n  let paths = nvim_get_runtime_file('rplugin/'.a:host.'/'.pattern, 1)\r\n  let paths = map(paths, 'tr(resolve(v:val),\"\\\\\",\"/\")') \" Normalize slashes #4795\r\n  let paths = uniq(sort(paths))\r\n  if empty(paths)\r\n    return []\r\n  endif\r\n\r\n  for path in paths\r\n    call remote#host#RegisterPlugin(host_id, path, [])\r\n  endfor\r\n  let channel = remote#host#Require(host_id)\r\n  let lines = []\r\n  let registered = []\r\n  echomsg printf(\"paths: %s\", paths)\r\n  for path in paths\r\n    unlet! specs\r\n    let specs = rpcrequest(channel, 'specs', path)\r\n    if type(specs) != type([])\r\n      \" host didn't return a spec list, indicates a failure while loading a\r\n      \" plugin\r\n      echomsg printf(\"no spec found: %s\", specs)\r\n      continue\r\n    endif\r\n    echomsg printf(\"found spec: %s\", specs)\r\n    call add(lines, \"call remote#host#RegisterPlugin('\".a:host\r\n          \\ .\"', '\".path.\"', [\")\r\n    for spec in specs\r\n      call add(lines, \"      \\\\ \".string(spec).\",\")\r\n    endfor\r\n    call add(lines, \"     \\\\ ])\")\r\n    call add(registered, path)\r\n  endfor\r\n  echomsg printf(\"remote/host: %s host registered plugins %s\",\r\n        \\ a:host, string(map(registered, \"fnamemodify(v:val, ':t')\")))\r\n\r\n  \" Delete the temporary host clone\r\n  call jobstop(s:hosts[host_id].channel)\r\n  call remove(s:hosts, host_id)\r\n  call remove(s:plugins_for_host, host_id)\r\n  return lines\r\nendfunction\r\n```\r\n\r\n### Neovim version\r\n```\r\n% nvim --version\r\nNVIM v0.10.0-dev-2830+g541c2d381\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.1710088188\r\n```\r\n\r\n### OS\r\nWindows 11 Pro",
    "closed_at": "2024-04-14T14:00:26Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I did some digging with adding some log spam and I think the issue is that we have a mix of windows path separators and posix path separators.\r\n\r\n```\r\n2024-04-13 08:52:57,652 [INFO @ host.py:start:82] 27388 - Start host ['C:/Users/<user>/AppData/Local/nvim/rplugin/python3/example.py', 'C:/Users/jtebokkel/AppData/Local/nvim/rplugin/python3/limit.py']\r\n2024-04-13 08:52:57,652 [DEBUG @ session.py:run:170] 27388 - Checking if we have setup callback...\r\n2024-04-13 08:52:57,652 [DEBUG @ session.py:run:172] 27388 - Starting greenlet for on_setup\r\n2024-04-13 08:52:57,653 [INFO @ host.py:_discover_functions:232] 27388 - Discovering functions... C:\\Users\\<user>\\AppData\\Local\\nvim\\rplugin\\python3\\example.py\r\n2024-04-13 08:52:57,653 [INFO @ host.py:_discover_functions:237] 27388 - discover function: <function TestPlugin.on_bufenter at 0x000001F5F6406980>\r\n2024-04-13 08:52:57,654 [INFO @ host.py:_discover_functions:268] 27388 - <function TestPlugin.on_bufenter at 0x000001F5F6406980> has spec: {'type': 'autocmd', 'name': 'BufEnter', 'sync': True, 'opts': {'pattern': '*.py', 'eval': 'expand(\"<afile>\")'}}\r\n2024-04-13 08:52:57,654 [INFO @ host.py:_discover_functions:237] 27388 - discover function: <function TestPlugin.testcommand at 0x000001F5F64068E0>\r\n2024-04-13 08:52:57,654 [INFO @ host.py:_discover_functions:268] 27388 - <function TestPlugin.testcommand at 0x000001F5F64068E0> has spec: {'type': 'command', 'name': 'TestCommand', 'sync': False, 'opts': {'range': '', 'nargs': '*'}}\r\n2024-04-13 08:52:57,654 [INFO @ host.py:_discover_functions:237] 27388 - discover function: <function TestPlugin.testfunction at 0x000001F5F6406840>\r\n2024-04-13 08:52:57,654 [INFO @ host.py:_discover_functions:268] 27388 - <function TestPlugin.testfunction at 0x000001F5F6406840> has spec: {'type': 'function', 'name': 'TestFunction', 'sync': True, 'opts': {}}\r\n2024-04-13 08:52:57,654 [INFO @ host.py:_discover_functions:274] 27388 - specs collected: [{'type': 'autocmd', 'name': 'BufEnter', 'sync': True, 'opts': {'pattern': '*.py', 'eval': 'expand(\"<afile>\")'}}, {'type': 'command', 'name': 'TestCommand', 'sync': False, 'opts': {'range': '', 'nargs': '*'}}, {'type': 'function', 'name': 'TestFunction', 'sync': True, 'opts': {}}]\r\n2024-04-13 08:52:57,654 [INFO @ host.py:_discover_functions:277] 27388 - self._specs: {'C:\\\\Users\\\\<user>\\\\AppData\\\\Local\\\\nvim\\\\rplugin\\\\python3\\\\example.py': [{'type': 'autocmd', 'name': 'BufEnter', 'sync': True, 'opts': {'pattern': '*.py', 'eval': 'expand(\"<afile>\")'}}, {'type': 'command', 'name': 'TestCommand', 'sync': False, 'opts': {'range': '', 'nargs': '*'}}, {'type': 'function', 'name': 'TestFunction', 'sync': True, 'opts': {}}]}\r\n\r\n```\r\n\r\n### added one more debug log and confirm issue\r\n```\r\n2024-04-13 09:06:09,989 [INFO @ host.py:_on_specs_request:287] 34876 - on_specs_request path: 'C:/Users/<user>/AppData/Local/nvim/rplugin/python3/example.py'\r\n```\r\n\r\nwe are adding the specs with `path = os.path.normpath(path)` and looking them up with no change in path.\r\n\r\nThis was introduced in f24459755da9e42ec3284fe80c7241ee05fa38ae",
            "created_at": "2024-04-13T16:14:07Z",
            "html_url": "https://github.com/neovim/pynvim/issues/564#issuecomment-2053690891",
            "id": 2053690891,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/564",
            "node_id": "IC_kwDOASpKTs56aNYL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/2053690891/reactions"
            },
            "updated_at": "2024-04-13T16:16:28Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/2053690891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/90219?v=4",
                "events_url": "https://api.github.com/users/tanj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tanj/followers",
                "following_url": "https://api.github.com/users/tanj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tanj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tanj",
                "id": 90219,
                "login": "tanj",
                "node_id": "MDQ6VXNlcjkwMjE5",
                "organizations_url": "https://api.github.com/users/tanj/orgs",
                "received_events_url": "https://api.github.com/users/tanj/received_events",
                "repos_url": "https://api.github.com/users/tanj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tanj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tanj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tanj"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/564/comments",
    "created_at": "2024-04-10T04:16:44Z",
    "events_url": "https://api.github.com/repos/neovim/pynvim/issues/564/events",
    "html_url": "https://github.com/neovim/pynvim/issues/564",
    "id": 2234723182,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/564/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOASpKTs6FMytu",
    "number": 564,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/pynvim/issues/564/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/pynvim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/pynvim/issues/564/timeline",
    "title": "UpdateRemotePlugins not finding any specs",
    "updated_at": "2024-04-14T14:00:26Z",
    "url": "https://api.github.com/repos/neovim/pynvim/issues/564",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/90219?v=4",
        "events_url": "https://api.github.com/users/tanj/events{/privacy}",
        "followers_url": "https://api.github.com/users/tanj/followers",
        "following_url": "https://api.github.com/users/tanj/following{/other_user}",
        "gists_url": "https://api.github.com/users/tanj/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tanj",
        "id": 90219,
        "login": "tanj",
        "node_id": "MDQ6VXNlcjkwMjE5",
        "organizations_url": "https://api.github.com/users/tanj/orgs",
        "received_events_url": "https://api.github.com/users/tanj/received_events",
        "repos_url": "https://api.github.com/users/tanj/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tanj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tanj/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tanj"
    }
}