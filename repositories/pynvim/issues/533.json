{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I've got a jupyter notebook, from which I want to control an instance of neovim. Following the instructions in [the pynvim repo][1], I can setup neovim to listen like so:\r\n```sh\r\nNVIM_LISTEN_ADDRESS=/tmp/nvim nvim\r\n```\r\nand then I can control that instance of neovim from a regular (non-notebook) python session like so:\r\n\r\n```py\r\nfrom pynvim import attach\r\nnvim = attach('socket', path='/tmp/nvim')\r\nnvim.command('vsplit')\r\n```\r\nThe above all works fine from a regular python session (`python3` or `ipython`) but it doesn't work from a jupyter notebook. Trying to run the following cell:\r\n\r\n```py\r\nfrom pynvim import attach\r\nnvim = attach('socket', path='/tmp/nvim')\r\n```\r\nResults in the following error:\r\n```\r\n RuntimeError: Cannot run the event loop while another loop is running \r\n\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\nInput In [9], in <cell line: 3>()\r\n      1 # %pip install pynvim\r\n      2 from pynvim import attach\r\n----> 3 nvim = attach('socket', path='/tmp/nvim')\r\n\r\nFile ~/Library/Python/3.10/lib/python/site-packages/pynvim/__init__.py:111, in attach(session_type, address, port, path, argv, decode)\r\n     80 def attach(session_type, address=None, port=None,\r\n     81            path=None, argv=None, decode=None):\r\n     82     \"\"\"Provide a nicer interface to create python api sessions.\r\n     83 \r\n     84     Previous machinery to create python api sessions is still there. This only\r\n   (...)\r\n    108 \r\n    109     \"\"\"\r\n    110     session = (tcp_session(address, port) if session_type == 'tcp' else\r\n--> 111                socket_session(path) if session_type == 'socket' else\r\n    112                stdio_session() if session_type == 'stdio' else\r\n    113                child_session(argv) if session_type == 'child' else\r\n    114                None)\r\n    116     if not session:\r\n    117         raise Exception('Unknown session type \"%s\"' % session_type)\r\n\r\nFile ~/Library/Python/3.10/lib/python/site-packages/pynvim/msgpack_rpc/__init__.py:35, in socket_session(path)\r\n     33 def socket_session(path):\r\n     34     \"\"\"Create a msgpack-rpc session from a unix domain socket.\"\"\"\r\n---> 35     return session('socket', path)\r\n\r\nFile ~/Library/Python/3.10/lib/python/site-packages/pynvim/msgpack_rpc/__init__.py:19, in session(transport_type, *args, **kwargs)\r\n     18 def session(transport_type='stdio', *args, **kwargs):\r\n---> 19     loop = EventLoop(transport_type, *args, **kwargs)\r\n     20     msgpack_stream = MsgpackStream(loop)\r\n     21     async_session = AsyncSession(msgpack_stream)\r\n\r\nFile ~/Library/Python/3.10/lib/python/site-packages/pynvim/msgpack_rpc/event_loop/base.py:93, in BaseEventLoop.__init__(self, transport_type, *args)\r\n     91 except Exception as e:\r\n     92     self.close()\r\n---> 93     raise e\r\n     94 self._start_reading()\r\n\r\nFile ~/Library/Python/3.10/lib/python/site-packages/pynvim/msgpack_rpc/event_loop/base.py:90, in BaseEventLoop.__init__(self, transport_type, *args)\r\n     88 self._init()\r\n     89 try:\r\n---> 90     getattr(self, '_connect_{}'.format(transport_type))(*args)\r\n     91 except Exception as e:\r\n     92     self.close()\r\n\r\nFile ~/Library/Python/3.10/lib/python/site-packages/pynvim/msgpack_rpc/event_loop/asyncio.py:96, in AsyncioEventLoop._connect_socket(self, path)\r\n     94 else:\r\n     95     coroutine = self._loop.create_unix_connection(self._fact, path)\r\n---> 96 self._loop.run_until_complete(coroutine)\r\n\r\nFile /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/base_events.py:622, in BaseEventLoop.run_until_complete(self, future)\r\n    611 \"\"\"Run until the Future is done.\r\n    612 \r\n    613 If the argument is a coroutine, it is wrapped in a Task.\r\n   (...)\r\n    619 Return the Future's result, or raise its exception.\r\n    620 \"\"\"\r\n    621 self._check_closed()\r\n--> 622 self._check_running()\r\n    624 new_task = not futures.isfuture(future)\r\n    625 future = tasks.ensure_future(future, loop=self)\r\n\r\nFile /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/base_events.py:584, in BaseEventLoop._check_running(self)\r\n    582     raise RuntimeError('This event loop is already running')\r\n    583 if events._get_running_loop() is not None:\r\n--> 584     raise RuntimeError(\r\n    585         'Cannot run the event loop while another loop is running')\r\n\r\nRuntimeError: Cannot run the event loop while another loop is running\r\n```\r\n\r\nWhich looks like both jupyter and pynvim are trying to run async loops at the same time. I'm not sure how to get around the issue though.\r\n\r\nHow can I control neovim from a python jupyter notebook?\r\n\r\nI'm running on a Mac, Python 3.11.3, IPython  version 8.4.0, ipykernel  version 6.15.1, pynvim version 0.4.3\r\n\r\n  [1]: https://github.com/neovim/pynvim#usage-from-the-python-repl",
    "closed_at": "2023-09-15T10:39:48Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "GH doesn't support uploading ipynb files, so here's the raw text of a minimal Jupyter notebook to reproduce the issue:\r\n\r\n\r\n<details>\r\n<summary>Expand me for the notebook</summary>\r\n\r\n```\r\n{\r\n \"cells\": [\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 5,\r\n   \"id\": \"5636335d\",\r\n   \"metadata\": {\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2023-09-15T10:31:53.742817Z\",\r\n     \"start_time\": \"2023-09-15T10:31:42.902843Z\"\r\n    }\r\n   },\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Requirement already satisfied: pynvim in /Users/brk/Library/Python/3.10/lib/python/site-packages (0.4.3)\\n\",\r\n      \"Requirement already satisfied: msgpack>=0.5.0 in /Users/brk/Library/Python/3.10/lib/python/site-packages (from pynvim) (1.0.5)\\n\",\r\n      \"Requirement already satisfied: greenlet in /Users/brk/Library/Python/3.10/lib/python/site-packages (from pynvim) (2.0.2)\\n\",\r\n      \"Note: you may need to restart the kernel to use updated packages.\\n\",\r\n      \"!Make sure you start neovim listening with: `NVIM_LISTEN_ADDRESS=/tmp/nvim nvim`. Press any key to continue\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"ename\": \"RuntimeError\",\r\n     \"evalue\": \"Cannot run the event loop while another loop is running\",\r\n     \"output_type\": \"error\",\r\n     \"traceback\": [\r\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\r\n      \"\\u001b[0;31mRuntimeError\\u001b[0m                              Traceback (most recent call last)\",\r\n      \"Input \\u001b[0;32mIn [5]\\u001b[0m, in \\u001b[0;36m<cell line: 4>\\u001b[0;34m()\\u001b[0m\\n\\u001b[1;32m      2\\u001b[0m \\u001b[38;5;28;01mfrom\\u001b[39;00m \\u001b[38;5;21;01mpynvim\\u001b[39;00m \\u001b[38;5;28;01mimport\\u001b[39;00m attach\\n\\u001b[1;32m      3\\u001b[0m blocker \\u001b[38;5;241m=\\u001b[39m \\u001b[38;5;28minput\\u001b[39m(\\u001b[38;5;124m\\\"\\u001b[39m\\u001b[38;5;124m!Make sure you start neovim listening with: `NVIM_LISTEN_ADDRESS=/tmp/nvim nvim`. Press any key to continue\\u001b[39m\\u001b[38;5;124m\\\"\\u001b[39m)\\n\\u001b[0;32m----> 4\\u001b[0m nvim \\u001b[38;5;241m=\\u001b[39m \\u001b[43mattach\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[38;5;124;43m'\\u001b[39;49m\\u001b[38;5;124;43msocket\\u001b[39;49m\\u001b[38;5;124;43m'\\u001b[39;49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[43mpath\\u001b[49m\\u001b[38;5;241;43m=\\u001b[39;49m\\u001b[38;5;124;43m'\\u001b[39;49m\\u001b[38;5;124;43m/tmp/nvim\\u001b[39;49m\\u001b[38;5;124;43m'\\u001b[39;49m\\u001b[43m)\\u001b[49m\\n\\u001b[1;32m      5\\u001b[0m nvim\\u001b[38;5;241m.\\u001b[39mcommand(\\u001b[38;5;124m'\\u001b[39m\\u001b[38;5;124mvsplit\\u001b[39m\\u001b[38;5;124m'\\u001b[39m)\\n\",\r\n      \"File \\u001b[0;32m~/Library/Python/3.10/lib/python/site-packages/pynvim/__init__.py:111\\u001b[0m, in \\u001b[0;36mattach\\u001b[0;34m(session_type, address, port, path, argv, decode)\\u001b[0m\\n\\u001b[1;32m     80\\u001b[0m \\u001b[38;5;28;01mdef\\u001b[39;00m \\u001b[38;5;21mattach\\u001b[39m(session_type, address\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;28;01mNone\\u001b[39;00m, port\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;28;01mNone\\u001b[39;00m,\\n\\u001b[1;32m     81\\u001b[0m            path\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;28;01mNone\\u001b[39;00m, argv\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;28;01mNone\\u001b[39;00m, decode\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;28;01mNone\\u001b[39;00m):\\n\\u001b[1;32m     82\\u001b[0m \\u001b[38;5;250m    \\u001b[39m\\u001b[38;5;124;03m\\\"\\\"\\\"Provide a nicer interface to create python api sessions.\\u001b[39;00m\\n\\u001b[1;32m     83\\u001b[0m \\n\\u001b[1;32m     84\\u001b[0m \\u001b[38;5;124;03m    Previous machinery to create python api sessions is still there. This only\\u001b[39;00m\\n\\u001b[0;32m   (...)\\u001b[0m\\n\\u001b[1;32m    108\\u001b[0m \\n\\u001b[1;32m    109\\u001b[0m \\u001b[38;5;124;03m    \\\"\\\"\\\"\\u001b[39;00m\\n\\u001b[1;32m    110\\u001b[0m     session \\u001b[38;5;241m=\\u001b[39m (tcp_session(address, port) \\u001b[38;5;28;01mif\\u001b[39;00m session_type \\u001b[38;5;241m==\\u001b[39m \\u001b[38;5;124m'\\u001b[39m\\u001b[38;5;124mtcp\\u001b[39m\\u001b[38;5;124m'\\u001b[39m \\u001b[38;5;28;01melse\\u001b[39;00m\\n\\u001b[0;32m--> 111\\u001b[0m                \\u001b[43msocket_session\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[43mpath\\u001b[49m\\u001b[43m)\\u001b[49m \\u001b[38;5;28;01mif\\u001b[39;00m session_type \\u001b[38;5;241m==\\u001b[39m \\u001b[38;5;124m'\\u001b[39m\\u001b[38;5;124msocket\\u001b[39m\\u001b[38;5;124m'\\u001b[39m \\u001b[38;5;28;01melse\\u001b[39;00m\\n\\u001b[1;32m    112\\u001b[0m                stdio_session() \\u001b[38;5;28;01mif\\u001b[39;00m session_type \\u001b[38;5;241m==\\u001b[39m \\u001b[38;5;124m'\\u001b[39m\\u001b[38;5;124mstdio\\u001b[39m\\u001b[38;5;124m'\\u001b[39m \\u001b[38;5;28;01melse\\u001b[39;00m\\n\\u001b[1;32m    113\\u001b[0m                child_session(argv) \\u001b[38;5;28;01mif\\u001b[39;00m session_type \\u001b[38;5;241m==\\u001b[39m \\u001b[38;5;124m'\\u001b[39m\\u001b[38;5;124mchild\\u001b[39m\\u001b[38;5;124m'\\u001b[39m \\u001b[38;5;28;01melse\\u001b[39;00m\\n\\u001b[1;32m    114\\u001b[0m                \\u001b[38;5;28;01mNone\\u001b[39;00m)\\n\\u001b[1;32m    116\\u001b[0m     \\u001b[38;5;28;01mif\\u001b[39;00m \\u001b[38;5;129;01mnot\\u001b[39;00m session:\\n\\u001b[1;32m    117\\u001b[0m         \\u001b[38;5;28;01mraise\\u001b[39;00m \\u001b[38;5;167;01mException\\u001b[39;00m(\\u001b[38;5;124m'\\u001b[39m\\u001b[38;5;124mUnknown session type \\u001b[39m\\u001b[38;5;124m\\\"\\u001b[39m\\u001b[38;5;132;01m%s\\u001b[39;00m\\u001b[38;5;124m\\\"\\u001b[39m\\u001b[38;5;124m'\\u001b[39m \\u001b[38;5;241m%\\u001b[39m session_type)\\n\",\r\n      \"File \\u001b[0;32m~/Library/Python/3.10/lib/python/site-packages/pynvim/msgpack_rpc/__init__.py:35\\u001b[0m, in \\u001b[0;36msocket_session\\u001b[0;34m(path)\\u001b[0m\\n\\u001b[1;32m     33\\u001b[0m \\u001b[38;5;28;01mdef\\u001b[39;00m \\u001b[38;5;21msocket_session\\u001b[39m(path):\\n\\u001b[1;32m     34\\u001b[0m \\u001b[38;5;250m    \\u001b[39m\\u001b[38;5;124;03m\\\"\\\"\\\"Create a msgpack-rpc session from a unix domain socket.\\\"\\\"\\\"\\u001b[39;00m\\n\\u001b[0;32m---> 35\\u001b[0m     \\u001b[38;5;28;01mreturn\\u001b[39;00m \\u001b[43msession\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[38;5;124;43m'\\u001b[39;49m\\u001b[38;5;124;43msocket\\u001b[39;49m\\u001b[38;5;124;43m'\\u001b[39;49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[43mpath\\u001b[49m\\u001b[43m)\\u001b[49m\\n\",\r\n      \"File \\u001b[0;32m~/Library/Python/3.10/lib/python/site-packages/pynvim/msgpack_rpc/__init__.py:19\\u001b[0m, in \\u001b[0;36msession\\u001b[0;34m(transport_type, *args, **kwargs)\\u001b[0m\\n\\u001b[1;32m     18\\u001b[0m \\u001b[38;5;28;01mdef\\u001b[39;00m \\u001b[38;5;21msession\\u001b[39m(transport_type\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;124m'\\u001b[39m\\u001b[38;5;124mstdio\\u001b[39m\\u001b[38;5;124m'\\u001b[39m, \\u001b[38;5;241m*\\u001b[39margs, \\u001b[38;5;241m*\\u001b[39m\\u001b[38;5;241m*\\u001b[39mkwargs):\\n\\u001b[0;32m---> 19\\u001b[0m     loop \\u001b[38;5;241m=\\u001b[39m \\u001b[43mEventLoop\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[43mtransport_type\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43margs\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43mkwargs\\u001b[49m\\u001b[43m)\\u001b[49m\\n\\u001b[1;32m     20\\u001b[0m     msgpack_stream \\u001b[38;5;241m=\\u001b[39m MsgpackStream(loop)\\n\\u001b[1;32m     21\\u001b[0m     async_session \\u001b[38;5;241m=\\u001b[39m AsyncSession(msgpack_stream)\\n\",\r\n      \"File \\u001b[0;32m~/Library/Python/3.10/lib/python/site-packages/pynvim/msgpack_rpc/event_loop/base.py:93\\u001b[0m, in \\u001b[0;36mBaseEventLoop.__init__\\u001b[0;34m(self, transport_type, *args)\\u001b[0m\\n\\u001b[1;32m     91\\u001b[0m \\u001b[38;5;28;01mexcept\\u001b[39;00m \\u001b[38;5;167;01mException\\u001b[39;00m \\u001b[38;5;28;01mas\\u001b[39;00m e:\\n\\u001b[1;32m     92\\u001b[0m     \\u001b[38;5;28mself\\u001b[39m\\u001b[38;5;241m.\\u001b[39mclose()\\n\\u001b[0;32m---> 93\\u001b[0m     \\u001b[38;5;28;01mraise\\u001b[39;00m e\\n\\u001b[1;32m     94\\u001b[0m \\u001b[38;5;28mself\\u001b[39m\\u001b[38;5;241m.\\u001b[39m_start_reading()\\n\",\r\n      \"File \\u001b[0;32m~/Library/Python/3.10/lib/python/site-packages/pynvim/msgpack_rpc/event_loop/base.py:90\\u001b[0m, in \\u001b[0;36mBaseEventLoop.__init__\\u001b[0;34m(self, transport_type, *args)\\u001b[0m\\n\\u001b[1;32m     88\\u001b[0m \\u001b[38;5;28mself\\u001b[39m\\u001b[38;5;241m.\\u001b[39m_init()\\n\\u001b[1;32m     89\\u001b[0m \\u001b[38;5;28;01mtry\\u001b[39;00m:\\n\\u001b[0;32m---> 90\\u001b[0m     \\u001b[38;5;28;43mgetattr\\u001b[39;49m\\u001b[43m(\\u001b[49m\\u001b[38;5;28;43mself\\u001b[39;49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;124;43m'\\u001b[39;49m\\u001b[38;5;124;43m_connect_\\u001b[39;49m\\u001b[38;5;132;43;01m{}\\u001b[39;49;00m\\u001b[38;5;124;43m'\\u001b[39;49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43mformat\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[43mtransport_type\\u001b[49m\\u001b[43m)\\u001b[49m\\u001b[43m)\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43margs\\u001b[49m\\u001b[43m)\\u001b[49m\\n\\u001b[1;32m     91\\u001b[0m \\u001b[38;5;28;01mexcept\\u001b[39;00m \\u001b[38;5;167;01mException\\u001b[39;00m \\u001b[38;5;28;01mas\\u001b[39;00m e:\\n\\u001b[1;32m     92\\u001b[0m     \\u001b[38;5;28mself\\u001b[39m\\u001b[38;5;241m.\\u001b[39mclose()\\n\",\r\n      \"File \\u001b[0;32m~/Library/Python/3.10/lib/python/site-packages/pynvim/msgpack_rpc/event_loop/asyncio.py:96\\u001b[0m, in \\u001b[0;36mAsyncioEventLoop._connect_socket\\u001b[0;34m(self, path)\\u001b[0m\\n\\u001b[1;32m     94\\u001b[0m \\u001b[38;5;28;01melse\\u001b[39;00m:\\n\\u001b[1;32m     95\\u001b[0m     coroutine \\u001b[38;5;241m=\\u001b[39m \\u001b[38;5;28mself\\u001b[39m\\u001b[38;5;241m.\\u001b[39m_loop\\u001b[38;5;241m.\\u001b[39mcreate_unix_connection(\\u001b[38;5;28mself\\u001b[39m\\u001b[38;5;241m.\\u001b[39m_fact, path)\\n\\u001b[0;32m---> 96\\u001b[0m \\u001b[38;5;28;43mself\\u001b[39;49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43m_loop\\u001b[49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43mrun_until_complete\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[43mcoroutine\\u001b[49m\\u001b[43m)\\u001b[49m\\n\",\r\n      \"File \\u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/base_events.py:622\\u001b[0m, in \\u001b[0;36mBaseEventLoop.run_until_complete\\u001b[0;34m(self, future)\\u001b[0m\\n\\u001b[1;32m    611\\u001b[0m \\u001b[38;5;250m\\u001b[39m\\u001b[38;5;124;03m\\\"\\\"\\\"Run until the Future is done.\\u001b[39;00m\\n\\u001b[1;32m    612\\u001b[0m \\n\\u001b[1;32m    613\\u001b[0m \\u001b[38;5;124;03mIf the argument is a coroutine, it is wrapped in a Task.\\u001b[39;00m\\n\\u001b[0;32m   (...)\\u001b[0m\\n\\u001b[1;32m    619\\u001b[0m \\u001b[38;5;124;03mReturn the Future's result, or raise its exception.\\u001b[39;00m\\n\\u001b[1;32m    620\\u001b[0m \\u001b[38;5;124;03m\\\"\\\"\\\"\\u001b[39;00m\\n\\u001b[1;32m    621\\u001b[0m \\u001b[38;5;28mself\\u001b[39m\\u001b[38;5;241m.\\u001b[39m_check_closed()\\n\\u001b[0;32m--> 622\\u001b[0m \\u001b[38;5;28;43mself\\u001b[39;49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43m_check_running\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[43m)\\u001b[49m\\n\\u001b[1;32m    624\\u001b[0m new_task \\u001b[38;5;241m=\\u001b[39m \\u001b[38;5;129;01mnot\\u001b[39;00m futures\\u001b[38;5;241m.\\u001b[39misfuture(future)\\n\\u001b[1;32m    625\\u001b[0m future \\u001b[38;5;241m=\\u001b[39m tasks\\u001b[38;5;241m.\\u001b[39mensure_future(future, loop\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;28mself\\u001b[39m)\\n\",\r\n      \"File \\u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/base_events.py:584\\u001b[0m, in \\u001b[0;36mBaseEventLoop._check_running\\u001b[0;34m(self)\\u001b[0m\\n\\u001b[1;32m    582\\u001b[0m     \\u001b[38;5;28;01mraise\\u001b[39;00m \\u001b[38;5;167;01mRuntimeError\\u001b[39;00m(\\u001b[38;5;124m'\\u001b[39m\\u001b[38;5;124mThis event loop is already running\\u001b[39m\\u001b[38;5;124m'\\u001b[39m)\\n\\u001b[1;32m    583\\u001b[0m \\u001b[38;5;28;01mif\\u001b[39;00m events\\u001b[38;5;241m.\\u001b[39m_get_running_loop() \\u001b[38;5;129;01mis\\u001b[39;00m \\u001b[38;5;129;01mnot\\u001b[39;00m \\u001b[38;5;28;01mNone\\u001b[39;00m:\\n\\u001b[0;32m--> 584\\u001b[0m     \\u001b[38;5;28;01mraise\\u001b[39;00m \\u001b[38;5;167;01mRuntimeError\\u001b[39;00m(\\n\\u001b[1;32m    585\\u001b[0m         \\u001b[38;5;124m'\\u001b[39m\\u001b[38;5;124mCannot run the event loop while another loop is running\\u001b[39m\\u001b[38;5;124m'\\u001b[39m)\\n\",\r\n      \"\\u001b[0;31mRuntimeError\\u001b[0m: Cannot run the event loop while another loop is running\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"%pip install pynvim\\n\",\r\n    \"from pynvim import attach\\n\",\r\n    \"blocker = input(\\\"!Make sure you start neovim listening with: `NVIM_LISTEN_ADDRESS=/tmp/nvim nvim`. Press any key to continue\\\")\\n\",\r\n    \"nvim = attach('socket', path='/tmp/nvim')\\n\",\r\n    \"nvim.command('vsplit')\"\r\n   ]\r\n  }\r\n ],\r\n \"metadata\": {\r\n  \"kernelspec\": {\r\n   \"display_name\": \"Python 3 (ipykernel)\",\r\n   \"language\": \"python\",\r\n   \"name\": \"python3\"\r\n  },\r\n  \"language_info\": {\r\n   \"codemirror_mode\": {\r\n    \"name\": \"ipython\",\r\n    \"version\": 3\r\n   },\r\n   \"file_extension\": \".py\",\r\n   \"mimetype\": \"text/x-python\",\r\n   \"name\": \"python\",\r\n   \"nbconvert_exporter\": \"python\",\r\n   \"pygments_lexer\": \"ipython3\",\r\n   \"version\": \"3.10.5\"\r\n  },\r\n  \"toc\": {\r\n   \"base_numbering\": 1,\r\n   \"nav_menu\": {},\r\n   \"number_sections\": true,\r\n   \"sideBar\": true,\r\n   \"skip_h1_title\": false,\r\n   \"title_cell\": \"Table of Contents\",\r\n   \"title_sidebar\": \"Contents\",\r\n   \"toc_cell\": false,\r\n   \"toc_position\": {},\r\n   \"toc_section_display\": true,\r\n   \"toc_window_display\": true\r\n  },\r\n  \"varInspector\": {\r\n   \"cols\": {\r\n    \"lenName\": 16,\r\n    \"lenType\": 16,\r\n    \"lenVar\": 40\r\n   },\r\n   \"kernels_config\": {\r\n    \"python\": {\r\n     \"delete_cmd_postfix\": \"\",\r\n     \"delete_cmd_prefix\": \"del \",\r\n     \"library\": \"var_list.py\",\r\n     \"varRefreshCmd\": \"print(var_dic_list())\"\r\n    },\r\n    \"r\": {\r\n     \"delete_cmd_postfix\": \") \",\r\n     \"delete_cmd_prefix\": \"rm(\",\r\n     \"library\": \"var_list.r\",\r\n     \"varRefreshCmd\": \"cat(var_dic_list()) \"\r\n    }\r\n   },\r\n   \"types_to_exclude\": [\r\n    \"module\",\r\n    \"function\",\r\n    \"builtin_function_or_method\",\r\n    \"instance\",\r\n    \"_Feature\"\r\n   ],\r\n   \"window_display\": false\r\n  }\r\n },\r\n \"nbformat\": 4,\r\n \"nbformat_minor\": 5\r\n}\r\n```\r\n\r\n</details>\r\n\r\n",
            "created_at": "2023-09-15T10:34:48Z",
            "html_url": "https://github.com/neovim/pynvim/issues/533#issuecomment-1721052102",
            "id": 1721052102,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/533",
            "node_id": "IC_kwDOASpKTs5mlSvG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1721052102/reactions"
            },
            "updated_at": "2023-09-15T10:34:48Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1721052102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33420535?v=4",
                "events_url": "https://api.github.com/users/beyarkay/events{/privacy}",
                "followers_url": "https://api.github.com/users/beyarkay/followers",
                "following_url": "https://api.github.com/users/beyarkay/following{/other_user}",
                "gists_url": "https://api.github.com/users/beyarkay/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/beyarkay",
                "id": 33420535,
                "login": "beyarkay",
                "node_id": "MDQ6VXNlcjMzNDIwNTM1",
                "organizations_url": "https://api.github.com/users/beyarkay/orgs",
                "received_events_url": "https://api.github.com/users/beyarkay/received_events",
                "repos_url": "https://api.github.com/users/beyarkay/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/beyarkay/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/beyarkay/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/beyarkay"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Don't have an answer to this unfortunately. Known issue: https://github.com/neovim/pynvim/issues/489\r\n\r\nPossible workaround: https://github.com/neovim/pynvim/issues/326#issuecomment-403166302",
            "created_at": "2023-09-15T10:39:48Z",
            "html_url": "https://github.com/neovim/pynvim/issues/533#issuecomment-1721057625",
            "id": 1721057625,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/533",
            "node_id": "IC_kwDOASpKTs5mlUFZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1721057625/reactions"
            },
            "updated_at": "2023-09-15T10:39:48Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1721057625",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for the swift reply",
            "created_at": "2023-09-15T10:42:52Z",
            "html_url": "https://github.com/neovim/pynvim/issues/533#issuecomment-1721061302",
            "id": 1721061302,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/533",
            "node_id": "IC_kwDOASpKTs5mlU-2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1721061302/reactions"
            },
            "updated_at": "2023-09-15T10:42:52Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1721061302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33420535?v=4",
                "events_url": "https://api.github.com/users/beyarkay/events{/privacy}",
                "followers_url": "https://api.github.com/users/beyarkay/followers",
                "following_url": "https://api.github.com/users/beyarkay/following{/other_user}",
                "gists_url": "https://api.github.com/users/beyarkay/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/beyarkay",
                "id": 33420535,
                "login": "beyarkay",
                "node_id": "MDQ6VXNlcjMzNDIwNTM1",
                "organizations_url": "https://api.github.com/users/beyarkay/orgs",
                "received_events_url": "https://api.github.com/users/beyarkay/received_events",
                "repos_url": "https://api.github.com/users/beyarkay/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/beyarkay/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/beyarkay/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/beyarkay"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "A workaround is to use [nest_asyncio](https://github.com/erdewit/nest_asyncio). It is not a perfect solution as the behavior of nested asyncio loop can be quite unintuitive and strange, but works at least minimally:\r\n\r\n```\r\n[1]: import nest_asyncio\r\n     nest_asyncio.apply()\r\n\r\n[2]: from pynvim import attach\r\n     nvim = attach('socket', path='/tmp/nvim.sock')\r\n\r\n[3]: nvim.current.buffer[:] = 'foo'\r\n```",
            "created_at": "2023-10-15T23:19:04Z",
            "html_url": "https://github.com/neovim/pynvim/issues/533#issuecomment-1763533751",
            "id": 1763533751,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/533",
            "node_id": "IC_kwDOASpKTs5pHWO3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1763533751/reactions"
            },
            "updated_at": "2023-10-15T23:19:29Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1763533751",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/533/comments",
    "created_at": "2023-09-15T10:32:45Z",
    "events_url": "https://api.github.com/repos/neovim/pynvim/issues/533/events",
    "html_url": "https://github.com/neovim/pynvim/issues/533",
    "id": 1898153287,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": null,
            "id": 97892276,
            "name": "bug",
            "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==",
            "url": "https://api.github.com/repos/neovim/pynvim/labels/bug"
        },
        {
            "color": "cccccc",
            "default": true,
            "description": null,
            "id": 97892277,
            "name": "duplicate",
            "node_id": "MDU6TGFiZWw5Nzg5MjI3Nw==",
            "url": "https://api.github.com/repos/neovim/pynvim/labels/duplicate"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/533/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOASpKTs5xI4VH",
    "number": 533,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/pynvim/issues/533/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/pynvim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/pynvim/issues/533/timeline",
    "title": "Controlling neovim from jupyter notebook: \"another loop is running\"",
    "updated_at": "2023-10-15T23:19:29Z",
    "url": "https://api.github.com/repos/neovim/pynvim/issues/533",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/33420535?v=4",
        "events_url": "https://api.github.com/users/beyarkay/events{/privacy}",
        "followers_url": "https://api.github.com/users/beyarkay/followers",
        "following_url": "https://api.github.com/users/beyarkay/following{/other_user}",
        "gists_url": "https://api.github.com/users/beyarkay/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/beyarkay",
        "id": 33420535,
        "login": "beyarkay",
        "node_id": "MDQ6VXNlcjMzNDIwNTM1",
        "organizations_url": "https://api.github.com/users/beyarkay/orgs",
        "received_events_url": "https://api.github.com/users/beyarkay/received_events",
        "repos_url": "https://api.github.com/users/beyarkay/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/beyarkay/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/beyarkay/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/beyarkay"
    }
}