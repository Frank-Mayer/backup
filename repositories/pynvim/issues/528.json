{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "As tested using a scratch build on the Fedora build system: https://koji.fedoraproject.org/koji/taskinfo?taskID=103367353\r\n\r\nI'm uploading the logs as otherwise they will get garbage collected within a couple of weeks.\r\n\r\n[build.log](https://github.com/neovim/pynvim/files/12054071/build.log)\r\n[root.log](https://github.com/neovim/pynvim/files/12054084/root.log)\r\n\r\nNote: one error - the `AssertionError` in `test_buffer` - is introduced somewhere between 0.4.3 and the current master, it also fails when building for Fedora 38 which has Python 3.11, while building 0.4.3 succeeds and building 0.4.3 with the patches for handling `imp` removal passes tests on Fedora 38 and fails with the same `test_vim` event loop issue but passes `test_buffer`.\r\n",
    "closed_at": "2023-09-23T09:47:34Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Linking this here - not worth an issue of its own: this PR fixes warnings when using pytest 6+\r\n\r\nhttps://github.com/neovim/pynvim/pull/529",
            "created_at": "2023-07-14T21:45:31Z",
            "html_url": "https://github.com/neovim/pynvim/issues/528#issuecomment-1636475805",
            "id": 1636475805,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/528",
            "node_id": "IC_kwDOASpKTs5hiqOd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1636475805/reactions"
            },
            "updated_at": "2023-07-14T21:45:31Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1636475805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85603?v=4",
                "events_url": "https://api.github.com/users/michel-slm/events{/privacy}",
                "followers_url": "https://api.github.com/users/michel-slm/followers",
                "following_url": "https://api.github.com/users/michel-slm/following{/other_user}",
                "gists_url": "https://api.github.com/users/michel-slm/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/michel-slm",
                "id": 85603,
                "login": "michel-slm",
                "node_id": "MDQ6VXNlcjg1NjAz",
                "organizations_url": "https://api.github.com/users/michel-slm/orgs",
                "received_events_url": "https://api.github.com/users/michel-slm/received_events",
                "repos_url": "https://api.github.com/users/michel-slm/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/michel-slm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/michel-slm/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/michel-slm"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "ah, the `test_buffer` issue is due to this https://github.com/neovim/pynvim/commit/82a2e14b96fbffa30caeefec6e86b668c96662eb\r\n\r\nI guess unless using neovim nightly this will not work. I wonder if we can make it conditional on neovim version",
            "created_at": "2023-07-14T21:48:49Z",
            "html_url": "https://github.com/neovim/pynvim/issues/528#issuecomment-1636478273",
            "id": 1636478273,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/528",
            "node_id": "IC_kwDOASpKTs5hiq1B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1636478273/reactions"
            },
            "updated_at": "2023-07-14T21:48:49Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1636478273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85603?v=4",
                "events_url": "https://api.github.com/users/michel-slm/events{/privacy}",
                "followers_url": "https://api.github.com/users/michel-slm/followers",
                "following_url": "https://api.github.com/users/michel-slm/following{/other_user}",
                "gists_url": "https://api.github.com/users/michel-slm/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/michel-slm",
                "id": 85603,
                "login": "michel-slm",
                "node_id": "MDQ6VXNlcjg1NjAz",
                "organizations_url": "https://api.github.com/users/michel-slm/orgs",
                "received_events_url": "https://api.github.com/users/michel-slm/received_events",
                "repos_url": "https://api.github.com/users/michel-slm/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/michel-slm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/michel-slm/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/michel-slm"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "https://github.com/neovim/pynvim/pull/531 fixes `test_buffer` by not hardcoding the global value for 'default'",
            "created_at": "2023-07-14T21:56:52Z",
            "html_url": "https://github.com/neovim/pynvim/issues/528#issuecomment-1636486386",
            "id": 1636486386,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/528",
            "node_id": "IC_kwDOASpKTs5hiszy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1636486386/reactions"
            },
            "updated_at": "2023-07-14T21:56:52Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1636486386",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85603?v=4",
                "events_url": "https://api.github.com/users/michel-slm/events{/privacy}",
                "followers_url": "https://api.github.com/users/michel-slm/followers",
                "following_url": "https://api.github.com/users/michel-slm/following{/other_user}",
                "gists_url": "https://api.github.com/users/michel-slm/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/michel-slm",
                "id": 85603,
                "login": "michel-slm",
                "node_id": "MDQ6VXNlcjg1NjAz",
                "organizations_url": "https://api.github.com/users/michel-slm/orgs",
                "received_events_url": "https://api.github.com/users/michel-slm/received_events",
                "repos_url": "https://api.github.com/users/michel-slm/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/michel-slm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/michel-slm/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/michel-slm"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "- `Event loop is closed` was also reported in https://github.com/neovim/pynvim/issues/505\r\n    - Are we using asyncio correctly?\r\n- fwiw, I notice `/usr/lib/python3.11/` in your logs but the issue mentions python 3.12?\r\n\r\nFrom your build.log file: \r\n\r\n```\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f4818b78400>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\n...\r\nerror: Bad exit status from /var/tmp/rpm-tmp.TJnuqo (%check)\r\n    Bad exit status from /var/tmp/rpm-tmp.TJnuqo (%check)\r\nRPM build errors:\r\nChild return code was: 1\r\nEXCEPTION: [Error('Command failed: \\n # /usr/bin/systemd-nspawn -q -M c739984eca5f486591a9a603529cec53 -D /var/lib/mock/f39-build-44158357-5266102/root -a -u mockbuild --capability=cap_ipc_lock --bind=/tmp/mock-resolv.6mkqabk8:/etc/resolv.conf --bind=/dev/btrfs-control --bind=/dev/mapper/control --bind=/dev/loop-control --bind=/dev/loop0 --bind=/dev/loop1 --bind=/dev/loop2 --bind=/dev/loop3 --bind=/dev/loop4 --bind=/dev/loop5 --bind=/dev/loop6 --bind=/dev/loop7 --bind=/dev/loop8 --bind=/dev/loop9 --bind=/dev/loop10 --bind=/dev/loop11 --console=pipe --setenv=TERM=vt100 --setenv=SHELL=/bin/bash --setenv=HOME=/builddir --setenv=HOSTNAME=mock --setenv=PATH=/usr/bin:/bin:/usr/sbin:/sbin --setenv=PROMPT_COMMAND=printf \"\\\\033]0;<mock-chroot>\\\\007\" --setenv=PS1=<mock-chroot> \\\\s-\\\\v\\\\$  --setenv=LANG=C.UTF-8 --resolv-conf=off bash --login -c /usr/bin/rpmbuild -bb --noclean --target noarch --nodeps /builddir/build/SPECS/python-neovim.spec\\n', 1)]\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.11/site-packages/mockbuild/trace_decorator.py\", line 93, in trace\r\n    result = func(*args, **kw)\r\n             ^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib/python3.11/site-packages/mockbuild/util.py\", line 597, in do_with_status\r\n    raise exception.Error(\"Command failed: \\n # %s\\n%s\" % (command, output), child.returncode)\r\nmockbuild.exception.Error: Command failed: \r\n # /usr/bin/systemd-nspawn -q -M c739984eca5f486591a9a603529cec53 -D /var/lib/mock/f39-build-44158357-5266102/root -a -u mockbuild --capability=cap_ipc_lock --bind=/tmp/mock-resolv.6mkqabk8:/etc/resolv.conf --bind=/dev/btrfs-control --bind=/dev/mapper/control --bind=/dev/loop-control --bind=/dev/loop0 --bind=/dev/loop1 --bind=/dev/loop2 --bind=/dev/loop3 --bind=/dev/loop4 --bind=/dev/loop5 --bind=/dev/loop6 --bind=/dev/loop7 --bind=/dev/loop8 --bind=/dev/loop9 --bind=/dev/loop10 --bind=/dev/loop11 --console=pipe --setenv=TERM=vt100 --setenv=SHELL=/bin/bash --setenv=HOME=/builddir --setenv=HOSTNAME=mock --setenv=PATH=/usr/bin:/bin:/usr/sbin:/sbin --setenv=PROMPT_COMMAND=printf \"\\033]0;<mock-chroot>\\007\" --setenv=PS1=<mock-chroot> \\s-\\v\\$  --setenv=LANG=C.UTF-8 --resolv-conf=off bash --login -c /usr/bin/rpmbuild -bb --noclean --target noarch --nodeps /builddir/build/SPECS/python-neovim.spec\r\n```",
            "created_at": "2023-07-15T11:57:44Z",
            "html_url": "https://github.com/neovim/pynvim/issues/528#issuecomment-1636746255",
            "id": 1636746255,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/528",
            "node_id": "IC_kwDOASpKTs5hjsQP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1636746255/reactions"
            },
            "updated_at": "2023-07-15T17:49:48Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1636746255",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "798dfc3fa67c566867715852edd440c6c9efe164 with Python 3.12 still fails:\r\n\r\n```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.12.0rc1, pytest-7.3.2, pluggy-1.2.0\r\ncachedir: .tox/py312/.pytest_cache\r\nrootdir: /builddir/build/BUILD/pynvim-0.4.3\r\nconfigfile: setup.cfg\r\ntestpaths: test\r\nplugins: timeout-2.1.0, asyncio-0.21.0\r\nasyncio: mode=Mode.STRICT\r\ncollected 70 items\r\ntest/test_buffer.py .................                                    [ 24%]\r\ntest/test_client_rpc.py ....                                             [ 30%]\r\ntest/test_concurrency.py ..                                              [ 32%]\r\ntest/test_decorators.py .                                                [ 34%]\r\ntest/test_events.py ....                                                 [ 40%]\r\ntest/test_host.py ....                                                   [ 45%]\r\ntest/test_logging.py .                                                   [ 47%]\r\ntest/test_tabpage.py .....                                               [ 54%]\r\ntest/test_vim.py ..................F.                                    [ 82%]\r\ntest/test_window.py ............                                         [100%]\r\n=================================== FAILURES ===================================\r\n___________________________________ test_cwd ___________________________________\r\nvim = <pynvim.api.nvim.Nvim object at 0x7f92c0ccd850>\r\ntmpdir = local('/tmp/pytest-of-mockbuild/pytest-5/test_cwd0')\r\n    def test_cwd(vim: Nvim, tmpdir: Any) -> None:\r\n>       vim.command('python3 import os')\r\ntest/test_vim.py:201: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npynvim/api/nvim.py:311: in command\r\n    return self.request('nvim_command', string, **kwargs)\r\npynvim/api/nvim.py:199: in request\r\n    res = self._session.request(name, *args, **kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nself = <pynvim.msgpack_rpc.session.Session object at 0x7f92c0cce210>\r\nmethod = 'nvim_command', args = ('python3 import os',), kwargs = {}\r\nasync_ = False\r\nv = ([0, 'Vim(python3):E319: No \"python3\" provider found. Run \":checkhealth provider\"'], None)\r\nerr = [0, 'Vim(python3):E319: No \"python3\" provider found. Run \":checkhealth provider\"']\r\nrv = None\r\n    def request(self, method: AnyStr, *args: Any, **kwargs: Any) -> Any:\r\n        \"\"\"Send a msgpack-rpc request and block until as response is received.\r\n    \r\n        If the event loop is running, this method must have been called by a\r\n        request or notification handler running on a greenlet. In that case,\r\n        send the quest and yield to the parent greenlet until a response is\r\n        available.\r\n    \r\n        When the event loop is not running, it will perform a blocking request\r\n        like this:\r\n        - Send the request\r\n        - Run the loop until the response is available\r\n        - Put requests/notifications received while waiting into a queue\r\n    \r\n        If the `async_` flag is present and True, a asynchronous notification\r\n        is sent instead. This will never block, and the return value or error\r\n        is ignored.\r\n        \"\"\"\r\n        async_ = check_async(kwargs.pop('async_', None), kwargs, False)\r\n        if async_:\r\n            self._async_session.notify(method, args)\r\n            return\r\n    \r\n        if kwargs:\r\n            raise ValueError(\"request got unsupported keyword argument(s): {}\"\r\n                             .format(', '.join(kwargs.keys())))\r\n    \r\n        if self._is_running:\r\n            v = self._yielding_request(method, args)\r\n        else:\r\n            v = self._blocking_request(method, args)\r\n        if not v:\r\n            # EOF\r\n            raise OSError('EOF')\r\n        err, rv = v\r\n        if err:\r\n            info(\"'Received error: %s\", err)\r\n>           raise self.error_wrapper(err)\r\nE           pynvim.api.common.NvimError: Vim(python3):E319: No \"python3\" provider found. Run \":checkhealth provider\"\r\npynvim/msgpack_rpc/session.py:137: NvimError\r\n------------------------------ Captured log call -------------------------------\r\nINFO     pynvim.msgpack_rpc.session:session.py:136 'Received error: [0, 'Vim(python3):E319: No \"python3\" provider found. Run \":checkhealth provider\"']\r\n=============================== warnings summary ===============================\r\ntest/test_buffer.py: 17 warnings\r\ntest/test_client_rpc.py: 4 warnings\r\ntest/test_concurrency.py: 2 warnings\r\ntest/test_events.py: 4 warnings\r\ntest/test_host.py: 4 warnings\r\ntest/test_tabpage.py: 5 warnings\r\ntest/test_vim.py: 20 warnings\r\ntest/test_window.py: 12 warnings\r\n  /usr/lib64/python3.12/asyncio/events.py:824: DeprecationWarning: 'get_child_watcher' is deprecated as of Python 3.12 and will be removed in Python 3.14.\r\n    return get_event_loop_policy().get_child_watcher()\r\ntest/test_buffer.py: 2 warnings\r\ntest/test_client_rpc.py: 1 warning\r\ntest/test_events.py: 1 warning\r\ntest/test_host.py: 1 warning\r\ntest/test_tabpage.py: 1 warning\r\ntest/test_vim.py: 3 warnings\r\ntest/test_window.py: 2 warnings\r\n  /usr/lib/python3.12/site-packages/_pytest/unraisableexception.py:78: PytestUnraisableExceptionWarning: Exception ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\n  \r\n  Traceback (most recent call last):\r\n    File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n      self.close()\r\n    File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n      proto.pipe.close()\r\n    File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n      self.write_eof()\r\n    File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n      self._loop.call_soon(self._call_connection_lost, None)\r\n    File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n      self._check_closed()\r\n    File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n      raise RuntimeError('Event loop is closed')\r\n  RuntimeError: Event loop is closed\r\n  \r\n    warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n=========================== short test summary info ============================\r\nFAILED test/test_vim.py::test_cwd - pynvim.api.common.NvimError: Vim(python3)...\r\n================== 1 failed, 69 passed, 79 warnings in 3.04s ===================\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\nRuntimeError: Event loop is closed\r\npy312: exit 1 (3.54 seconds) /builddir/build/BUILD/pynvim-0.4.3> python -m pytest pid=458\r\n  py312: FAIL code 1 (3.56=setup[0.01]+cmd[3.54] seconds)\r\n  evaluation failed :( (3.63 seconds)\r\n```",
            "created_at": "2023-09-02T18:09:37Z",
            "html_url": "https://github.com/neovim/pynvim/issues/528#issuecomment-1703903461",
            "id": 1703903461,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/528",
            "node_id": "IC_kwDOASpKTs5lj4Dl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1703903461/reactions"
            },
            "updated_at": "2023-09-02T18:09:37Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1703903461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/545480?v=4",
                "events_url": "https://api.github.com/users/cryptomilk/events{/privacy}",
                "followers_url": "https://api.github.com/users/cryptomilk/followers",
                "following_url": "https://api.github.com/users/cryptomilk/following{/other_user}",
                "gists_url": "https://api.github.com/users/cryptomilk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cryptomilk",
                "id": 545480,
                "login": "cryptomilk",
                "node_id": "MDQ6VXNlcjU0NTQ4MA==",
                "organizations_url": "https://api.github.com/users/cryptomilk/orgs",
                "received_events_url": "https://api.github.com/users/cryptomilk/received_events",
                "repos_url": "https://api.github.com/users/cryptomilk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cryptomilk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cryptomilk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cryptomilk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The actual error is \"Failed to load python3 host.\".\r\n\r\nThe reason CI fails is neovim/neovim#25316 -- unless `g:python3_host_prog` is set explicitly, python3.12 cannot be automatically detected by neovim as the python3 provider.",
            "created_at": "2023-09-23T03:42:15Z",
            "html_url": "https://github.com/neovim/pynvim/issues/528#issuecomment-1732199236",
            "id": 1732199236,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/528",
            "node_id": "IC_kwDOASpKTs5nP0NE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1732199236/reactions"
            },
            "updated_at": "2023-09-23T03:49:38Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1732199236",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/528/comments",
    "created_at": "2023-07-14T21:37:17Z",
    "events_url": "https://api.github.com/repos/neovim/pynvim/issues/528/events",
    "html_url": "https://github.com/neovim/pynvim/issues/528",
    "id": 1805610043,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": null,
            "id": 97892276,
            "name": "bug",
            "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==",
            "url": "https://api.github.com/repos/neovim/pynvim/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/528/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOASpKTs5rn2w7",
    "number": 528,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/pynvim/issues/528/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/pynvim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/pynvim/issues/528/timeline",
    "title": "Test failures: \"Event loop is closed\" with Python 3.12, Fedora Linux",
    "updated_at": "2023-09-23T09:47:34Z",
    "url": "https://api.github.com/repos/neovim/pynvim/issues/528",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/85603?v=4",
        "events_url": "https://api.github.com/users/michel-slm/events{/privacy}",
        "followers_url": "https://api.github.com/users/michel-slm/followers",
        "following_url": "https://api.github.com/users/michel-slm/following{/other_user}",
        "gists_url": "https://api.github.com/users/michel-slm/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/michel-slm",
        "id": 85603,
        "login": "michel-slm",
        "node_id": "MDQ6VXNlcjg1NjAz",
        "organizations_url": "https://api.github.com/users/michel-slm/orgs",
        "received_events_url": "https://api.github.com/users/michel-slm/received_events",
        "repos_url": "https://api.github.com/users/michel-slm/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/michel-slm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/michel-slm/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/michel-slm"
    }
}