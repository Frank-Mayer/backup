{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "test_vim.py fails with Python 3.12 (Fedora 39). It works fine on Fedora 38 with Python 3.11. I've packaged pynvim 798dfc3fa67c566867715852edd440c6c9efe164 for Fedora.\r\n\r\n```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.12.0rc1, pytest-7.3.2, pluggy-1.2.0\r\ncachedir: .tox/py312/.pytest_cache\r\nrootdir: /builddir/build/BUILD/pynvim-0.4.3\r\nconfigfile: setup.cfg\r\ntestpaths: test\r\nplugins: timeout-2.1.0, asyncio-0.21.0\r\nasyncio: mode=Mode.STRICT\r\ncollected 70 items\r\ntest/test_buffer.py .................                                    [ 24%]\r\ntest/test_client_rpc.py ....                                             [ 30%]\r\ntest/test_concurrency.py ..                                              [ 32%]\r\ntest/test_decorators.py .                                                [ 34%]\r\ntest/test_events.py ....                                                 [ 40%]\r\ntest/test_host.py ....                                                   [ 45%]\r\ntest/test_logging.py .                                                   [ 47%]\r\ntest/test_tabpage.py .....                                               [ 54%]\r\ntest/test_vim.py ..................F.                                    [ 82%]\r\ntest/test_window.py ............                                         [100%]\r\n=================================== FAILURES ===================================\r\n___________________________________ test_cwd ___________________________________\r\nvim = <pynvim.api.nvim.Nvim object at 0x7f92c0ccd850>\r\ntmpdir = local('/tmp/pytest-of-mockbuild/pytest-5/test_cwd0')\r\n    def test_cwd(vim: Nvim, tmpdir: Any) -> None:\r\n>       vim.command('python3 import os')\r\ntest/test_vim.py:201: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npynvim/api/nvim.py:311: in command\r\n    return self.request('nvim_command', string, **kwargs)\r\npynvim/api/nvim.py:199: in request\r\n    res = self._session.request(name, *args, **kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nself = <pynvim.msgpack_rpc.session.Session object at 0x7f92c0cce210>\r\nmethod = 'nvim_command', args = ('python3 import os',), kwargs = {}\r\nasync_ = False\r\nv = ([0, 'Vim(python3):E319: No \"python3\" provider found. Run \":checkhealth provider\"'], None)\r\nerr = [0, 'Vim(python3):E319: No \"python3\" provider found. Run \":checkhealth provider\"']\r\nrv = None\r\n    def request(self, method: AnyStr, *args: Any, **kwargs: Any) -> Any:\r\n        \"\"\"Send a msgpack-rpc request and block until as response is received.\r\n    \r\n        If the event loop is running, this method must have been called by a\r\n        request or notification handler running on a greenlet. In that case,\r\n        send the quest and yield to the parent greenlet until a response is\r\n        available.\r\n    \r\n        When the event loop is not running, it will perform a blocking request\r\n        like this:\r\n        - Send the request\r\n        - Run the loop until the response is available\r\n        - Put requests/notifications received while waiting into a queue\r\n    \r\n        If the `async_` flag is present and True, a asynchronous notification\r\n        is sent instead. This will never block, and the return value or error\r\n        is ignored.\r\n        \"\"\"\r\n        async_ = check_async(kwargs.pop('async_', None), kwargs, False)\r\n        if async_:\r\n            self._async_session.notify(method, args)\r\n            return\r\n    \r\n        if kwargs:\r\n            raise ValueError(\"request got unsupported keyword argument(s): {}\"\r\n                             .format(', '.join(kwargs.keys())))\r\n    \r\n        if self._is_running:\r\n            v = self._yielding_request(method, args)\r\n        else:\r\n            v = self._blocking_request(method, args)\r\n        if not v:\r\n            # EOF\r\n            raise OSError('EOF')\r\n        err, rv = v\r\n        if err:\r\n            info(\"'Received error: %s\", err)\r\n>           raise self.error_wrapper(err)\r\nE           pynvim.api.common.NvimError: Vim(python3):E319: No \"python3\" provider found. Run \":checkhealth provider\"\r\npynvim/msgpack_rpc/session.py:137: NvimError\r\n------------------------------ Captured log call -------------------------------\r\nINFO     pynvim.msgpack_rpc.session:session.py:136 'Received error: [0, 'Vim(python3):E319: No \"python3\" provider found. Run \":checkhealth provider\"']\r\n=============================== warnings summary ===============================\r\ntest/test_buffer.py: 17 warnings\r\ntest/test_client_rpc.py: 4 warnings\r\ntest/test_concurrency.py: 2 warnings\r\ntest/test_events.py: 4 warnings\r\ntest/test_host.py: 4 warnings\r\ntest/test_tabpage.py: 5 warnings\r\ntest/test_vim.py: 20 warnings\r\ntest/test_window.py: 12 warnings\r\n  /usr/lib64/python3.12/asyncio/events.py:824: DeprecationWarning: 'get_child_watcher' is deprecated as of Python 3.12 and will be removed in Python 3.14.\r\n    return get_event_loop_policy().get_child_watcher()\r\ntest/test_buffer.py: 2 warnings\r\ntest/test_client_rpc.py: 1 warning\r\ntest/test_events.py: 1 warning\r\ntest/test_host.py: 1 warning\r\ntest/test_tabpage.py: 1 warning\r\ntest/test_vim.py: 3 warnings\r\ntest/test_window.py: 2 warnings\r\n  /usr/lib/python3.12/site-packages/_pytest/unraisableexception.py:78: PytestUnraisableExceptionWarning: Exception ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\n  \r\n  Traceback (most recent call last):\r\n    File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n      self.close()\r\n    File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n      proto.pipe.close()\r\n    File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n      self.write_eof()\r\n    File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n      self._loop.call_soon(self._call_connection_lost, None)\r\n    File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n      self._check_closed()\r\n    File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n      raise RuntimeError('Event loop is closed')\r\n  RuntimeError: Event loop is closed\r\n  \r\n    warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n=========================== short test summary info ============================\r\nFAILED test/test_vim.py::test_cwd - pynvim.api.common.NvimError: Vim(python3)...\r\n================== 1 failed, 69 passed, 79 warnings in 3.04s ===================\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n    self.close()\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n    proto.pipe.close()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n    self.write_eof()\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\nRuntimeError: Event loop is closed\r\nException ignored in: <function BaseSubprocessTransport.__del__ at 0x7f92c10b1b20>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 126, in __del__\r\n  File \"/usr/lib64/python3.12/asyncio/base_subprocess.py\", line 104, in close\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 768, in close\r\n  File \"/usr/lib64/python3.12/asyncio/unix_events.py\", line 754, in write_eof\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 772, in call_soon\r\n  File \"/usr/lib64/python3.12/asyncio/base_events.py\", line 519, in _check_closed\r\nRuntimeError: Event loop is closed\r\npy312: exit 1 (3.54 seconds) /builddir/build/BUILD/pynvim-0.4.3> python -m pytest pid=458\r\n  py312: FAIL code 1 (3.56=setup[0.01]+cmd[3.54] seconds)\r\n  evaluation failed :( (3.63 seconds)\r\n```",
    "closed_at": "2023-09-02T18:09:46Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Duplicate of #528 ",
            "created_at": "2023-09-02T18:02:42Z",
            "html_url": "https://github.com/neovim/pynvim/issues/532#issuecomment-1703902068",
            "id": 1703902068,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/532",
            "node_id": "IC_kwDOASpKTs5lj3t0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1703902068/reactions"
            },
            "updated_at": "2023-09-02T18:02:42Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1703902068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/532/comments",
    "created_at": "2023-09-02T17:59:41Z",
    "events_url": "https://api.github.com/repos/neovim/pynvim/issues/532/events",
    "html_url": "https://github.com/neovim/pynvim/issues/532",
    "id": 1878788954,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/532/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOASpKTs5v_Ata",
    "number": 532,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/pynvim/issues/532/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/pynvim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/pynvim/issues/532/timeline",
    "title": "test_vim.py fails with Python 3.12",
    "updated_at": "2023-09-02T18:09:46Z",
    "url": "https://api.github.com/repos/neovim/pynvim/issues/532",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/545480?v=4",
        "events_url": "https://api.github.com/users/cryptomilk/events{/privacy}",
        "followers_url": "https://api.github.com/users/cryptomilk/followers",
        "following_url": "https://api.github.com/users/cryptomilk/following{/other_user}",
        "gists_url": "https://api.github.com/users/cryptomilk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/cryptomilk",
        "id": 545480,
        "login": "cryptomilk",
        "node_id": "MDQ6VXNlcjU0NTQ4MA==",
        "organizations_url": "https://api.github.com/users/cryptomilk/orgs",
        "received_events_url": "https://api.github.com/users/cryptomilk/received_events",
        "repos_url": "https://api.github.com/users/cryptomilk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/cryptomilk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cryptomilk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/cryptomilk"
    }
}