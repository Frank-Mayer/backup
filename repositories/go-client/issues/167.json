{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6366270?v=4",
        "events_url": "https://api.github.com/users/zchee/events{/privacy}",
        "followers_url": "https://api.github.com/users/zchee/followers",
        "following_url": "https://api.github.com/users/zchee/following{/other_user}",
        "gists_url": "https://api.github.com/users/zchee/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zchee",
        "id": 6366270,
        "login": "zchee",
        "node_id": "MDQ6VXNlcjYzNjYyNzA=",
        "organizations_url": "https://api.github.com/users/zchee/orgs",
        "received_events_url": "https://api.github.com/users/zchee/received_events",
        "repos_url": "https://api.github.com/users/zchee/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zchee/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zchee/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zchee"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/6366270?v=4",
            "events_url": "https://api.github.com/users/zchee/events{/privacy}",
            "followers_url": "https://api.github.com/users/zchee/followers",
            "following_url": "https://api.github.com/users/zchee/following{/other_user}",
            "gists_url": "https://api.github.com/users/zchee/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zchee",
            "id": 6366270,
            "login": "zchee",
            "node_id": "MDQ6VXNlcjYzNjYyNzA=",
            "organizations_url": "https://api.github.com/users/zchee/orgs",
            "received_events_url": "https://api.github.com/users/zchee/received_events",
            "repos_url": "https://api.github.com/users/zchee/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zchee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zchee/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zchee"
        }
    ],
    "author_association": "MEMBER",
    "body": "# Problem\r\n\r\nThe design, and usage, of remote plugins can be simplified, as described in https://github.com/neovim/neovim/issues/27949 \r\n\r\ntl;dr:\r\n\r\n- remove the concept of \"remote plugins\"\r\n- instead, any Go module that imports the go-client can call [RegisterHandler](https://pkg.go.dev/github.com/neovim/go-client/nvim#Nvim.RegisterHandler) to handle requests from Nvim\r\n- \"remote plugins\" become plain old Lua plugins which call RPC methods on the Go module\r\n\r\n# Solution\r\n\r\n- [ ] Apply the above proposal to go-client. go-client [already supports](https://github.com/neovim/go-client/issues/167#issuecomment-2106427175) `RegisterHandler`, so the remaining tasks are:\r\n    - [ ] \"Encapsulate the stdio related code in a helper function.\"\r\n    - [ ] Update docs\r\n        - https://github.com/neovim/go-client/pull/172\r\n    - [ ] remove old rplugin-related code\r\n- [ ] Deprecate the old rplugin interface.\r\n    - https://github.com/neovim/go-client/pull/173\r\n\r\n# Reference\r\n\r\n- Implementation in node-client: https://github.com/neovim/node-client/pull/344\r\n- discussion/samples of current go-client interface: https://github.com/neovim/neovim/discussions/27371\r\n- related pynvim issue: https://github.com/neovim/pynvim/issues/567",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "@justinmk I don't understand all the new \"remote modules\" behavior yet, but I decided to work on the migration process ASAP.",
            "created_at": "2024-05-12T22:58:09Z",
            "html_url": "https://github.com/neovim/go-client/issues/167#issuecomment-2106401210",
            "id": 2106401210,
            "issue_url": "https://api.github.com/repos/neovim/go-client/issues/167",
            "node_id": "IC_kwDOAZWux859jSG6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2106401210/reactions"
            },
            "updated_at": "2024-05-12T23:00:03Z",
            "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2106401210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6366270?v=4",
                "events_url": "https://api.github.com/users/zchee/events{/privacy}",
                "followers_url": "https://api.github.com/users/zchee/followers",
                "following_url": "https://api.github.com/users/zchee/following{/other_user}",
                "gists_url": "https://api.github.com/users/zchee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zchee",
                "id": 6366270,
                "login": "zchee",
                "node_id": "MDQ6VXNlcjYzNjYyNzA=",
                "organizations_url": "https://api.github.com/users/zchee/orgs",
                "received_events_url": "https://api.github.com/users/zchee/received_events",
                "repos_url": "https://api.github.com/users/zchee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zchee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zchee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zchee"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> remove the concept of \"remote plugins\"\r\n\r\nDelete the [plugin](https://pkg.go.dev/github.com/neovim/go-client@v1.2.1/nvim/plugin) package and any references to that package in the documentation.\r\n\r\n> instead, any Go module that imports the go-client can call set_handler('foo', myFunction) to handle the \"foo\" request from Nvim\r\n\r\nThe package accomplishes this goal as is:\r\n\r\n**Step 1** The application [creates a new Nvim client](https://pkg.go.dev/github.com/neovim/go-client/nvim#New) connected to stdio:\r\n\r\n```\r\n// Turn off timestamps in output.\r\nlog.SetFlags(0) \r\n\r\n// Create a client connected to stdout. Configure the client\r\n// to use the standard log package for logging.\r\nv, err := nvim.New(os.Stdin, os.Stdout, os.Stdout, log.Printf)\r\nif err != nil {\r\n    log.Fatal(err)\r\n}\r\n\r\n// Redirect the application's direct use of stdout to stderr.\r\n// Direct writes by the application garble the RPC stream.\r\nos.Stdout = os.Stderr\r\n```\r\n\r\n**Step 2** The application registers handlers with the nvim client using the [client's RegisterHandler method](https://pkg.go.dev/github.com/neovim/go-client/nvim#Nvim.RegisterHandler).\r\n\r\n**Step 3**  The application runs the the RPC message loop.\r\n\r\n```\r\nif err := v.Serve(); err != nil {\r\n    log.Fatal(err)\r\n}\r\n```\r\n\r\n**Optional enhancement** Encapsulate the stdio related code in a helper function.\r\n```\r\npackage nvim\r\n\r\nimport (\r\n    \"log\"\r\n    \"os\"\r\n)\r\n\r\n// NewStdio creates a client connected to the process stdio.\r\nfunc NewStdio(logf func(string ...any)) (*Nvim, error) {\r\n    v, err := nvim.New(os.Stdin, os.Stdout, os.Stdout, logf)\r\n    if err != nil {\r\n        return nil, err\r\n    }\r\n    os.Stdout = os.Stderr\r\n    return v, nil\r\n}\r\n\r\n```\r\n\r\nExample use:\r\n\r\n```\r\npackage main\r\n\r\nimport  (\r\n    \"log\"\r\n    \"github.com/neovim/go-client/nvim\"\r\n)\r\n\r\nfunc clearCurrentLine(v *nvim.Nvim) {\r\n     v.SetCurrentLine([]byte{})\r\n}\r\n\r\nfunc main() {\r\n    v, err := nvim.NewStdio(log.Printf)\r\n    if err != nil { log.Fatal(err) }\r\n    v.RegisterHandler(\"clearCurrentLine\", clearCurrentLine)\r\n    if err := v.Serve(); err != nil { log.Fatal(err) }\r\n}\r\n\r\n```\r\n  \r\nEdit:  I moved the call to v.Serve() from the helper function to the application's main. This gives the application more control over how Serve() is run.\r\n\r\nEdit: I wrote the code in this comment directly in the issue tracker.  The code has not been compiled, let alone tested.",
            "created_at": "2024-05-13T00:17:41Z",
            "html_url": "https://github.com/neovim/go-client/issues/167#issuecomment-2106427175",
            "id": 2106427175,
            "issue_url": "https://api.github.com/repos/neovim/go-client/issues/167",
            "node_id": "IC_kwDOAZWux859jYcn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2106427175/reactions"
            },
            "updated_at": "2024-05-13T14:04:48Z",
            "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2106427175",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33411?v=4",
                "events_url": "https://api.github.com/users/garyburd/events{/privacy}",
                "followers_url": "https://api.github.com/users/garyburd/followers",
                "following_url": "https://api.github.com/users/garyburd/following{/other_user}",
                "gists_url": "https://api.github.com/users/garyburd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garyburd",
                "id": 33411,
                "login": "garyburd",
                "node_id": "MDQ6VXNlcjMzNDEx",
                "organizations_url": "https://api.github.com/users/garyburd/orgs",
                "received_events_url": "https://api.github.com/users/garyburd/received_events",
                "repos_url": "https://api.github.com/users/garyburd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garyburd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garyburd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garyburd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@garyburd thanks so much, that is very helpful. So this is basically already supported by go-client.\r\n\r\n> **Optional enhancement** Encapsulate the stdio related code in a helper function.\r\n\r\n💯 ",
            "created_at": "2024-05-13T11:09:30Z",
            "html_url": "https://github.com/neovim/go-client/issues/167#issuecomment-2107291682",
            "id": 2107291682,
            "issue_url": "https://api.github.com/repos/neovim/go-client/issues/167",
            "node_id": "IC_kwDOAZWux859mrgi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2107291682/reactions"
            },
            "updated_at": "2024-05-13T11:09:30Z",
            "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2107291682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk Yes, it's already supported.  I propose the following:\r\n\r\n- Prepare for plugin deprecation.\r\n  - Move [plugin documentation](https://github.com/neovim/go-client/blob/9b44fee9cf8b370d8b3372565be66a5208c05bc5/README.md#L9-L70) from the top-level README.md  to new file nvim/plugin/README.md.\r\n  - Add deprecation notice to the  [nvim/plugin package comment](https://github.com/neovim/go-client/blob/main/nvim/plugin/main.go#L1) and the new README file.  Include link to neovim/issues/27949 in the notice.\r\n- Add new directory examples/remote containing the following:\r\n    - ./plugin/goexample.lua: remote module Lua code.\r\n    - ./goexample/{main.go, go.mod}: remote module Go code\r\n    - ./README.md: instructions for building and installing the remote module.\r\n\r\n  The immediate goal is to post minimal working code using the package as is. Let's wait for progress on neovim/issues/27949 before adding the proposed helper function, writing complete documentation and adding tests.\r\n\r\nI have some time for this in the next couple of days. @zchee and @justinmk let me know your thoughts on the proposal.",
            "created_at": "2024-05-13T15:05:08Z",
            "html_url": "https://github.com/neovim/go-client/issues/167#issuecomment-2107905079",
            "id": 2107905079,
            "issue_url": "https://api.github.com/repos/neovim/go-client/issues/167",
            "node_id": "IC_kwDOAZWux859pBQ3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2107905079/reactions"
            },
            "updated_at": "2024-05-13T15:05:08Z",
            "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2107905079",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33411?v=4",
                "events_url": "https://api.github.com/users/garyburd/events{/privacy}",
                "followers_url": "https://api.github.com/users/garyburd/followers",
                "following_url": "https://api.github.com/users/garyburd/following{/other_user}",
                "gists_url": "https://api.github.com/users/garyburd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garyburd",
                "id": 33411,
                "login": "garyburd",
                "node_id": "MDQ6VXNlcjMzNDEx",
                "organizations_url": "https://api.github.com/users/garyburd/orgs",
                "received_events_url": "https://api.github.com/users/garyburd/received_events",
                "repos_url": "https://api.github.com/users/garyburd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garyburd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garyburd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garyburd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@garyburd cc: @justinmk \r\nTotally understand and almost agreed to your proposal. Thanks for quickly improvement!\r\n\r\nMore comment later, because now JST is start working time.",
            "created_at": "2024-05-14T00:48:53Z",
            "html_url": "https://github.com/neovim/go-client/issues/167#issuecomment-2109068009",
            "id": 2109068009,
            "issue_url": "https://api.github.com/repos/neovim/go-client/issues/167",
            "node_id": "IC_kwDOAZWux859tdLp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2109068009/reactions"
            },
            "updated_at": "2024-05-14T00:48:53Z",
            "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2109068009",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6366270?v=4",
                "events_url": "https://api.github.com/users/zchee/events{/privacy}",
                "followers_url": "https://api.github.com/users/zchee/followers",
                "following_url": "https://api.github.com/users/zchee/following{/other_user}",
                "gists_url": "https://api.github.com/users/zchee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zchee",
                "id": 6366270,
                "login": "zchee",
                "node_id": "MDQ6VXNlcjYzNjYyNzA=",
                "organizations_url": "https://api.github.com/users/zchee/orgs",
                "received_events_url": "https://api.github.com/users/zchee/received_events",
                "repos_url": "https://api.github.com/users/zchee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zchee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zchee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zchee"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The immediate goal is to post minimal working code using the package as is.\r\n\r\nSounds good!\r\n\r\n> Let's wait for progress on neovim/issues/27949 before adding the proposed helper function, writing complete documentation and adding tests.\r\n\r\n27949 won't be a \"big bang\", we'll have to do it incrementally.\r\n\r\nSince go-client already has `RegisterHandler`, if we provide a full example (https://github.com/neovim/go-client/pull/172) that shows a Lua plugin starting a go-client process and calling RPC methods via `vim.rpcrequest`/`vim.rpcnotify`, there isn't really anything blocking us from officially deprecating the go-client rplugin support.\r\n\r\nThis will be doubly helpful, as an end-to-end demonstration of the logistics for 27949.\r\n\r\nOf course, in the future Nvim may gain nice-to-have features that make it more convenient to spin up a long-lived client and call its RPC methods. But I don't see that as a requirement for this phase.",
            "created_at": "2024-05-14T11:53:18Z",
            "html_url": "https://github.com/neovim/go-client/issues/167#issuecomment-2110009265",
            "id": 2110009265,
            "issue_url": "https://api.github.com/repos/neovim/go-client/issues/167",
            "node_id": "IC_kwDOAZWux859xC-x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2110009265/reactions"
            },
            "updated_at": "2024-05-14T12:53:15Z",
            "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2110009265",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk I wanted to wait on 27949 before adding an API in case the work on 27949 exposes additional requirements for the API.  If you think things are baked enough, then I'll proceed ahead with the API and deprecation.   I may not be able to get to it for a couple of weeks. \r\n\r\nHere's a list of public Go plugins:  https://pkg.go.dev/github.com/neovim/go-client/nvim/plugin?tab=importedby",
            "created_at": "2024-05-14T13:02:41Z",
            "html_url": "https://github.com/neovim/go-client/issues/167#issuecomment-2110181496",
            "id": 2110181496,
            "issue_url": "https://api.github.com/repos/neovim/go-client/issues/167",
            "node_id": "IC_kwDOAZWux859xtB4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2110181496/reactions"
            },
            "updated_at": "2024-05-14T13:02:41Z",
            "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2110181496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33411?v=4",
                "events_url": "https://api.github.com/users/garyburd/events{/privacy}",
                "followers_url": "https://api.github.com/users/garyburd/followers",
                "following_url": "https://api.github.com/users/garyburd/following{/other_user}",
                "gists_url": "https://api.github.com/users/garyburd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garyburd",
                "id": 33411,
                "login": "garyburd",
                "node_id": "MDQ6VXNlcjMzNDEx",
                "organizations_url": "https://api.github.com/users/garyburd/orgs",
                "received_events_url": "https://api.github.com/users/garyburd/received_events",
                "repos_url": "https://api.github.com/users/garyburd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garyburd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garyburd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garyburd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> in case the work on 27949 exposes additional requirements for the API\r\n\r\nWe may weave-in more nice-to-have ideas later, but that will just upgrade the UX rather than be a hard requirement.\r\n\r\nCurrently, the (informal) requirements for a remote plugin are:\r\n\r\n1. [responds to \"poll\" ](https://github.com/neovim/neovim/blob/2f4792943aa92223fadd472f20449cd13707ff7a/runtime/autoload/provider.vim#L13) (I guess this is more for \"providers\" than rplugins)\r\n    - seems potentially worth keeping as a basic \"liveness check\".\r\n3. returns a [\"spec\"](https://github.com/neovim/neovim/blob/2f4792943aa92223fadd472f20449cd13707ff7a/runtime/autoload/remote/host.vim#L84)\r\n    - can probably be dropped. remote plugins will be coupled with their Lua setup code, which inherently defines the \"spec\".",
            "created_at": "2024-05-14T13:28:39Z",
            "html_url": "https://github.com/neovim/go-client/issues/167#issuecomment-2110250136",
            "id": 2110250136,
            "issue_url": "https://api.github.com/repos/neovim/go-client/issues/167",
            "node_id": "IC_kwDOAZWux859x9yY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2110250136/reactions"
            },
            "updated_at": "2024-05-14T13:28:39Z",
            "url": "https://api.github.com/repos/neovim/go-client/issues/comments/2110250136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/go-client/issues/167/comments",
    "created_at": "2024-05-08T11:01:16Z",
    "events_url": "https://api.github.com/repos/neovim/go-client/issues/167/events",
    "html_url": "https://github.com/neovim/go-client/issues/167",
    "id": 2285314937,
    "labels": [
        {
            "color": "C2E0C6",
            "default": true,
            "description": "",
            "id": 147452369,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWwxNDc0NTIzNjk=",
            "url": "https://api.github.com/repos/neovim/go-client/labels/enhancement"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 1146384604,
            "name": "area/nvim",
            "node_id": "MDU6TGFiZWwxMTQ2Mzg0NjA0",
            "url": "https://api.github.com/repos/neovim/go-client/labels/area/nvim"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 1146384662,
            "name": "area/msgpack",
            "node_id": "MDU6TGFiZWwxMTQ2Mzg0NjYy",
            "url": "https://api.github.com/repos/neovim/go-client/labels/area/msgpack"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/go-client/issues/167/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAZWux86INyN5",
    "number": 167,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/go-client/issues/167/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/go-client",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/go-client/issues/167/timeline",
    "title": "simplify remote plugins",
    "updated_at": "2024-05-14T13:28:40Z",
    "url": "https://api.github.com/repos/neovim/go-client/issues/167",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}