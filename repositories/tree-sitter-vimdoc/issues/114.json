{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hi, some time ago I have noticed a problem where some tokens from injections in vimdoc code block are highlighted with color of `@text.literal.vimdoc`.\r\n\r\n#### `nvim -V`:\r\n```\r\nNVIM v0.10.0-dev-cdc8bac\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.1700008891\r\nRun \"nvim -V1 -v\" for more info\r\n```\r\n\r\n#### `nvim -u NORC`:\r\n![image](https://github.com/neovim/tree-sitter-vimdoc/assets/88032359/fab22594-5023-4fd9-9cf9-16db9f850d2d)\r\n\r\n#### `:Inspect` over `age` variable (its color is the problem).\r\n![image](https://github.com/neovim/tree-sitter-vimdoc/assets/88032359/139b7042-d80e-421b-8630-f02774e787e1)\r\n\r\n#### `:InspectTree` for the code block:\r\n```scm\r\n (line) ; [6:1 - 10:0]\r\n  (codeblock) ; [6:1 - 10:0]\r\n   (language) ; [6:2 - 7:0]\r\n   (code) ; [7:1 - 10:0]\r\n    (comment) ; [7:5 - 76]\r\n    (declaration) ; [8:5 - 12]\r\n     type: (primitive_type) ; [8:5 - 7]\r\n     declarator: (identifier) ; [8:9 - 11]\r\n    (declaration) ; [9:5 - 30]\r\n     (storage_class_specifier) ; [9:5 - 10]\r\n     (type_qualifier) ; [9:12 - 16]\r\n     type: (primitive_type) ; [9:18 - 20]\r\n     declarator: (init_declarator) ; [9:22 - 29]\r\n      declarator: (identifier) ; [9:22 - 24]\r\n      value: (number_literal) ; [9:28 - 29]\r\n    (line) ; [7:1 - 8:0]\r\n    (line) ; [8:1 - 9:0]\r\n    (line) ; [9:1 - 10:0]\r\n```\r\n### Regular C file\r\n![image](https://github.com/neovim/tree-sitter-vimdoc/assets/88032359/b1b8d275-bb8a-4bf3-a058-6ea3807eaf02)\r\n\r\n---\r\n\r\nSo, my first guess was that `(line)` nodes somehow break the highlights. I updated the parser a little bit so that the `(line)` children of `(code)` are inlined and this is the result:\r\n\r\n![image](https://github.com/neovim/tree-sitter-vimdoc/assets/88032359/b500286d-3d12-4bba-bd08-9ff351052174)\r\n\r\nThere was the same issue in https://github.com/nvim-treesitter/nvim-treesitter/issues/4887 - they fixed it by lowering the priority of the code block highlight.\r\n\r\nHere is my approach (it will require snapshot updates).\r\nLet me know if I should create a PR for this issue and which way of fixing it you prefer.\r\n\r\n```patch\r\nFrom e4b7f10306b6fa4080e8532acb5e8bcc6c08fadf Mon Sep 17 00:00:00 2001\r\nFrom: taekwombo <88032359+taekwombo@users.noreply.github.com>\r\nDate: Sat, 18 Nov 2023 19:05:37 +0100\r\nSubject: [PATCH] fix: inline \"code\" descendants\r\n\r\n---\r\n grammar.js | 3 ++-\r\n 1 file changed, 2 insertions(+), 1 deletion(-)\r\n\r\ndiff --git a/grammar.js b/grammar.js\r\nindex aff66e2..85e9372 100644\r\n--- a/grammar.js\r\n+++ b/grammar.js\r\n@@ -13,6 +13,7 @@ const _li_token = /[-â€¢][ ]+/;\r\n module.exports = grammar({\r\n   name: 'vimdoc',\r\n \r\n+  inline: ($) => [$.line_code],\r\n   extras: () => [/[\\t ]/],\r\n \r\n   // inline: ($) => [\r\n@@ -125,7 +126,7 @@ module.exports = grammar({\r\n       choice(\r\n         alias(token.immediate(/[a-z0-9]+\\n/), $.language),\r\n         token.immediate('\\n')),\r\n-      alias(repeat1(alias($.line_code, $.line)), $.code),\r\n+      alias(repeat1($.line_code), $.code),\r\n       // Codeblock ends if a line starts with non-whitespace.\r\n       // Terminating \"<\" is consumed in other rules.\r\n     )),\r\n-- \r\n2.42.0\r\n\r\n\r\n```\r\n\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/tree-sitter-vimdoc/issues/114/comments",
    "created_at": "2023-11-18T18:49:34Z",
    "events_url": "https://api.github.com/repos/neovim/tree-sitter-vimdoc/issues/114/events",
    "html_url": "https://github.com/neovim/tree-sitter-vimdoc/issues/114",
    "id": 2000535057,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/tree-sitter-vimdoc/issues/114/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOF5RDbc53Pb4R",
    "number": 114,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/tree-sitter-vimdoc/issues/114/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/tree-sitter-vimdoc",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/tree-sitter-vimdoc/issues/114/timeline",
    "title": "Weird highlights due to children of (code) node",
    "updated_at": "2023-11-18T18:50:20Z",
    "url": "https://api.github.com/repos/neovim/tree-sitter-vimdoc/issues/114",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/88032359?v=4",
        "events_url": "https://api.github.com/users/taekwombo/events{/privacy}",
        "followers_url": "https://api.github.com/users/taekwombo/followers",
        "following_url": "https://api.github.com/users/taekwombo/following{/other_user}",
        "gists_url": "https://api.github.com/users/taekwombo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/taekwombo",
        "id": 88032359,
        "login": "taekwombo",
        "node_id": "MDQ6VXNlcjg4MDMyMzU5",
        "organizations_url": "https://api.github.com/users/taekwombo/orgs",
        "received_events_url": "https://api.github.com/users/taekwombo/received_events",
        "repos_url": "https://api.github.com/users/taekwombo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/taekwombo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/taekwombo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/taekwombo"
    }
}